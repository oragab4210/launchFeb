[{"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/store.ts":"1","/Users/omarragab/Documents/Job/ResumeProject1/client/src/utils/requireAuth.js":"2","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/RegisterPage/RegisterPage.js":"3","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/Error404Page/Error404Page.js":"4","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/ProfilePage/ProfilePage.js":"5","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/FriendPage/FriendPage.js":"6","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/HomePage/HomePage.js":"7","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/ChatPage/ChatPage.js":"8","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/LoginPage/LoginPage.js":"9","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/previousMessagesSlice.ts":"10","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/eUserAddresses.ts":"11","/Users/omarragab/Documents/Job/ResumeProject1/client/src/utils/history.ts":"12","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/currentUserSlice.ts":"13","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/addOneSlice.ts":"14","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/roomSlice.ts":"15","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/CurrentUser.js":"16","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/ProfilePic/ProfilePic.js":"17","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/Info/Info.js":"18","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js":"19","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/RoomsList/RoomsList.js":"20","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/hooks.ts":"21","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/convoExists.js":"22","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/useChatRoom.js":"23","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/getUsers.js":"24","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/Signup.js":"25","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/Login.js":"26","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/Logout.js":"27","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/EditUser.js":"28","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/addConversation.js":"29","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/useMessages.js":"30","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/getMessages.js":"31","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editMessage.js":"32","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/addPost.js":"33","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/deletePost.js":"34","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editPost.js":"35","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/addComment.js":"36","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editComment.js":"37","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js":"38","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/FriendList/FriendList.js":"39","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js":"40","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/SideBar/SideBar.js":"41","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Landing/RegisterForm/RegisterForm.js":"42","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Landing/LogInForm/LogInForm.js":"43","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/PostList/PostList.js":"44","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/SideNav/SideNav.js":"45","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Landing/LogInForm/modal/modal.js":"46","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/Post/Post.js":"47","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakeComment/MakeComment.js":"48","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/Comment/Comment.js":"49","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/CommentList/CommentList.js":"50","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js":"51","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/modal/modal.js":"52","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/Dropdown/Dropdown.js":"53","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/ProfileDropdownInitiator/ProfileDropdownInitiator.js":"54","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/TestDropDown/TestDropDown.js":"55","/Users/omarragab/Documents/Job/ResumeProject1/client/src/index.js":"56","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/setUser.js":"57","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/LoadingPage/LoadingPage.tsx":"58","/Users/omarragab/Documents/Job/ResumeProject1/client/src/utils/useIPFS.js":"59","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakePost/MakePost.js":"60","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeleteComment/EditDeleteComment.js":"61","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeleteComment/modal/modal.js":"62","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/deleteComment.js":"63","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js":"64","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/modal/modal.js":"65","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editUser.js":"66","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/onlineUsersSlice.ts":"67","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/socketSlice.ts":"68","/Users/omarragab/Documents/Job/ResumeProject1/client/src/App.js":"69","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/LoadingSpinner/LoadingSpinner.js":"70"},{"size":1044,"mtime":1644534150308,"results":"71","hashOfConfig":"72"},{"size":907,"mtime":1643938876295,"results":"73","hashOfConfig":"72"},{"size":331,"mtime":1643736242793,"results":"74","hashOfConfig":"72"},{"size":845,"mtime":1644556017084,"results":"75","hashOfConfig":"72"},{"size":390,"mtime":1644093528082,"results":"76","hashOfConfig":"72"},{"size":1430,"mtime":1644363702996,"results":"77","hashOfConfig":"72"},{"size":655,"mtime":1644058902400,"results":"78","hashOfConfig":"72"},{"size":1727,"mtime":1644554414171,"results":"79","hashOfConfig":"72"},{"size":967,"mtime":1644230148009,"results":"80","hashOfConfig":"72"},{"size":502,"mtime":1637179985839,"results":"81","hashOfConfig":"72"},{"size":510,"mtime":1637179985839,"results":"82","hashOfConfig":"72"},{"size":88,"mtime":1637028335698,"results":"83","hashOfConfig":"72"},{"size":554,"mtime":1643755372204,"results":"84","hashOfConfig":"72"},{"size":467,"mtime":1637179985838,"results":"85","hashOfConfig":"72"},{"size":470,"mtime":1637179985839,"results":"86","hashOfConfig":"72"},{"size":1185,"mtime":1644355937163,"results":"87","hashOfConfig":"72"},{"size":1890,"mtime":1644576407302,"results":"88","hashOfConfig":"72"},{"size":6001,"mtime":1644555335889,"results":"89","hashOfConfig":"72"},{"size":4198,"mtime":1644554713853,"results":"90","hashOfConfig":"72"},{"size":4016,"mtime":1644553917083,"results":"91","hashOfConfig":"72"},{"size":269,"mtime":1637179985840,"results":"92","hashOfConfig":"72"},{"size":167,"mtime":1637213795430,"results":"93","hashOfConfig":"72"},{"size":3222,"mtime":1644419481907,"results":"94","hashOfConfig":"72"},{"size":137,"mtime":1644354835437,"results":"95","hashOfConfig":"72"},{"size":225,"mtime":1644561611517,"results":"96","hashOfConfig":"72"},{"size":195,"mtime":1637213795428,"results":"97","hashOfConfig":"72"},{"size":119,"mtime":1637213795429,"results":"98","hashOfConfig":"72"},{"size":1013,"mtime":1644219825778,"results":"99","hashOfConfig":"72"},{"size":213,"mtime":1637213795429,"results":"100","hashOfConfig":"72"},{"size":4001,"mtime":1643760481587,"results":"101","hashOfConfig":"72"},{"size":198,"mtime":1637213795431,"results":"102","hashOfConfig":"72"},{"size":268,"mtime":1637213795430,"results":"103","hashOfConfig":"72"},{"size":215,"mtime":1639809069541,"results":"104","hashOfConfig":"72"},{"size":169,"mtime":1640046268467,"results":"105","hashOfConfig":"72"},{"size":445,"mtime":1640169796153,"results":"106","hashOfConfig":"72"},{"size":293,"mtime":1640417288837,"results":"107","hashOfConfig":"72"},{"size":374,"mtime":1644309378151,"results":"108","hashOfConfig":"72"},{"size":5853,"mtime":1644530398531,"results":"109","hashOfConfig":"72"},{"size":8179,"mtime":1644549921202,"results":"110","hashOfConfig":"72"},{"size":2429,"mtime":1644551116210,"results":"111","hashOfConfig":"72"},{"size":1621,"mtime":1643737660785,"results":"112","hashOfConfig":"72"},{"size":3554,"mtime":1644562455993,"results":"113","hashOfConfig":"72"},{"size":2716,"mtime":1644563479459,"results":"114","hashOfConfig":"72"},{"size":3098,"mtime":1644415012448,"results":"115","hashOfConfig":"72"},{"size":685,"mtime":1644229880817,"results":"116","hashOfConfig":"72"},{"size":1206,"mtime":1643738617634,"results":"117","hashOfConfig":"72"},{"size":8363,"mtime":1644301336660,"results":"118","hashOfConfig":"72"},{"size":3293,"mtime":1644219912018,"results":"119","hashOfConfig":"72"},{"size":6160,"mtime":1644354561245,"results":"120","hashOfConfig":"72"},{"size":1343,"mtime":1644225112434,"results":"121","hashOfConfig":"72"},{"size":3879,"mtime":1644560027051,"results":"122","hashOfConfig":"72"},{"size":1238,"mtime":1643969900701,"results":"123","hashOfConfig":"72"},{"size":1786,"mtime":1643868811584,"results":"124","hashOfConfig":"72"},{"size":1028,"mtime":1644141827698,"results":"125","hashOfConfig":"72"},{"size":3857,"mtime":1644555501979,"results":"126","hashOfConfig":"72"},{"size":2000,"mtime":1644383033226,"results":"127","hashOfConfig":"72"},{"size":97,"mtime":1643916767769,"results":"128","hashOfConfig":"72"},{"size":445,"mtime":1644556038321,"results":"129","hashOfConfig":"72"},{"size":3533,"mtime":1644115251849,"results":"130","hashOfConfig":"72"},{"size":1464,"mtime":1644142233019,"results":"131","hashOfConfig":"72"},{"size":4485,"mtime":1644559697345,"results":"132","hashOfConfig":"72"},{"size":1248,"mtime":1644186599312,"results":"133","hashOfConfig":"72"},{"size":175,"mtime":1644213844918,"results":"134","hashOfConfig":"72"},{"size":4366,"mtime":1644558207361,"results":"135","hashOfConfig":"72"},{"size":1248,"mtime":1644216556731,"results":"136","hashOfConfig":"72"},{"size":1013,"mtime":1644219825778,"results":"137","hashOfConfig":"72"},{"size":554,"mtime":1644472474506,"results":"138","hashOfConfig":"72"},{"size":501,"mtime":1644536019897,"results":"139","hashOfConfig":"72"},{"size":2152,"mtime":1644549110284,"results":"140","hashOfConfig":"72"},{"size":732,"mtime":1644563067220,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},"1jwh4th",{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"149"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"149"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"149"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"149"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"149"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"149"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"149"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"149"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"149"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"149"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"149"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"149"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"149"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"149"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"149"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"149"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"149"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"149"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"149"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"149"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"149"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"149"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"149"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"149"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"149"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"149"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/store.ts",["323","324"],"import { configureStore } from \"@reduxjs/toolkit\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import { addOneReducer } from \"./reducers/addOneReducer\";\nimport addOneReducer from \"./features/addOneSlice\";\nimport currentRoomReducer from \"./features/roomSlice\";\nimport eUserAddressesReducer from \"./features/eUserAddresses\";\nimport currentUserReducer from \"./features/currentUserSlice\";\nimport previousMessagesReducer from \"./features/previousMessagesSlice\";\nimport onlineUsersReducer from \"./features/onlineUsersSlice\";\nimport socketSliceReducer from \"./features/socketSlice\";\nexport const store = configureStore({\n  reducer: {\n    currentNumber: addOneReducer,\n    currentRoom: currentRoomReducer,\n    userAddresses: eUserAddressesReducer,\n    currentUser: currentUserReducer,\n    previousMessages: previousMessagesReducer,\n    onlineUsers: onlineUsersReducer,\n    socket: socketSliceReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n",["325","326"],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/utils/requireAuth.js",["327","328","329","330","331"],"import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport getCurrentUser from \"../GQL/queries/CurrentUser\";\nimport LoginPage from \"../_pages/LoginPage/LoginPage\";\n// import history from \"./history\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport LoadingPage from \"../_pages/LoadingPage/LoadingPage\";\n\nconst RequireAuth = (WrappedComponent) => {\n  const CheckAuth = (props) => {\n    const { pathname } = useLocation();\n    const { loading, error, data } = useQuery(getCurrentUser);\n\n    useEffect(() => {\n      if (!loading && !data.user2) {\n        props.history.push(\"/login\");\n      }\n    }, [data]);\n\n    if (data?.user2) {\n      // props.history.push(pathname.p);\n      return <WrappedComponent {...props} />;\n    } else {\n      // props.history.push(\"/login\");\n      return <LoadingPage />;\n    }\n  };\n  return CheckAuth;\n};\n\nexport default RequireAuth;\n",["332","333"],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/RegisterPage/RegisterPage.js",["334","335"],"import styles from \"./RegisterPage.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport RegisterForm from \"../../components/Landing/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n  return (\n    <div className={styles.container}>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/Error404Page/Error404Page.js",["336","337","338","339","340","341","342","343"],"import styles from \"./Error404Page.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport history from \"../../utils/history\";\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\n\n// .then((e) => (e ? history.push(\"/home\") : null))\n\nconst Error404Page = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Page Not Found</h1>\n      <LoadingSpinner />\n      {/* <button className={styles.btn} onClick={() => history.goBack()}>\n        Return Home\n      </button>\n      {Object.keys(onlineUsers).length} */}\n    </div>\n  );\n};\n\nexport default Error404Page;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/ProfilePage/ProfilePage.js",["344","345"],"import styles from \"./ProfilePage.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Info from \"../../components/Profile/Info/Info\";\nimport ProfilePic from \"../../components/Profile/ProfilePic/ProfilePic\";\n\nconst ProfilePage = () => {\n  return (\n    <div className={styles.container}>\n      <ProfilePic />\n      <Info />\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/FriendPage/FriendPage.js",["346"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./FriendPage.module.css\";\nimport FriendList from \"../../components/Friends/FriendList/FriendList\";\nimport AddFriends from \"../../components/Friends/AddFriends/AddFriends\";\n\nconst FriendPage = () => {\n  const [friendListOpen, setFriendListOpen] = useState(null);\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container1}>\n        <div className={styles.container2}>\n          <div\n            className={`${styles.FriendList} ${\n              friendListOpen === true\n                ? styles.listMoveIn\n                : friendListOpen === false\n                ? styles.listMoveOut\n                : null\n            }\n            \n           \n            `}\n          >\n            <FriendList\n              friendListOpen={friendListOpen}\n              setFriendListOpen={setFriendListOpen}\n            />\n          </div>\n\n          <div\n            className={`${styles.AddFriends} ${\n              friendListOpen === false\n                ? styles.chatMoveIn\n                : friendListOpen === true\n                ? styles.chatMoveOut\n                : null\n            } `}\n          >\n            <AddFriends\n              friendListOpen={friendListOpen}\n              setFriendListOpen={setFriendListOpen}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FriendPage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/HomePage/HomePage.js",["347","348","349"],"import styles from \"./HomePage.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport MakePost from \"../../components/Home/EverythingPosts/MakePost/MakePost\";\nimport PostList from \"../../components/Home/EverythingPosts/PostList/PostList\";\nimport NavBar from \"../../components/Navigation/NavBar/NavBar\";\nconst HomePage = () => {\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container}>\n        <div className={styles.MakePost}>\n          <MakePost />\n        </div>\n        <div className={styles.PostList}>\n          <PostList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/ChatPage/ChatPage.js",["350"],"import styles from \"./ChatPage.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ChatBox2 from \"../../components/CHAT/ChatBox/ChatBox\";\nimport RoomsList from \"../../components/CHAT/RoomsList/RoomsList\";\n\nconst ChatPage = () => {\n  const [currentFriend, setCurrentFriend] = useState(null);\n  const [chooseRoomPage, setChooseRoomPage] = useState(null);\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container1}>\n        <div className={styles.container2}>\n          <div\n            className={`${styles.chatList} ${\n              chooseRoomPage === true\n                ? styles.listMoveIn\n                : chooseRoomPage === false\n                ? styles.listMoveOut\n                : null\n            }\n            \n           \n            `}\n          >\n            <RoomsList\n              chooseRoomPage={chooseRoomPage}\n              setChooseRoomPage={setChooseRoomPage}\n              setCurrentFriend={setCurrentFriend}\n              currentFriend={currentFriend}\n            />\n          </div>\n          <div\n            className={`${styles.chatArea} ${\n              chooseRoomPage === false\n                ? styles.chatMoveIn\n                : chooseRoomPage === true\n                ? styles.chatMoveOut\n                : null\n            } `}\n          >\n            {/* {chooseRoomPage === false ? ( */}\n            <ChatBox2\n              chooseRoomPage={chooseRoomPage}\n              currentFriend={currentFriend}\n              setChooseRoomPage={setChooseRoomPage}\n              setCurrentFriend={setCurrentFriend}\n            />\n            {/* ) : null} */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/LoginPage/LoginPage.js",["351"],"import styles from \"./LoginPage.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport LogInForm from \"../../components/Landing/LogInForm/LogInForm\";\nimport { gsap } from \"gsap\";\n\nconst LoginPage = () => {\n  let textContainer = useRef();\n  let loginFormContainer = useRef();\n\n  useEffect(() => {\n    gsap.from(textContainer.current, { x: -200, opacity: 0, duration: 0.7 });\n    gsap.from(loginFormContainer.current, {\n      y: 200,\n      opacity: 0,\n      duration: 0.7,\n    });\n  });\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.textContainer} ref={textContainer}>\n        <h1 className={styles.title}>facebook</h1>\n        <p className={styles.paragraph}>\n          Connect with friends and the world <br /> around you on Facebook.\n        </p>\n      </div>\n      <div className={styles.LogInForm} ref={loginFormContainer}>\n        <LogInForm />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/previousMessagesSlice.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/eUserAddresses.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/utils/history.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/currentUserSlice.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/addOneSlice.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/roomSlice.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/CurrentUser.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/ProfilePic/ProfilePic.js",["352","353","354","355"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./ProfilePic.module.css\";\nimport useIPFS from \"../../../utils/useIPFS\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport editUserMutation from \"../../../GQL/mutations/editUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\n\nconst ProfilePic = () => {\n  const [editUser] = useMutation(editUserMutation);\n  const { captureFileAndUploadToIPFS } = useIPFS();\n  const [showEditContainer, setShowEditContainer] = useState(true);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  \n  const uploadIPFS_editUser = async (e) => {\n    const url = await captureFileAndUploadToIPFS(e);\n\n    editUser({\n      variables: { id: currentUser.id, profilePic: url },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    }).catch((err) => {\n      const errors = err.graphQLErrors?.map((error) => error.message);\n\n      console.log(errors);\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      {currentUser.profilePic ? (\n        <img className={styles.pic} src={currentUser.profilePic} alt=\"\" />\n      ) : (\n        <img\n          className={styles.pic}\n          src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n          alt=\"\"\n        />\n      )}\n\n      {showEditContainer ? (\n        <div className={styles.onHoverContainer}>\n          <label className={styles.fileButtonLabel}>\n            <input\n              type=\"file\"\n              className={styles.fileButton}\n              onChange={(e) => uploadIPFS_editUser(e)}\n            />\n            Edit\n          </label>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ProfilePic;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/Info/Info.js",["356","357","358","359","360"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./Info.module.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { current } from \"@reduxjs/toolkit\";\n\n// login({\n//   variables: { email: email, password: password },\n//   refetchQueries: [{ query: query }],\n//   awaitRefetchQueries: true,\n// })\n//   .then((e) => (e ? history.push(\"/home\") : null))\n//   .catch((err) => {\n//     const errors = err.graphQLErrors?.map((error) => error.message);\n//     setErrors(errors);\n//     console.log(errors);\n//   });\n\nconst ProfileInfo = () => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let { loading, error, data } = useQuery(query);\n  const [nameText, setNameText] = useState(\"\");\n  const [emailText, setEmailText] = useState(\"\");\n  // const [password, setPassword] = useState(currentUser.password);\n  const [ageText, setAgeText] = useState(\"\");\n  const [editActive, setEditActive] = useState(\"\");\n  // const [change, setChange] = useState(false);\n  /* -------------------------------------------------------------------------- */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  const [editUser] = useMutation(mutation);\n  useEffect(() => {\n    if (data) {\n      const { user2 } = data;\n\n      user2.name === null ? setName(\"\") : setName(user2.name);\n      // user2.name === null ? setNameText(\"\") : setNameText(user2.name);\n      user2.email === null ? setEmail(\"\") : setEmail(user2.email);\n      // setEmail(user2.email);\n      // user2.email === null ? setEmailText(\"\") : setEmailText(user2.email);\n      user2.age === null ? setAge(0) : setAge(user2.age);\n      // user2.age === null ? setAgeText(0) : setAgeText(user2.age);\n      console.log(nameText);\n      console.log(emailText);\n      console.log(ageText);\n    }\n  }, [loading, data, editActive]);\n\n  /* -------------------------------------------------------------------------- */\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const variables = () => {\n      if (emailText.length >= 1) {\n        return { id: data.user2.id, email: emailText };\n      } else if (ageText >= 1) {\n        return { id: data.user2.id, age: ageText };\n      } else if (nameText.length > 0) {\n        return { id: data.user2.id, name: nameText };\n      }\n    };\n\n    editUser({\n      variables: variables(),\n      refetchQueries: [{ query: query }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) => [console.log(\"INFO\", data), setEditActive(null)])\n      .then((res) => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n\n        console.log(errors);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n\n  const renderInfoItems = () => {\n    const infoItems2 = [\n      {\n        Name: \"Name\",\n        name: name,\n        setName: setName,\n        nametext: nameText,\n        setNameText: setNameText,\n      },\n      {\n        Email: \"Email\",\n        email: email,\n        setEmail: setEmail,\n        emailText: emailText,\n        setEmailText: setEmailText,\n      },\n      {\n        Age: \"Age\",\n        age: age,\n        setAge: setAge,\n        agetext: ageText,\n        setAgeText: setAgeText,\n      },\n    ];\n    const onTextChange = (e, item) => {\n      if (typeof Object.values(item)[1] === typeof 1) {\n        Object.values(item)[2](Number(e.target.value));\n        Object.values(item)[4](Number(e.target.value));\n        console.log(nameText);\n        console.log(ageText);\n      } else {\n        Object.values(item)[2](e.target.value);\n        Object.values(item)[4](e.target.value);\n        console.log(nameText);\n        console.log(ageText);\n      }\n    };\n\n    return infoItems2.map((item, index) => {\n      return (\n        <div key={index}>\n          <div className={styles.infoTopics}>\n            <div className={styles.infoEdit}>\n              <div>\n                {editActive === index ? (\n                  <form onSubmit={onSubmit} className={styles.form}>\n                    <h1>{Object.values(item)[0]}:</h1>\n                    <input\n                      placeholder={Object.values(item)[1]}\n                      className={styles.input}\n                      value={Object.values(item)[3]}\n                      onChange={(e) => onTextChange(e, item)}\n                    />\n                    <div className={styles.inputBtnContainer}>\n                      <button className={styles.checkBtn}>&#10003;</button>\n                      <button\n                        className={styles.xBtn}\n                        onClick={() => setEditActive(\"\")}\n                      >\n                        X\n                      </button>\n                    </div>\n                  </form>\n                ) : (\n                  <h1>\n                    {Object.values(item)[0]}: {Object.values(item)[1]}\n                  </h1>\n                )}\n              </div>\n              <button\n                className={styles.editBtn}\n                onClick={() => setEditActive(index)}\n              >\n                Edit\n              </button>\n            </div>\n          </div>\n          {index !== infoItems2.length - 1 ? (\n            <div className={styles.line}></div>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        <h1>Info</h1>\n      </div>\n      <div className={styles.line}></div>\n      {data ? renderInfoItems() : null}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js",["361","362","363","364","365","366","367","368"],"import styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst ChatBox = ({ currentFriend, chooseRoomPage, setChooseRoomPage }) => {\n  const messageRef = useRef();\n  const { messageList, addMessage, setConvoId } = useMessages();\n  const { messages, sendMessage } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector((state) => state.currentRoom.value);\n  const [firsTimeInChat, setFirstTimeInChat] = useState(false);\n  const onlineUsers = useAppSelector((state) => state.onlineUsers.value);\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (chooseRoomPage === true) setFirstTimeInChat(false);\n    console.log(\"room\", chooseRoomPage);\n  }, [chooseRoomPage]);\n\n  useEffect(() => {\n    const scroll = async () => {\n      const delay = (ms) => new Promise((res) => setTimeout(res, ms));\n      if (chooseRoomPage === false && firsTimeInChat === false) {\n        await delay(400);\n        messageRef.current?.scrollIntoView({ behavior: \"auto\" });\n        setFirstTimeInChat(true);\n      } else {\n        if (chooseRoomPage === false) {\n          messageRef.current?.scrollIntoView({ behavior: \"instant\" });\n        }\n      }\n    };\n    scroll();\n  });\n  /* -------------------------------------------------------------------------- */\n  const renderMessages = () => {\n    // ref={messageRef}\n    const listLength = messages.length;\n    return messages.map((msg, index) => {\n      if (index === listLength - 1) {\n        return (\n          <p\n            key={index}\n            ref={messageRef}\n            className={`${msg.isOwner ? styles.blue : styles.red}\n              ${styles.msg}`}\n          >\n            {msg.body}\n          </p>\n        );\n      }\n      return (\n        <p\n          key={index}\n          className={`${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`}\n        >\n          {msg.body}\n        </p>\n      );\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    }\n    // addMessage()\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <div className={styles.friendNameContainer}>\n        <div\n          className={styles.backContainer}\n          onClick={() => setChooseRoomPage(!chooseRoomPage)}\n        >\n          <span className={styles.backArrow}>\n            <p> Rooms </p> <span>&#x21A9;</span>\n          </span>\n        </div>\n\n        {currentFriend ? <h1>{currentFriend.email}</h1> : null}\n\n        {currentFriend ? (\n          onlineUsers.includes(currentFriend.id) ? (\n            <div className={styles.online}></div>\n          ) : (\n            <div className={styles.offline}></div>\n          )\n        ) : null}\n      </div>\n      <div className={styles.messageContainer}>\n        {room === \"\" ? (\n          <div className={styles.noRoomMessageContainer}>\n            Please Select a <br /> Room To Join\n          </div>\n        ) : (\n          <div>\n            <div className={styles.messageList}>\n              {/* messages here */}\n              {renderMessages()}\n              {/* <div ref={messageRef}>{}</div> */}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------------------------- */}\n      </div>\n      <div className={styles.inputBtnContainer}>\n        <form action=\"\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            placeholder=\"Start Chatting\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/RoomsList/RoomsList.js",["369"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./RoomList.module.css\";\nimport useChatRoom from \"../useChatRoom\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { setRoom } from \"../../../redux/features/roomSlice\";\nimport useMessages from \"../useMessages\";\nimport FadeIn from \"react-fade-in\";\n\nconst RoomsList = ({\n  currentFriend,\n  setCurrentFriend,\n  chooseRoomPage,\n  setChooseRoomPage,\n}) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const onlineUsers = useAppSelector((state) => state.onlineUsers.value);\n  const [activeConversations, setActiveConversations] = useState([]);\n  const [roomChange, setRoomChange] = useState(false);\n  const { getCurrentFriendMessages, selectedFriend, setSelectedFriend } =\n    useMessages();\n  /* -------------------------------------------------------------------------- */\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useAppDispatch();\n  const { combineAddresses, setConversationId } = useChatRoom(room);\n  /* -------------------------------------------------------------------------- */\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    if (currentUser) {\n      setActiveConversations(currentUser.conversations);\n    }\n    if (selectedFriend) {\n      getCurrentFriendMessages();\n    }\n  }, [currentUser]);\n\n  /* -------------------------------------------------------------------------- */\n  const setRoom_setConvoId_getMessages = (personId, index) => {\n    const hash = combineAddresses(currentUser.id, personId);\n    console.log(hash);\n    return [\n      dispatch(setRoom(hash)),\n      console.log(hash),\n      setSelectedFriend(index),\n      setConversationId(hash),\n      getCurrentFriendMessages(),\n    ];\n  };\n\n  const renderRooms = () => {\n    return activeConversations.map((person, index) => {\n      return (\n        <div\n          className={`${styles.room} ${\n            selectedFriend === index ? styles.selectedRoom : null\n          }`}\n          onClick={() => [\n            setChooseRoomPage(false),\n            setRoom_setConvoId_getMessages(person.id, index),\n            /* ----------------------------- change to name ----------------------------- */\n            setCurrentFriend(person),\n            /* -------------------------------------------------------------------------- */\n            setRoomChange(!roomChange),\n          ]}\n          key={index}\n        >\n          <div className={styles.profilePicNameContainer}>\n            <div className={styles.roomProfilePicContainer}>\n              {person.profilePic ? (\n                <img\n                  className={styles.roomProfilePic}\n                  src={person.profilePic}\n                  alt=\"\"\n                />\n              ) : (\n                <img\n                  className={styles.roomProfilePic}\n                  src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                  alt=\"\"\n                />\n              )}\n            </div>\n            {onlineUsers.includes(person.id) ? (\n              <div className={styles.online}></div>\n            ) : (\n              <div className={styles.offline}></div>\n            )}\n            <h1>{person.email}</h1>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        <h2 style={{ marginBottom: \"0px\", marginTop: \"0px\" }}>Join Room</h2>\n      </div>\n\n      <div className={styles.roomListContainer}>\n        {/* ------------------------ add message if not chats ------------------------ */}\n        {activeConversations.length > 0 ? (\n          <FadeIn>{renderRooms()}</FadeIn>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomsList;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/hooks.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/convoExists.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/useChatRoom.js",["370","371","372","373","374","375"],"import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { sha256, sha224 } from \"js-sha256\";\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport useMessages from \"./useMessages\";\n\nconst NEW_MESSAGE_EVENT = \"newMessage\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst useChatRoom = () => {\n  const previousMessages = useAppSelector(\n    (state) => state.previousMessages.value\n  );\n  const { addMessage } = useMessages();\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  const [messages, setMessages] = useState([]);\n  const [conversationId, setConversationId] = useState(null);\n\n  const [hashRoom, setHashRoom] = useState(\"\");\n  const socketRef = useRef();\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (previousMessages) {\n      setMessages(previousMessages);\n    }\n  }, [previousMessages]);\n\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    setHashRoom(room);\n  }, [room, hashRoom]);\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n\n    if (hashRoom !== undefined) {\n      socketRef.current.emit(\"setRoom\", hashRoom);\n    }\n\n    socketRef.current.on(NEW_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        isOwner: message.senderId === socketRef.current.id,\n      };\n\n      // send the new message to the others in the same room.\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect(hashRoom);\n    };\n  }, [hashRoom]);\n  /* -------------------------------------------------------------------------- */\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n      room: room,\n    });\n\n    addMessage(room, messageBody);\n  };\n  /* -------------------------------------------------------------------------- */\n  const combineAddresses = (address1, address2) => {\n    const user1 = [];\n    const user2 = [];\n    const makeUnique = (address, userArray) => {\n      for (let i in address) {\n        const letter = address[i];\n\n        userArray.push(letter);\n      }\n    };\n    makeUnique(address1, user1);\n    makeUnique(address2, user2);\n    user1.push(...user2);\n    const combinedAddresses = user1;\n\n    const sorted = combinedAddresses.sort();\n    const room = sorted.join(\"\");\n\n    const hash = sha256.create();\n    hash.update(room);\n    const hashedRoom = hash.hex();\n\n    return hashedRoom;\n  };\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  return {\n    messages,\n    sendMessage,\n    combineAddresses,\n    conversationId,\n    setConversationId,\n  };\n};\n\nexport default useChatRoom;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/getUsers.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/Signup.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/Login.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/Logout.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/EditUser.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/addConversation.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/useMessages.js",["376","377","378","379","380","381","382","383","384"],"import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\n\nimport addConversationMutation from \"../../GQL/mutations/addConversation\";\nimport editMessageMutation from \"../../GQL/mutations/editMessage\";\nimport getMessagesQuery from \"../../GQL/queries/getMessages\";\nimport useChatRoom from \"./useChatRoom\";\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\";\nimport { setPreviousMessages } from \"../../redux/features/previousMessagesSlice\";\n\nconst useMessages = () => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const room = useAppSelector((state) => state.currentRoom.value);\n  // let {\n  //   loading: loadingMessages,\n  //   error: errorMessages,\n  //   data: dataMessages,\n  //   refetch: refetchMessages,\n  // } = useQuery(getMessagesQuery);\n  // useEffect(() => {\n  //   console.log(errorMessages);\n  // }, [errorMessages]);\n\n  const [messageList, setMessageList] = useState([]);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n\n  const [addConversation] = useMutation(addConversationMutation);\n  const [editMessage] = useMutation(editMessageMutation);\n  const dispatch = useAppDispatch();\n\n  let [\n    getCurrentFriendMessages,\n    {\n      loading: messagesLoading,\n      error: messagesError,\n      data: messagesData,\n      networkStatus,\n      called,\n      refetch: messageRefetch,\n    },\n  ] = useLazyQuery(getMessagesQuery, {\n    variables: { convoId: room },\n  });\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    getCurrentFriendMessages();\n  }, [messageList]);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    if (!messagesError && messagesData) {\n      dispatch(setPreviousMessages([]));\n      if (messagesData.messages[0] !== undefined) {\n        console.log(messagesData.messages);\n        const alteredMessageList = [];\n\n        messagesData.messages[0].messages.map((msg) => {\n          const newMessage = { body: \"\", isOwner: false };\n          if (msg.senderId === currentUser.id) {\n            newMessage.isOwner = true;\n          }\n          newMessage.body = msg.body;\n\n          alteredMessageList.push(newMessage);\n          return null;\n        });\n\n        setMessageList(alteredMessageList);\n\n        dispatch(setPreviousMessages(alteredMessageList));\n      }\n    } else {\n      return null;\n    }\n  }, [messagesData, messagesLoading, currentUser]);\n\n  /* -------------------------------------------------------------------------- */\n  const addMessage = (convoId, body) => {\n    editMessage({\n      variables: {\n        convoId: convoId,\n        addMessage: { senderId: currentUser.id, body: body },\n      },\n    })\n      .then((res) => messageRefetch())\n      .then((res) => setMessageList())\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  const alteredChatData = async () => {\n    if (messageList.length > 0) {\n      const newMessageList = [];\n      messageList.map((msg) => {\n        const newMessage = { body: \"\", isOwner: false };\n        if (msg.senderId === currentUser.id) {\n          newMessage.isOwner = true;\n        }\n        newMessage.body = msg.body;\n\n        return newMessageList.push(newMessage);\n      });\n      console.log(newMessageList);\n      return newMessageList;\n    }\n  };\n\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n\n  return {\n    messageList,\n    addMessage,\n    currentUser,\n    getCurrentFriendMessages,\n    selectedFriend,\n    setSelectedFriend,\n    setMessageList,\n  };\n  //   }\n};\n\nexport default useMessages;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/getMessages.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editMessage.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/addPost.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/deletePost.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editPost.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/addComment.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editComment.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js",["385","386","387","388","389","390","391"],"import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport getUsers from \"../../../GQL/queries/getUsers\";\nimport styles from \"./AddFriends.module.css\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst AddFriends = ({ setFriendListOpen, friendListOpen }) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let { loading, error, data, refetch } = useQuery(getUsers);\n  const [editUser] = useMutation(mutation);\n  const [friends, setFriends] = useState([]);\n  const [searchBarText, setSearchBarText] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        setFriends([...friends, friend.id]);\n      }\n      return null;\n    });\n  }, [currentUser]);\n\n  const addFriend = async (friendId) => {\n    const friendIdList = [];\n\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        friendIdList.push(friend.id);\n      }\n      return null;\n    });\n\n    console.log(currentUser.friends);\n    const friend = friendIdList.includes(friendId);\n    const me = friendIdList.includes(currentUser.id);\n    console.log(\"friend\", friend);\n    console.log(\"me\", me);\n    console.log(currentUser.friends.id);\n    if (friends) {\n      if (friend) {\n        console.log(\"HELLLOOOOO\");\n        console.log(\"already a friend\");\n        return false;\n      } else {\n        editUser({\n          variables: {\n            id: currentUser.id,\n            addFriend: friendId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        });\n      }\n    }\n  };\n\n  const renderAvaliableUsers = () => {\n    console.log(\"USERS\", data.users);\n    const noCurrentUserArray = data.users.filter(\n      (user) => user.id !== currentUser.id\n    );\n\n    /* -------------------------------------------------------------------------- */\n    // const noCurrentUserArray1 = noCurrentUserArray.filter(\n    //   (user) => user.id !== currentUser.id\n    // );\n    const arrayOfFriendIds = Array.from(currentUser.friends, (x) => x.id);\n\n    // const hi = noCurrentUserArray.find((item) => item.id === currentUser.id);\n    // console.log(\"ffff\", hi);\n    /* -------------------------------------------------------------------------- */\n\n    // const filteredUser = finalArray.filter((user) =>\n    //   user.email.startswith(searchBarText)\n    // );\n    const avaliableUsers = noCurrentUserArray.map((user, index) => {\n      // if (user.email.startswith(searchBarText)) {\n      if (user.email.startsWith(searchBarText)) {\n        return (\n          <div key={index}>\n            <div className={styles.userCard}>\n              <div className={styles.nameEmailContainer}>\n                {user.profilePic ? (\n                  <img\n                    className={styles.userProfilePic}\n                    src={user.profilePic}\n                    alt=\"\"\n                  />\n                ) : (\n                  <img\n                    className={styles.userProfilePic}\n                    src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                    alt=\"\"\n                  />\n                )}\n                <h2 className={styles.name}>{user.name}</h2>\n                <h4 className={styles.email}>{user.email}</h4>\n              </div>\n              <div className={styles.buttonContainer}>\n                <div className={styles.addFriendButton0}>\n                  {!arrayOfFriendIds.includes(user.id) ? (\n                    <button\n                      onClick={() => addFriend(user.id)}\n                      className={styles.addFriendButton}\n                    >\n                      Add Friend\n                    </button>\n                  ) : (\n                    <button\n                      // onClick={() => addFriend(user.id)}\n                      className={styles.addedFriendButton}\n                    >\n                      Added &#10003;\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    });\n    return avaliableUsers;\n  };\n  return (\n    <div className={styles.container}>\n      {/* -------------------------------------------------------------------------- */}\n      <div className={styles.seachContainer}>\n        <div\n          className={styles.backArrowContainer}\n          onClick={() => setFriendListOpen(true)}\n        >\n          <p>Find Friends</p>\n          <span className={styles.backArrow}> &#x21A9; </span>\n        </div>\n        <h3>Search Users</h3>\n        <input\n          type=\"text\"\n          value={searchBarText}\n          onChange={(e) => setSearchBarText(e.target.value)}\n        />\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n      <div className={styles.cardsListContainer}>\n        <div className={styles.paddingBottomWorkingPlaceHolder}>\n          <div className={styles.cardsListContainerCenter}>\n            {data ? renderAvaliableUsers() : null}\n          </div>\n        </div>\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n    </div>\n  );\n};\n\nexport default AddFriends;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/FriendList/FriendList.js",["392","393","394","395","396","397","398","399","400","401","402","403","404"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport styles from \"./FriendList.module.css\";\nimport convoExists from \"../../../GQL/queries/convoExists\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport useChatRoom from \"../../CHAT/useChatRoom\";\nimport addConversationMutation from \"../../../GQL/mutations/addConversation\";\nimport FadeIn from \"react-fade-in\";\n\nconst FriendList = ({ friendListOpen, setFriendListOpen }) => {\n  const onlineUsers = useAppSelector((state) => state.onlineUsers.value);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const { combineAddresses } = useChatRoom();\n  const [editUser] = useMutation(mutation);\n  const [addConversation] = useMutation(addConversationMutation);\n  let { loading, error, data } = useQuery(query);\n  const room = useAppSelector((state) => state.currentRoom.value);\n  const [hash, setHash] = useState(null);\n  const [convoData, setConvoData] = useState(null);\n  const [convoData2, setConvoData2] = useState(\"\");\n  const [friends, setFriends] = useState([]);\n  const [friendId, setFriendId] = useState(\"\");\n  const [clicked, setClicked] = useState(false);\n\n  let [\n    checkIfConvoExists,\n    {\n      loading: convoExistsLoading,\n      error: convoExistsError,\n      data: convoExistsData,\n      refetch,\n    },\n  ] = useLazyQuery(convoExists, {\n    fetchPolicy: \"no-cache\", // Used for first execution\n    nextFetchPolicy: \"no-cache\", // Used for subsequent executions\n    onCompleted: async () => setConvoData(convoExistsData),\n  });\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    setFriends(currentUser.friends);\n    console.log(\"friends online\", onlineUsers);\n  });\n  /* -------------------------------------------------------------------------- */\n\n  const deleteFriend = (friendId) => {\n    editUser({\n      variables: {\n        id: currentUser.id,\n        deleteFriend: friendId,\n      },\n      refetchQueries: [{ query: query }],\n      awaitRefetchQueries: true,\n    })\n      .then(\n        editUser({\n          variables: {\n            id: currentUser.id,\n            deleteConversation: friendId,\n          },\n          refetchQueries: [{ query: query }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        })\n      )\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n\n        console.log(errors);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  /* -------------------------------------------------------------------------- */\n  const addConvoToUser = (clickedFriendId) => {\n    editUser({\n      variables: {\n        id: currentUser.id,\n        addConversation: clickedFriendId,\n      },\n      refetchQueries: [{ query: query }],\n      awaitRefetchQueries: true,\n    }).catch((err) => {\n      const errors = err.graphQLErrors?.map((error) => error.message);\n\n      console.log(errors);\n    });\n  };\n  /* -------------------------------------------------------------------------- */\n  const startConversation = async (convoId, clickedFriendId) => {\n    checkIfConvoExists({\n      variables: {\n        convoId: convoId,\n      },\n    });\n    addConvoToUser(clickedFriendId);\n    setHash(convoId);\n    setClicked(!clicked);\n    setFriendId(clickedFriendId);\n  };\n\n  useEffect(() => {\n    if (convoExistsData && convoExistsLoading === false) {\n      //convoData acts as the old data\n      //so making sure only true if the NEW data is not the same as the OLD data\n      if (convoExistsData !== convoData) {\n        console.log(\"query\", convoExistsData);\n        if (convoExistsData.conversationExists !== null) {\n          console.log(\"User Exists\");\n\n          setHash(null);\n          setConvoData2(convoData);\n        } else if (convoExistsData.conversationExists === null) {\n          console.log(\"DNE\");\n          /* ------------------------ creating new conversation ----------------------- */\n          addConversation({\n            variables: {\n              convoId: hash,\n            },\n            refetchQueries: [\n              checkIfConvoExists({\n                variables: {\n                  convoId: hash,\n                },\n                fetchPolicy: \"no-cache\",\n                nextFetchPolicy: \"no-cache\",\n              }),\n            ],\n\n            awaitRefetchQueries: true,\n          }).catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n\n            console.log(errors);\n          });\n        }\n      }\n    }\n  }, [clicked, convoExistsData !== undefined && convoExistsData]);\n  /* -------------------------------------------------------------------------- */\n\n  const renderFriends = () => {\n    const converstationIds = Array.from(currentUser.conversations, (x) => x.id);\n    console.log(\"FRIENDS FINAL\", friends);\n    if (friends) {\n      return friends.map((friend, index) => {\n        return (\n          <div key={index} className={styles.friendContainer}>\n            <div className={styles.nameEmailContainer}>\n              {friend.profilePic ? (\n                <img\n                  className={styles.friendProfilePic}\n                  src={friend.profilePic}\n                  alt=\"\"\n                />\n              ) : (\n                <img\n                  className={styles.friendProfilePic}\n                  src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                  alt=\"\"\n                />\n              )}\n              <h3 className={styles.name}>{friend.email}</h3>\n              {onlineUsers.includes(friend.id) ? (\n                <div className={styles.online}></div>\n              ) : (\n                <div className={styles.offline}></div>\n              )}\n            </div>\n\n            {/* <h1>{friend.id}</h1> */}\n            <div className={styles.buttons}>\n              {!converstationIds.includes(friend.id) ? (\n                <button\n                  className={styles.startChat}\n                  onClick={() => [\n                    // setHash(combineAddresses(user.id, index)),\n                    startConversation(\n                      combineAddresses(currentUser.id, friend.id),\n                      friend.id\n                    ),\n                  ]}\n                >\n                  Start a Chat\n                </button>\n              ) : (\n                <button\n                  className={styles.chatStarted}\n                  // onClick={() => [\n                  //   // setHash(combineAddresses(user.id, index)),\n                  //   startConversation(\n                  //     combineAddresses(currentUser.id, friend.id),\n                  //     friend.id\n                  //   ),\n                  // ]}\n                >\n                  Start a Chat\n                </button>\n              )}\n              <button\n                className={styles.delete}\n                onClick={() => [deleteFriend(friend.id)]}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        );\n      });\n    }\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleContainer}>\n        <div\n          className={styles.backArrowContainer}\n          onClick={() => setFriendListOpen(false)}\n        >\n          <p>Find Friends</p>\n          <span className={styles.backArrow}> &#x21AA; </span>\n        </div>\n\n        <h3>Friends</h3>\n      </div>\n      <div className={styles.friendListContainer}>\n        <div className={styles.friendListContainerCenter}>\n          <FadeIn>{renderFriends()}</FadeIn>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FriendList;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js",["405","406","407","408","409","410","411","412","413"],"import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = () => {\n  const { pathname } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const navShow = !dontShowUp.includes(pathname);\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const dispatch = useAppDispatch();\n  const socketRef = useRef();\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    refetch();\n    if (data) {\n      console.log(data.user2, \"NavBar\");\n      dispatch(setCurrentUser(data.user2));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (navShow && currentUser.id) {\n      console.log(\"working\");\n      socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n      socketRef.current.emit(\"login\", { userId: currentUser.id });\n      socketRef.current.on(\"onlineUsers\", (data) => {\n        const onlineUsers = Object.entries(data);\n        const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n        console.log(onlineIds);\n        dispatch(setOnlineUsers(onlineIds));\n      });\n    }\n  }, [currentUser, data, navShow]);\n\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container}>\n        <SideNav />\n        <ProfileDropdownInitiator />\n      </div>\n      <div className={styles.container69}>\n        <SideNav />\n        <TestDropDown socketRef={socketRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/SideBar/SideBar.js",["414","415","416"],"import styles from \"./SideBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst SideBar = () => {\n  const [open, setOpen] = useState(false);\n  const { pathname } = useLocation();\n\n  const routesToShowUpIn = [\"/home\", \"/chat\", \"/friends\", \"/profile\"];\n  const includedPath = routesToShowUpIn.includes(pathname);\n\n  if (includedPath) {\n    return (\n      <div className={styles.container}>\n        <ul className={styles.optionList}>\n          <li>\n            <Link to=\"/home\" className={styles.option}>\n              <img\n                src=\"https://www.freepnglogos.com/uploads/logo-home-png/chimney-home-icon-transparent-1.png\"\n                alt=\"\"\n                className={styles.image}\n              />\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/chat\" className={styles.option}>\n              <img\n                src=\"https://image.flaticon.com/icons/png/512/61/61592.png\"\n                alt=\"\"\n                className={styles.image}\n              />\n              Chat\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/friends\" className={styles.option}>\n              <img\n                style={{ width: \"45%\" }}\n                src=\"https://icon-library.com/images/friends-icon-transparent/friends-icon-transparent-1.jpg\"\n                alt=\"\"\n                className={styles.image}\n              />\n              Friends\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default SideBar;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Landing/RegisterForm/RegisterForm.js",["417","418","419"],"import styles from \"./RegisterForm.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nimport signUpMutation from \"../../../GQL/mutations/Signup\";\nimport CurrentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport history from \"../../../utils/history\";\nimport LoadingSpinner from \"../../LoadingSpinner/LoadingSpinner\";\n\nconst RegisterForm = ({ setShowModal, showModal }) => {\n  const [errors, setErrors] = useState([]);\n  const [signup] = useMutation(signUpMutation);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const firstAndLastNameCombined = `${firstName} ${lastName}`;\n    setName(firstAndLastNameCombined);\n    console.log(name);\n  }, [firstName, lastName]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    signup({\n      variables: { name: name, email: email, password: password },\n      refetchQueries: [{ query: CurrentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then((e) => [e ? history.push(\"/home\") : null, setLoading(false)])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        setErrors(errors);\n        console.log(errors);\n      });\n  };\n\n  return (\n    <div className={styles.formContainer}>\n      <div\n        onClick={() => setShowModal(!showModal)}\n        className={styles.xContainer}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          className={styles.x}\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\n        </svg>\n      </div>\n      <div className={styles.titleContainer}>\n        <h1>Sign Up</h1>\n\n        <p>It's quick and easy.</p>\n        <hr className={styles.horizontalLine} />\n      </div>\n\n      <form action=\"\" className={styles.form} onSubmit={(e) => onSubmit(e)}>\n        {loading ? (\n          <div className={styles.LoadingSpinner}>\n            <LoadingSpinner />\n          </div>\n        ) : null}\n        <div className={styles.sameLineInputContainer}>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            value={firstName}\n            className={styles.sameLineInput}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            value={lastName}\n            className={styles.sameLineInput}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </div>\n\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className={styles.inputItem}\n        />\n\n        <input\n          placeholder=\"New Password\"\n          value={password}\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          className={styles.inputItem}\n        />\n        <div className={styles.btnContainer}>\n          <button className={`${styles.button} ${styles.signUp}`}>\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Landing/LogInForm/LogInForm.js",["420","421"],"import styles from \"./LogInForm.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport loginMutation from \"../../../GQL/mutations/Login\";\nimport CurrentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport history from \"../../../utils/history\";\nimport { Modal } from \"./modal/modal\";\nimport LoadingSpinner from \"../../LoadingSpinner/LoadingSpinner\";\n\nconst LogInForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [login] = useMutation(loginMutation);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    login({\n      variables: { email: email, password: password },\n      refetchQueries: [{ query: CurrentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then((e) => [e ? history.push(\"/home\") : null, setLoading(false)])\n      .then((res) => [setEmail(\"\"), setPassword(\"\")])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        setErrors(errors);\n        console.log(errors);\n      });\n  };\n\n  return (\n    <div className={styles.container}>\n      <Modal showModal={showModal} setShowModal={setShowModal} key={\"2\"} />\n      <div className={styles.formContainer}>\n        {loading ? (\n          <div className={styles.LoadingSpinner}>\n            <LoadingSpinner />\n          </div>\n        ) : null}\n\n        <form action=\"\" className={styles.form} onSubmit={onSubmit}>\n          <input\n            placeholder=\"Email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <input\n            placeholder=\"Password\"\n            type=\"text\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <div className={styles.btnContainer}>\n            <button className={`${styles.button} ${styles.login}`}>\n              Log In\n            </button>\n          </div>\n\n          <hr className={styles.horizontalLine} />\n        </form>\n\n        <div className={styles.btnContainer}>\n          <button\n            onClick={() => setShowModal(!showModal)}\n            className={`${styles.button} ${styles.createNewAccount}`}\n          >\n            Create new account\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LogInForm;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/PostList/PostList.js",["422","423","424","425","426","427"],"import styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Post from \"../Post/Post\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport FadeIn from \"react-fade-in\";\n\nconst PostList = () => {\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [friendList, setFriendList] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n  const [postListDone, setPostListDone] = useState([]);\n  const [listPagination, setListPagination] = useState(10);\n\n  useEffect(() => {\n    refetch();\n    if (currentUser.friends) {\n      setFriendList(currentUser.friends);\n    }\n  }, [currentUser]);\n\n  /* ------------------------- creating list of posts ------------------------- */\n  useEffect(() => {\n    if (friendList) {\n      console.log(\"UMMMMM\", currentUser.posts);\n      const newList = friendList.map((friend, index) => {\n        return friend.posts;\n      });\n      const finishedFriendList = newList.flat();\n      const completeListOfMyPostsAndFriendPosts =\n        currentUser.posts.concat(finishedFriendList);\n      console.log(completeListOfMyPostsAndFriendPosts, \"FINALLY??\");\n      setPostList(completeListOfMyPostsAndFriendPosts);\n    }\n  }, [friendList, currentUser]);\n\n  /* -------------------------- sorting list of posts ------------------------- */\n  useEffect(() => {\n    if (postList.length > 0) {\n      console.log(postList, \"FINALLY22222\");\n      setPostListDone(postList.sort((a, b) => (a.time > b.time ? -1 : 1)));\n    } else {\n      console.log(postList, \"FINALLY3333\");\n      setPostListDone([]);\n    }\n  }, [postList]);\n\n  const renderPosts = () => {\n    if (postListDone.length <= 0) return null;\n    const paginatedPostList = postListDone.slice(0, listPagination);\n    console.log(\"FUCK\", paginatedPostList);\n    return paginatedPostList.map((post, index) => {\n      // console.log(\"post\", post);\n      const unformattedDate = new Date(parseInt(post.time));\n      const date = unformattedDate.toString();\n      return (\n        <div key={index}>\n          <Post\n            name={post.userId.name}\n            profilePic={post.userId.profilePic}\n            date={date}\n            postId={post.id}\n            postContent={post.post}\n            likeCount={post.likedBy.length}\n            likeList={post.likedBy}\n            commentCount={post.comments.length}\n            commentList={post.comments}\n          />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postListContainer}>\n        <FadeIn>{renderPosts()}</FadeIn>\n      </div>\n      {postListDone.length > listPagination ? (\n        <div\n          className={styles.loadMoreContainer}\n          onClick={() => setListPagination(listPagination + 5)}\n        >\n          Load More\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PostList;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/SideNav/SideNav.js",["428"],"import styles from \"./SideNav.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport SideBar from \"../SideBar/SideBar\";\n\nconst SideNav = () => {\n  const [open, setOpen] = useState(false);\n  return (\n    <div className={styles.container}>\n      <div\n        className={styles.hamburger}\n        onClick={() => [setOpen(!open), console.log(\"side nav\", open)]}\n      >\n        <span className={styles.line}></span>\n        <span className={styles.line}></span>\n        <span className={styles.line}></span>\n      </div>\n      <ul className={`${styles.optionList} ${open ? styles.open : null}`}>\n        <SideBar />\n      </ul>\n    </div>\n  );\n};\n\nexport default SideNav;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Landing/LogInForm/modal/modal.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/Post/Post.js",["429","430","431","432","433","434"],"import styles from \"./Post.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport MakeComment from \"../MakeComment/MakeComment\";\nimport editUserMutation from \"../../../../GQL/mutations/editUser\";\nimport Comment from \"../Comment/Comment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport deletePostMutation from \"../../../../GQL/mutations/deletePost\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport CommentList from \"../CommentList/CommentList\";\nimport EditDeletePost from \"../EditDeletePost/EditDeletePost\";\n\nconst Post = ({\n  postId,\n  name,\n  profilePic,\n  likeCount,\n  likeList,\n  commentCount,\n  commentList,\n  postContent,\n  date,\n}) => {\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [commentListOpen, setCommentListOpen] = useState(false);\n  const [editDeleteOpen, setEditDeleteOpen] = useState(false);\n  const [userPostIds, setUserPostIds] = useState([]);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [deletePost] = useMutation(deletePostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const [editPost] = useMutation(editPostMutation);\n\n  useEffect(() => {\n    if (currentUser) {\n      const postIds = currentUser.posts.map((post) => {\n        return post.id;\n      });\n      setUserPostIds(postIds);\n    }\n  }, [currentUser]);\n\n  const onLikeClick = () => {\n    const listOfLikeIds = likeList.map((likeId) => {\n      return likeId.id;\n    });\n    console.log(listOfLikeIds);\n    if (listOfLikeIds.includes(currentUser.id)) {\n      editPost({\n        variables: {\n          id: postId,\n          deleteLike: currentUser.id,\n        },\n        refetchQueries: [{ query: currentUserQuery }],\n        awaitRefetchQueries: true,\n      });\n    } else {\n      editPost({\n        variables: {\n          id: postId,\n          addLike: currentUser.id,\n        },\n        refetchQueries: [{ query: currentUserQuery }],\n        awaitRefetchQueries: true,\n      });\n    }\n  };\n\n  const onEditClick = () => {\n    deletePost({\n      variables: {\n        id: currentUser.id,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) =>\n        editUser({\n          variables: {\n            id: currentUser.id,\n            deletePost: res.data.addPost.id,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        })\n      )\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n\n  const onDeleteClick = () => {\n    deletePost({\n      variables: {\n        id: postId,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) =>\n        editUser({\n          variables: {\n            id: currentUser.id,\n            deletePost: postId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        })\n      )\n      .then(setEditDeleteOpen(!editDeleteOpen))\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n\n  return (\n    <div className={styles.individualPost0}>\n      <div className={styles.individualPost}>\n        <div className={styles.name_edit_Container}>\n          <div>\n            <div className={styles.picNameContainer}>\n              {profilePic ? (\n                <img className={styles.profilePic} src={profilePic} alt=\"\" />\n              ) : (\n                <img\n                  className={styles.profilePic}\n                  src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                  alt=\"\"\n                />\n              )}\n\n              <div className={styles.nameDateContainer}>\n                <h3 className={styles.name}>{name}</h3>\n                <div className={styles.date}>\n                  {((parseInt(date.slice(16, 18)) + 11) % 12) + 1}\n                  {date.slice(18, 21)}\n                  &nbsp;\n                  {parseInt(date.slice(16, 18)) > 12 ? \"PM\" : \"AM\"}\n                  {date.slice(24, 28)}\n                  &nbsp;\n                  {date.slice(0, 10)}\n                  {date.slice(10, 15)}\n                </div>\n              </div>\n            </div>\n          </div>\n          {userPostIds.includes(postId) ? (\n            <div\n              className={styles.editDots}\n              onClick={() => setEditDeleteOpen(!editDeleteOpen)}\n            >\n              {/* ... */}\n              <EditDeletePost postContent={postContent} postId={postId} />\n            </div>\n          ) : null}\n        </div>\n        <div className={styles.post_likes_and_commentCount_Container}>\n          <h2 className={styles.post}>{postContent}</h2>\n          <div className={styles.likeCommentCountContainer}>\n            <div className={styles.likeCountContainer}>\n              <img\n                className={styles.likeHandImage}\n                alt=\"\"\n                role=\"presentation\"\n                src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\"\n              />\n              <p className={styles.postLikes}>{likeCount}</p>\n            </div>\n\n            <p\n              className={styles.commentCount}\n              onClick={() => setCommentListOpen(!commentListOpen)}\n            >\n              {commentCount} Comments\n            </p>\n          </div>\n        </div>\n        <hr className={styles.hr} />\n        <div className={styles.like_comment_btn_container}>\n          <div className={styles.likeBtn} onClick={() => onLikeClick()}>\n            Like\n          </div>\n          <div\n            className={styles.commentBtn}\n            onClick={() => setCommentOpen(!commentOpen)}\n          >\n            Comment\n          </div>\n        </div>\n        <hr className={styles.hr} />\n        <MakeComment\n          commentOpen={commentOpen}\n          setCommentOpen={setCommentOpen}\n          postId={postId}\n        />\n        <br />\n        <CommentList\n          commentList={commentList}\n          commentListOpen={commentListOpen}\n          setCommentListOpen={setCommentListOpen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakeComment/MakeComment.js",["435","436","437","438"],"import styles from \"./MakeComment.module.css\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editUserMutation from \"../../../../GQL/mutations/editUser\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport addCommentMutation from \"../../../../GQL/mutations/addComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\n\nconst MakeComment = ({ commentOpen, setCommentOpen, postId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  // const [editUser] = useMutation(editUserMutation);\n  const [addComment] = useMutation(addCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    if (currentUser.friends) {\n      // console.log(postId);\n      // console.log(\"current User\", currentUser.friends);\n    }\n  }, [currentUser]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    commentText.length > 0\n      ? addComment({\n          variables: {\n            postId: postId,\n            userId: currentUser.id,\n            comment: commentText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editPost({\n              variables: {\n                id: postId,\n                addComment: res.data.addComment.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n              .then([setCommentOpen(!commentOpen), setCommentText(\"\")])\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  if (commentOpen) {\n    return (\n      <div className={styles.container}>\n        <form action=\"\" className={styles.formContainer} onSubmit={onSubmit}>\n          <div className={styles.profilePicContainer}>\n            {currentUser.profilePic ? (\n              <img\n                src={currentUser.profilePic}\n                alt=\"\"\n                className={styles.profilePic}\n              />\n            ) : (\n              <img\n                src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                alt=\"\"\n                className={styles.profilePic}\n              />\n            )}\n          </div>\n          <textarea\n            onChange={(e) => setCommentText(e.target.value)}\n            className={styles.input}\n            placeholder={`What's on your mind, ${currentUser.name}?`}\n          ></textarea>\n          <button className={styles.btn}>Submit</button>\n        </form>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default MakeComment;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/Comment/Comment.js",["439","440","441","442","443","444","445","446","447"],"import styles from \"./Comment.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport EditDeleteComment from \"../EditDeleteComment/EditDeleteComment\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nconst Comment = ({ comment }) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [editDeleteOpen, setEditDeleteOpen] = useState(false);\n  const [userCommentIds, setUserCommentIds] = useState([]);\n  const [editCommentText, setEditCommentText] = useState(comment.comment);\n  const [editComment] = useMutation(editCommentMutation);\n  const [likeCount, setLikeCount] = useState(comment.likedBy.length);\n  const [ableToLike, setAbleToLike] = useState(true);\n\n  const onLikeClick = () => {\n    const objectIntoArray = Object.assign([], comment.likedBy).flat();\n    const listOfLikeIds = comment.likedBy.map((likeId) => {\n      return likeId.id;\n    });\n    if (!ableToLike) return;\n    console.log(\"list of lieks\", listOfLikeIds);\n    if (listOfLikeIds.includes(currentUser.id)) {\n      const oneLess = objectIntoArray.slice(0, -1);\n      console.log(\"ONE LESS\", oneLess);\n      setAbleToLike(false);\n      editComment({\n        variables: {\n          id: comment.id,\n          deleteLike: currentUser.id,\n        },\n        optimisticResponse: {\n          editComment: {\n            id: comment.id,\n            __typename: \"CommentType\",\n            likedBy: oneLess,\n          },\n        },\n        refetchQueries: [{ query: currentUserQuery }],\n        awaitRefetchQueries: true,\n      }).then((res) => setAbleToLike(true));\n    } else {\n      const copyArray = objectIntoArray.slice();\n      copyArray.push({ id: \"+1\" });\n      const oneMore = copyArray;\n      console.log(\"ONE More\", oneMore);\n      setAbleToLike(false);\n      editComment({\n        variables: {\n          id: comment.id,\n          addLike: currentUser.id,\n        },\n        optimisticResponse: {\n          editComment: {\n            id: comment.id,\n            __typename: \"CommentType\",\n            likedBy: oneMore,\n            // Object.assign(comment.likedBy, payload)\n          },\n        },\n        refetchQueries: [{ query: currentUserQuery }],\n        awaitRefetchQueries: true,\n      }).then((res) => setAbleToLike(true));\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.profilePic_and_CommentContainer}>\n        <div className={styles.profilePicContainer}>\n          {comment.userId.profilePic ? (\n            <img\n              src={comment.userId.profilePic}\n              alt=\"\"\n              className={styles.profilePic}\n            />\n          ) : (\n            <img\n              src=\"https://static-cdn.jtvnw.net/jtv_user_pictures/81b9dc69-060b-4cef-977e-30e3cea96cbc-profile_image-300x300.png\"\n              alt=\"\"\n              className={styles.profilePic}\n            />\n          )}\n        </div>\n        <div className={styles.commentContainer}>\n          <h3 className={styles.name}>{comment.userId.name}</h3>\n          {/* <div> */}\n\n          {/* {editDeleteOpen ? (\n            <div className={styles.editDeleteContainer}>hi</div>\n          ) : (\n            <div className={styles.comment}>{comment.comment}</div>\n          )} */}\n          <div className={styles.comment}>{comment.comment}</div>\n\n          {/* -------------------------------------------------------------------------- */}\n          {currentUser.id === comment.userId.id ? (\n            <div\n              className={styles.editDots}\n              onClick={() => setEditDeleteOpen(!editDeleteOpen)}\n            >\n              <EditDeleteComment comment={comment} />\n            </div>\n          ) : null}\n          {/* -------------------------------------------------------------------------- */}\n          <div\n            className={styles.likeCountContainer}\n            onClick={() => onLikeClick()}\n          >\n            <img\n              className=\"j1lvzwm4\"\n              alt=\"\"\n              height=\"18\"\n              role=\"presentation\"\n              src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\"\n              width=\"18\"\n            />\n\n            <div className={styles.likeCount}>{comment.likedBy.length}</div>\n          </div>\n          <button className={styles.likeBtn}>Like</button>\n        </div>\n        {/* </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/CommentList/CommentList.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js",["448","449","450","451","452"],"import styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/editUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { gsap } from \"gsap\";\nimport LoadingSpinner from \"../../LoadingSpinner/LoadingSpinner\";\n\nconst PostForm = ({ showModal, setShowModal }) => {\n  const [postText, setPostText] = useState(\"\");\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [loading, setLoading] = useState(false);\n  // let modal = useRef();\n\n  // useEffect(() => {\n  //   gsap.from(modal.current, { y: 180, opacity: 0, duration: 0.5 });\n  //   // gsap.from(textContainer.current, { x: -140, opacity: 0, duration: 0.7 });\n  //   // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n  // }, [showModal]);\n  useEffect(() => {\n    if (currentUser.friends) {\n    }\n  }, [currentUser]);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    postText.length > 0\n      ? addPost({\n          variables: {\n            userId: currentUser.id,\n            post: postText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editUser({\n              variables: {\n                id: currentUser.id,\n                addPost: res.data.addPost.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .then((res) => [setLoading(false), setShowModal(!showModal)])\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Create Post</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n          <div className={styles.name_and_pic_Container}>\n            {/* <p> pic and name here and maybe drop down of friends</p> */}\n          </div>\n        </div>\n\n        <form action=\"\" onSubmit={(e) => onSubmit(e)}>\n          <div className={styles.contentContainer}>\n            {loading ? (\n              <div className={styles.LoadingSpinner}>\n                <LoadingSpinner />\n              </div>\n            ) : null}\n            <div className={styles.inputContainer}>\n              <textarea\n                onChange={(e) => setPostText(e.target.value)}\n                className={styles.input}\n                placeholder={`What's on your mind, ${currentUser.name}?`}\n                // maxlength=\"1\"\n              ></textarea>\n            </div>\n            <div className={styles.postBtnContainer}>\n              <button className={styles.postBtn}>Post</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PostForm;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/modal/modal.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/Dropdown/Dropdown.js",["453","454","455","456","457","458"],"import styles from \"./Dropdown.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\n\nconst Dropdown = ({\n  open,\n  setOpen,\n  close,\n  setClose,\n  onDropDown,\n  setOnDropDown,\n}) => {\n  let [logout] = useMutation(mutation);\n  const onLogoutCLick = () => {\n    logout({\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    }).catch((err) => console.log(err));\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div\n      onMouseOver={() => [setOpen(true), setClose(false)]}\n      onMouseLeave={() => [\n        setOpen(false),\n        setClose(true),\n        // setOnDropDown(false),\n      ]}\n      className={`${styles.profileDropdownContainer} ${\n        open ? styles.active : close ? styles.deactivated : null\n      }  `}\n    >\n      <ul\n        className={`${styles.profileDropdownList} ${\n          open ? styles.active : null\n        }`}\n      >\n        <li\n        // onClick={() => [setOpen(false), setClose(true)]}\n        >\n          <Link\n            to=\"/profile\"\n            className={`${styles.option} ${open ? styles.active : null}`}\n          >\n            Profile\n          </Link>\n        </li>\n        <li\n        // onClick={() => [onLogoutCLick(), setOpen(false), setClose(true)]}\n        >\n          <Link\n            to=\"/login\"\n            className={`${styles.option} ${open ? styles.active : null}`}\n          >\n            Log Out\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Dropdown;\n",["459","460"],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/ProfileDropdownInitiator/ProfileDropdownInitiator.js",["461","462","463","464"],"import styles from \"./ProfileDropdownInitiator.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport profile from \"./profile.png\";\n\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst ProfileDropdownInitiator = () => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.profilePicContainer}>\n      {currentUser.profilePic ? (\n        <img\n          src={currentUser.profilePic}\n          alt=\"\"\n          className={styles.profilePic}\n        />\n      ) : (\n        <img\n          src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n          alt=\"\"\n          className={styles.profilePic}\n        />\n      )}\n      {/* <img src={profile} alt=\"\" className={styles.profilePic} /> */}\n    </div>\n  );\n};\n\nexport default ProfileDropdownInitiator;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/TestDropDown/TestDropDown.js",["465","466","467","468","469","470","471","472","473","474","475"],"import styles from \"./TestDropDown.module.css\";\nimport React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  FC,\n  SetStateAction,\n  Dispatch,\n} from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport profile from \"./profile.png\";\n\n// import socketIOClient from \"socket.io-client\";\n// const SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst TestDropDown = ({ socketRef, socketIdFromNav }) => {\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  let [logout] = useMutation(mutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const { pathname } = useLocation();\n  const [open, setOpen] = useState(false);\n  const [close, setClose] = useState(false);\n  const [currentPath, setCurrentPath] = useState(pathname);\n  const dispatch = useAppDispatch();\n  // const socketRef = useRef();\n\n  // useEffect(() => {\n  //   if (open) {\n  //   }\n  // }, [pathname]);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const wrapperRef = useRef(null);\n\n  const onLogoutCLick = () => {\n    // socketRef.current.emit(\"logout\", { socketId: socketIdFromNav });\n    // socketRef.current.disconnect(true);\n\n    logout({\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then(socketRef.current.emit(\"refetchOnlineUsers\", {}))\n      .then(socketRef.current.disconnect(true))\n      .then(dispatch(setCurrentUser({})))\n\n      .catch((err) => console.log(err));\n  };\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setOpen(false);\n      // setClose(true);\n    }\n  };\n  // console.log(socketRef);\n\n  return (\n    <div\n      className={styles.container}\n      ref={wrapperRef}\n      onMouseLeave={() => [setOpen(false), setClose(true)]}\n    >\n      <div className={styles.profilePicContainer}>\n        <img\n          src={profile}\n          alt=\"\"\n          className={styles.profilePic}\n          onMouseOver={() => setOpen(true)}\n          // onMouseLeave={() => setOpen(false)}\n        />\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n\n      <div\n        // onMouseLeave={() => setOpen(false)}\n        className={`${styles.profileDropdownContainer} ${\n          open\n            ? // && currentPath === pathname\n              styles.active\n            : close\n            ? styles.deactivated\n            : // && styles.active\n              null\n        }  `}\n      >\n        <div className={`${styles.profileDropdownContainer1}`}>\n          <ul\n            className={`${styles.profileDropdownList} ${\n              open ? styles.active : null\n            }`}\n          >\n            <li onClick={() => [setOpen(false), setClose(true)]}>\n              <Link\n                to=\"/profile\"\n                className={`${styles.option} ${open ? styles.active : null}`}\n              >\n                Profile\n              </Link>\n            </li>\n            <li\n              onClick={() => [onLogoutCLick(), setOpen(false), setClose(true)]}\n            >\n              <Link\n                to=\"/login\"\n                className={`${styles.option} ${open ? styles.active : null}`}\n              >\n                Log Out\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TestDropDown;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/index.js",["476","477"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n/* -------------------------------------------------------------------------- */\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n/* -------------------------------------------------------------------------- */\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n} from \"@apollo/client\";\nimport { persistCache, LocalStorageWrapper } from \"apollo3-cache-persist\";\nimport CurrentUser from \"./GQL/queries/CurrentUser\";\nimport setUser from \"./GQL/queries/setUser\";\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\nconst cache = new InMemoryCache();\nconst init = async () => {\n  await persistCache({\n    cache,\n    storage: window.localStorage,\n  });\n};\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"http://localhost:4000/graphql\",\n    credentials: \"include\",\n  }),\n  cache: cache,\n  connectToDevTools: true,\n});\ntry {\n  cache.readQuery({\n    query: setUser,\n  });\n} catch (error) {\n  cache.writeData({\n    data: {\n      user: [],\n    },\n  });\n}\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n// const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n\nrender(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\ninit();\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/queries/setUser.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/_pages/LoadingPage/LoadingPage.tsx",["478","479","480","481","482","483","484"],"import styles from \"./LoadingPage.module.css\";\nimport React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  FC,\n  SetStateAction,\n  Dispatch,\n} from \"react\";\n\nconst LoadingPage = () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleContainer}>\n        <h1 className={styles.title}>Loading</h1>\n      </div>\n\n      <div className={styles.loader}></div>\n    </div>\n  );\n};\n\nexport default LoadingPage;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/utils/useIPFS.js",["485","486","487","488","489"],"import React, { useEffect, useRef, useState, useCallback } from \"react\";\n\n// import { create } from \"ipfs-http-client\";\n// const ipfs = create({\n//   host: \"ipfs.infura.io\",\n//   port: 5001,\n//   protocol: \"https\",\n// });\nimport { create as ipfsHttpClient } from \"ipfs-http-client\";\nconst client = ipfsHttpClient(\"https://ipfs.infura.io:5001/api/v0\");\n\nconst useIPFS = () => {\n  const [ipfsBuffer, setIPFSBuffer] = useState(null);\n  const [fileUrl, setFileUrl] = useState(null);\n  /* ----------------------------------IPFS--------------------------------- */\n  const captureFile = async (e) => {\n    e.preventDefault();\n    console.log(\"File captured\");\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    console.log(file);\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      setIPFSBuffer(Buffer(reader.result));\n      console.log(\"Buffer\", Buffer(reader.result));\n    };\n    return ipfsBuffer;\n  };\n  // const captureJSON = () => {\n  //   // e.preventDefault();\n  //   console.log(\"File captured\");\n  //   const stuff = data;\n  //   const str = JSON.stringify(stuff);\n  //   const bytes = new TextEncoder().encode(str);\n  //   const blob = new Blob([bytes], {\n  //     type: \"application/json;charset=utf-8\",\n  //   });\n  //   const reader = new window.FileReader();\n  //   reader.readAsArrayBuffer(blob);\n  //   reader.onloadend = () => {\n  //     setIPFSBuffer(Buffer(reader.result));\n  //     console.log(\"Buffer\", Buffer(reader.result));\n  //   };\n  //   return Buffer(reader.result);\n  // };\n  // const ipfsSubmit = async (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitting to IPFS\");\n\n  //   const result = await ipfs.add(ipfsBuffer);\n  //   console.log(\"IPFS RESULT:\", result.path);\n  //   const picHash = result.path;\n  //   console.log(result.path);\n  //   return `https://ipfs.infura.io/ipfs/${picHash}`;\n  //   /* -------------------------------------------------------------------------- */\n  //   /* --------------------------- store on blockchain -------------------------- */\n  //   // Step 2: store file on blockchain\n  //   //  await contract.methods\n  //   //  .set(picHash)\n  //   //  .send({\n  //   //    from: account,\n  //   //  })\n  //   //  .then((res) => setPichash(picHash));\n  // };\n  //   const renderIPFSImage = () => {\n  //     return `https://ipfs.infura.io/ipfs/${picHash}`;\n  // };\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  const captureFileAndUploadToIPFS = async (e) => {\n    const file = e.target.files[0];\n    try {\n      const added = await client.add(file, {\n        progress: (prog) => console.log(`received: ${prog}`),\n      });\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      setFileUrl(url);\n      console.log(url);\n      return url;\n    } catch (error) {\n      console.log(\"Error uploading file: \", error);\n    }\n  };\n\n  const uploadToIPFS = async (data) => {\n    try {\n      const added = await client.add(data);\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      return url;\n    } catch (error) {\n      console.log(\"Error uploading file: \", error);\n    }\n  };\n  /* -------------------------------------------------------------------------- */\n  return {\n    // web3Modal_address_abi,\n    // ethers_address_abi,\n    captureFile,\n    // captureJSON,\n    // ipfsSubmit,\n    uploadToIPFS,\n    captureFileAndUploadToIPFS,\n  };\n};\n\nexport default useIPFS;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakePost/MakePost.js",["490","491","492","493"],"import styles from \"./MakePost.module.css\";\nimport React, { useState, useEffect, FormEvent } from \"react\";\nimport profilePic from \"./profile.png\";\nimport PostForm from \"../../PostForm/PostForm\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\n\nconst MakePost = () => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.picInputContainer}>\n        <div className={styles.profilePicContainer}>\n          {currentUser.profilePic ? (\n            <img\n              src={currentUser.profilePic}\n              alt=\"\"\n              className={styles.profilePic}\n            />\n          ) : (\n            <img\n              src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n              alt=\"\"\n              className={styles.profilePic}\n            />\n          )}\n        </div>\n\n        <div className={styles.input} onClick={() => setShowModal(!showModal)}>\n          What's on your mind,&nbsp;\n          {currentUser.name ? currentUser.name : \"name here\"}?\n        </div>\n      </div>\n\n      <PostForm showModal={showModal} setShowModal={setShowModal} />\n    </div>\n  );\n};\n\nexport default MakePost;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeleteComment/EditDeleteComment.js",["494","495","496"],"import styles from \"./EditDeleteComment.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport deleteCommentMutation from \"../../../../GQL/mutations/deleteComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport LoadingSpinner from \"../../../LoadingSpinner/LoadingSpinner\";\n\nconst EditDeleteComment = ({ comment }) => {\n  const [editComment] = useMutation(editCommentMutation);\n  const [deleteComment] = useMutation(deleteCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  // const { refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [commentText, setCommentText] = useState(comment.comment);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setCommentText(comment.comment);\n  }, [comment]);\n\n  const editCommentOnClick = () => {\n    setLoading(true);\n    editComment({\n      variables: {\n        id: comment.id,\n        comment: commentText,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) => [setShowModal(false), setLoading(false)])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n  const deleteCommentOnClick = (e) => {\n    setLoading(true);\n    console.log(\"start\");\n    /* ----------------------------- delete comment ----------------------------- */\n    deleteComment({\n      variables: {\n        id: comment.id,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      /* -----------------------------Delete Comment from Post--------------------------------------------- */\n      .then((res) =>\n        editPost({\n          variables: {\n            id: comment.postId,\n            deleteComment: comment.id,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then([setShowModal(false), setLoading(false)])\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      )\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n\n  if (!showModal) return <div onClick={() => setShowModal(true)}>...</div>;\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Edit Comment</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n        </div>\n\n        <div className={styles.contentContainer}>\n          {loading ? (\n            <div className={styles.LoadingSpinner}>\n              <LoadingSpinner />\n            </div>\n          ) : null}\n          <div className={styles.inputContainer}>\n            <textarea\n              // onChange={(e) => setPostText(e.target.value)}\n              className={styles.input}\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              placeholder={`What's on your mind, ${currentUser.name}?`}\n              // maxlength=\"1\"\n            ></textarea>\n          </div>\n          <div className={styles.postBtnContainer}>\n            <button\n              className={`${styles.editBtn} ${styles.btn}`}\n              onClick={() => editCommentOnClick()}\n            >\n              Edit\n            </button>\n            <button\n              className={`${styles.deleteBtn} ${styles.btn}`}\n              onClick={(e) => deleteCommentOnClick()}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditDeleteComment;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeleteComment/modal/modal.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/deleteComment.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js",["497","498","499"],"import styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport deletePostMutation from \"../../../../GQL/mutations/deletePost\";\nimport editUserMutation from \"../../../../GQL/mutations/editUser\";\nimport LoadingSpinner from \"../../../LoadingSpinner/LoadingSpinner\";\n\nconst EditDeletePost = ({ postId, postContent }) => {\n  const [editPost] = useMutation(editPostMutation);\n  const [deletePost] = useMutation(deletePostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const { refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setPostText(postContent);\n  }, [postContent]);\n\n  const editPostOnClick = () => {\n    setLoading(true);\n    editPost({\n      variables: {\n        id: postId,\n        post: postText,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      // .then((res) => refetch())\n      .then((res) => [setShowModal(false), setLoading(false)])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n  const deletePostOnClick = (e) => {\n    setLoading(true);\n    console.log(\"start\");\n    /* ----------------------------- delete Post ----------------------------- */\n    deletePost({\n      variables: {\n        id: postId,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      /* -----------------------------Delete post from User--------------------------------------------- */\n      .then((res) =>\n        editUser({\n          variables: {\n            id: currentUser.id,\n            deletePost: postId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then([setShowModal(false), setLoading(false)])\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      )\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n\n  if (!showModal) return <div onClick={() => setShowModal(true)}>...</div>;\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Edit Post</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n        </div>\n\n        <div className={styles.contentContainer}>\n          {loading ? (\n            <div className={styles.LoadingSpinner}>\n              <LoadingSpinner />\n            </div>\n          ) : null}\n          <div className={styles.inputContainer}>\n            <textarea\n              className={styles.input}\n              value={postText}\n              onChange={(e) => setPostText(e.target.value)}\n              placeholder={`What's on your mind, ${currentUser.name}?`}\n              // maxlength=\"1\"\n            ></textarea>\n          </div>\n          <div className={styles.postBtnContainer}>\n            <button\n              className={`${styles.editBtn} ${styles.btn}`}\n              onClick={() => editPostOnClick()}\n            >\n              Edit\n            </button>\n            <button\n              className={`${styles.deleteBtn} ${styles.btn}`}\n              onClick={(e) => deletePostOnClick()}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditDeletePost;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/modal/modal.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/GQL/mutations/editUser.js",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/onlineUsersSlice.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/socketSlice.ts",[],"/Users/omarragab/Documents/Job/ResumeProject1/client/src/App.js",["500","501","502","503","504"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport { Router, Route, Switch, useLocation } from \"react-router-dom\";\nimport history from \"./utils/history\";\nimport RequireAuth from \"./utils/requireAuth\";\nimport NavBar from \"./components/Navigation/NavBar/NavBar\";\n\nimport SideNav from \"./components/Navigation/SideNav/SideNav\";\nimport HomePage from \"./_pages/HomePage/HomePage\";\nimport SideBar from \"./components/Navigation/SideBar/SideBar\";\nimport LoginPage from \"./_pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./_pages/RegisterPage/RegisterPage\";\nimport ChatPage from \"./_pages/ChatPage/ChatPage\";\nimport Error404Page from \"./_pages/Error404Page/Error404Page\";\nimport ProfilePage from \"./_pages/ProfilePage/ProfilePage\";\nimport FriendPage from \"./_pages/FriendPage/FriendPage\";\nimport LoadingPage from \"./_pages/LoadingPage/LoadingPage\";\n\nfunction App(props: any) {\n  // const [currentRoute, setCurrentRoute] = useState(document.location.pathname);\n  // const dontShowUp = [\"/\", \"/login\"];\n  // useEffect(() => {\n  //   console.log(currentRoute);\n  // }, [currentRoute]);\n\n  return (\n    <div className={styles.App}>\n      <Router history={history}>\n        <NavBar />\n\n        <div className={styles.SideBar}>{<SideBar />}</div>\n\n        {/* ------------------------------- Full Pages ------------------------------- */}\n        {/* <Switch> */}\n        <Switch>\n          <Route path=\"/home\" exact component={RequireAuth(HomePage)} />\n\n          <Route path=\"/chat\" exact component={RequireAuth(ChatPage)} />\n          <Route path=\"/profile\" exact component={RequireAuth(ProfilePage)} />\n          <Route path=\"/friends\" exact component={RequireAuth(FriendPage)} />\n\n          <Route path=\"/login\" exact component={LoginPage} />\n          <Route path=\"/register\" exact component={RegisterPage} />\n          <Route path=\"/\" exact component={LoginPage} />\n\n          <Route component={Error404Page} />\n        </Switch>\n\n        {/* ------------------------------- Dynamic Pages ------------------------------- */}\n        {/* </Switch> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/LoadingSpinner/LoadingSpinner.js",["505"],"import styles from \"./LoadingSpinner.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\n\nconst LoadingSpinner = () => {\n  let spinner = useRef();\n  const [fixAnimation, setFixAnimation] = useState(false);\n\n  useEffect(() => {\n    setFixAnimation(true);\n    gsap.from(spinner.current, { scale: 0, duration: 0.4 });\n    // gsap.from(spinner.current, { opacity: 0, scale: 0, duration: 1 });\n    setFixAnimation(false);\n  }, []);\n\n  return (\n    <div className={styles.container} ref={spinner}>\n      <div\n        className={styles.loader}\n        // className={`${styles.loader} ${!fixAnimation ? styles.hide : null}`}\n      ></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n",{"ruleId":"506","severity":1,"message":"507","line":2,"column":10,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"506","severity":1,"message":"510","line":3,"column":8,"nodeType":"508","messageId":"509","endLine":3,"endColumn":13},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","replacedBy":"514"},{"ruleId":"515","severity":1,"message":"516","line":4,"column":8,"nodeType":"508","messageId":"509","endLine":4,"endColumn":17},{"ruleId":"515","severity":1,"message":"517","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":14},{"ruleId":"515","severity":1,"message":"518","line":11,"column":13,"nodeType":"508","messageId":"509","endLine":11,"endColumn":21},{"ruleId":"515","severity":1,"message":"519","line":12,"column":22,"nodeType":"508","messageId":"509","endLine":12,"endColumn":27},{"ruleId":"520","severity":1,"message":"521","line":18,"column":8,"nodeType":"522","endLine":18,"endColumn":14,"suggestions":"523"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","replacedBy":"514"},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"517","line":3,"column":10,"nodeType":"508","messageId":"509","endLine":3,"endColumn":14},{"ruleId":"515","severity":1,"message":"526","line":4,"column":10,"nodeType":"508","messageId":"509","endLine":4,"endColumn":20},{"ruleId":"515","severity":1,"message":"527","line":5,"column":8,"nodeType":"508","messageId":"509","endLine":5,"endColumn":15},{"ruleId":"515","severity":1,"message":"528","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":24},{"ruleId":"515","severity":1,"message":"529","line":6,"column":26,"nodeType":"508","messageId":"509","endLine":6,"endColumn":40},{"ruleId":"515","severity":1,"message":"518","line":12,"column":11,"nodeType":"508","messageId":"509","endLine":12,"endColumn":19},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"525","line":1,"column":27,"nodeType":"508","messageId":"509","endLine":1,"endColumn":36},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"530","line":5,"column":8,"nodeType":"508","messageId":"509","endLine":5,"endColumn":14},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":26},{"ruleId":"515","severity":1,"message":"531","line":4,"column":23,"nodeType":"508","messageId":"509","endLine":4,"endColumn":31},{"ruleId":"515","severity":1,"message":"529","line":5,"column":26,"nodeType":"508","messageId":"509","endLine":5,"endColumn":40},{"ruleId":"515","severity":1,"message":"532","line":12,"column":29,"nodeType":"508","messageId":"509","endLine":12,"endColumn":49},{"ruleId":"515","severity":1,"message":"529","line":5,"column":26,"nodeType":"508","messageId":"509","endLine":5,"endColumn":40},{"ruleId":"515","severity":1,"message":"533","line":7,"column":10,"nodeType":"508","messageId":"509","endLine":7,"endColumn":17},{"ruleId":"515","severity":1,"message":"534","line":22,"column":9,"nodeType":"508","messageId":"509","endLine":22,"endColumn":20},{"ruleId":"515","severity":1,"message":"519","line":23,"column":18,"nodeType":"508","messageId":"509","endLine":23,"endColumn":23},{"ruleId":"520","severity":1,"message":"535","line":52,"column":6,"nodeType":"522","endLine":52,"endColumn":33,"suggestions":"536"},{"ruleId":"515","severity":1,"message":"537","line":3,"column":10,"nodeType":"508","messageId":"509","endLine":3,"endColumn":21},{"ruleId":"515","severity":1,"message":"531","line":3,"column":23,"nodeType":"508","messageId":"509","endLine":3,"endColumn":31},{"ruleId":"515","severity":1,"message":"538","line":3,"column":33,"nodeType":"508","messageId":"509","endLine":3,"endColumn":45},{"ruleId":"515","severity":1,"message":"529","line":6,"column":26,"nodeType":"508","messageId":"509","endLine":6,"endColumn":40},{"ruleId":"515","severity":1,"message":"539","line":10,"column":24,"nodeType":"508","messageId":"509","endLine":10,"endColumn":34},{"ruleId":"515","severity":1,"message":"540","line":10,"column":36,"nodeType":"508","messageId":"509","endLine":10,"endColumn":46},{"ruleId":"515","severity":1,"message":"541","line":13,"column":10,"nodeType":"508","messageId":"509","endLine":13,"endColumn":26},{"ruleId":"515","severity":1,"message":"542","line":13,"column":28,"nodeType":"508","messageId":"509","endLine":13,"endColumn":47},{"ruleId":"520","severity":1,"message":"543","line":37,"column":6,"nodeType":"522","endLine":37,"endColumn":19,"suggestions":"544"},{"ruleId":"515","severity":1,"message":"545","line":1,"column":8,"nodeType":"508","messageId":"509","endLine":1,"endColumn":13},{"ruleId":"515","severity":1,"message":"546","line":1,"column":46,"nodeType":"508","messageId":"509","endLine":1,"endColumn":57},{"ruleId":"515","severity":1,"message":"547","line":3,"column":18,"nodeType":"508","messageId":"509","endLine":3,"endColumn":24},{"ruleId":"515","severity":1,"message":"529","line":4,"column":26,"nodeType":"508","messageId":"509","endLine":4,"endColumn":40},{"ruleId":"515","severity":1,"message":"531","line":5,"column":10,"nodeType":"508","messageId":"509","endLine":5,"endColumn":18},{"ruleId":"515","severity":1,"message":"537","line":5,"column":20,"nodeType":"508","messageId":"509","endLine":5,"endColumn":31},{"ruleId":"515","severity":1,"message":"545","line":1,"column":8,"nodeType":"508","messageId":"509","endLine":1,"endColumn":13},{"ruleId":"515","severity":1,"message":"531","line":2,"column":23,"nodeType":"508","messageId":"509","endLine":2,"endColumn":31},{"ruleId":"515","severity":1,"message":"548","line":7,"column":8,"nodeType":"508","messageId":"509","endLine":7,"endColumn":19},{"ruleId":"515","severity":1,"message":"549","line":27,"column":10,"nodeType":"508","messageId":"509","endLine":27,"endColumn":25},{"ruleId":"515","severity":1,"message":"550","line":37,"column":7,"nodeType":"508","messageId":"509","endLine":37,"endColumn":20},{"ruleId":"515","severity":1,"message":"551","line":38,"column":7,"nodeType":"508","messageId":"509","endLine":38,"endColumn":13},{"ruleId":"520","severity":1,"message":"552","line":48,"column":6,"nodeType":"522","endLine":48,"endColumn":19,"suggestions":"553"},{"ruleId":"520","severity":1,"message":"554","line":76,"column":6,"nodeType":"522","endLine":76,"endColumn":50,"suggestions":"555"},{"ruleId":"515","severity":1,"message":"556","line":94,"column":9,"nodeType":"508","messageId":"509","endLine":94,"endColumn":24},{"ruleId":"515","severity":1,"message":"538","line":2,"column":33,"nodeType":"508","messageId":"509","endLine":2,"endColumn":45},{"ruleId":"515","severity":1,"message":"529","line":7,"column":26,"nodeType":"508","messageId":"509","endLine":7,"endColumn":40},{"ruleId":"515","severity":1,"message":"557","line":11,"column":9,"nodeType":"508","messageId":"509","endLine":11,"endColumn":16},{"ruleId":"515","severity":1,"message":"519","line":11,"column":18,"nodeType":"508","messageId":"509","endLine":11,"endColumn":23},{"ruleId":"520","severity":1,"message":"558","line":18,"column":6,"nodeType":"522","endLine":18,"endColumn":8,"suggestions":"559"},{"ruleId":"520","severity":1,"message":"560","line":29,"column":6,"nodeType":"522","endLine":29,"endColumn":19,"suggestions":"561"},{"ruleId":"562","severity":1,"message":"563","line":88,"column":65,"nodeType":"564","messageId":"565","endLine":88,"endColumn":67},{"ruleId":"515","severity":1,"message":"546","line":1,"column":38,"nodeType":"508","messageId":"509","endLine":1,"endColumn":49},{"ruleId":"515","severity":1,"message":"529","line":7,"column":26,"nodeType":"508","messageId":"509","endLine":7,"endColumn":40},{"ruleId":"515","severity":1,"message":"557","line":18,"column":9,"nodeType":"508","messageId":"509","endLine":18,"endColumn":16},{"ruleId":"515","severity":1,"message":"519","line":18,"column":18,"nodeType":"508","messageId":"509","endLine":18,"endColumn":23},{"ruleId":"515","severity":1,"message":"566","line":18,"column":25,"nodeType":"508","messageId":"509","endLine":18,"endColumn":29},{"ruleId":"515","severity":1,"message":"567","line":19,"column":9,"nodeType":"508","messageId":"509","endLine":19,"endColumn":13},{"ruleId":"515","severity":1,"message":"568","line":22,"column":10,"nodeType":"508","messageId":"509","endLine":22,"endColumn":20},{"ruleId":"515","severity":1,"message":"569","line":24,"column":10,"nodeType":"508","messageId":"509","endLine":24,"endColumn":18},{"ruleId":"515","severity":1,"message":"570","line":31,"column":14,"nodeType":"508","messageId":"509","endLine":31,"endColumn":30},{"ruleId":"515","severity":1,"message":"571","line":33,"column":7,"nodeType":"508","messageId":"509","endLine":33,"endColumn":14},{"ruleId":"520","severity":1,"message":"572","line":42,"column":3,"nodeType":"508","endLine":42,"endColumn":12,"suggestions":"573"},{"ruleId":"520","severity":1,"message":"574","line":143,"column":6,"nodeType":"522","endLine":143,"endColumn":65,"suggestions":"575"},{"ruleId":"520","severity":1,"message":"576","line":143,"column":16,"nodeType":"577","endLine":143,"endColumn":64},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"537","line":5,"column":20,"nodeType":"508","messageId":"509","endLine":5,"endColumn":31},{"ruleId":"515","severity":1,"message":"578","line":9,"column":10,"nodeType":"508","messageId":"509","endLine":9,"endColumn":19},{"ruleId":"515","severity":1,"message":"517","line":11,"column":10,"nodeType":"508","messageId":"509","endLine":11,"endColumn":14},{"ruleId":"515","severity":1,"message":"579","line":12,"column":8,"nodeType":"508","messageId":"509","endLine":12,"endColumn":16},{"ruleId":"515","severity":1,"message":"557","line":22,"column":9,"nodeType":"508","messageId":"509","endLine":22,"endColumn":16},{"ruleId":"515","severity":1,"message":"519","line":22,"column":18,"nodeType":"508","messageId":"509","endLine":22,"endColumn":23},{"ruleId":"520","severity":1,"message":"580","line":34,"column":6,"nodeType":"522","endLine":34,"endColumn":12,"suggestions":"581"},{"ruleId":"520","severity":1,"message":"582","line":48,"column":6,"nodeType":"522","endLine":48,"endColumn":34,"suggestions":"583"},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"584","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":14},{"ruleId":"515","severity":1,"message":"585","line":6,"column":16,"nodeType":"508","messageId":"509","endLine":6,"endColumn":23},{"ruleId":"515","severity":1,"message":"531","line":3,"column":23,"nodeType":"508","messageId":"509","endLine":3,"endColumn":31},{"ruleId":"515","severity":1,"message":"586","line":11,"column":10,"nodeType":"508","messageId":"509","endLine":11,"endColumn":16},{"ruleId":"520","severity":1,"message":"587","line":24,"column":6,"nodeType":"522","endLine":24,"endColumn":27,"suggestions":"588"},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"586","line":13,"column":10,"nodeType":"508","messageId":"509","endLine":13,"endColumn":16},{"ruleId":"515","severity":1,"message":"529","line":2,"column":26,"nodeType":"508","messageId":"509","endLine":2,"endColumn":40},{"ruleId":"515","severity":1,"message":"537","line":4,"column":10,"nodeType":"508","messageId":"509","endLine":4,"endColumn":21},{"ruleId":"515","severity":1,"message":"557","line":10,"column":9,"nodeType":"508","messageId":"509","endLine":10,"endColumn":16},{"ruleId":"515","severity":1,"message":"519","line":10,"column":18,"nodeType":"508","messageId":"509","endLine":10,"endColumn":23},{"ruleId":"515","severity":1,"message":"566","line":10,"column":25,"nodeType":"508","messageId":"509","endLine":10,"endColumn":29},{"ruleId":"520","severity":1,"message":"558","line":22,"column":6,"nodeType":"522","endLine":22,"endColumn":19,"suggestions":"589"},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"531","line":3,"column":23,"nodeType":"508","messageId":"509","endLine":3,"endColumn":31},{"ruleId":"515","severity":1,"message":"538","line":3,"column":33,"nodeType":"508","messageId":"509","endLine":3,"endColumn":45},{"ruleId":"515","severity":1,"message":"529","line":4,"column":26,"nodeType":"508","messageId":"509","endLine":4,"endColumn":40},{"ruleId":"515","severity":1,"message":"590","line":7,"column":8,"nodeType":"508","messageId":"509","endLine":7,"endColumn":15},{"ruleId":"515","severity":1,"message":"591","line":69,"column":9,"nodeType":"508","messageId":"509","endLine":69,"endColumn":20},{"ruleId":"515","severity":1,"message":"592","line":97,"column":9,"nodeType":"508","messageId":"509","endLine":97,"endColumn":22},{"ruleId":"515","severity":1,"message":"529","line":4,"column":26,"nodeType":"508","messageId":"509","endLine":4,"endColumn":40},{"ruleId":"515","severity":1,"message":"531","line":5,"column":23,"nodeType":"508","messageId":"509","endLine":5,"endColumn":31},{"ruleId":"515","severity":1,"message":"593","line":6,"column":8,"nodeType":"508","messageId":"509","endLine":6,"endColumn":24},{"ruleId":"515","severity":1,"message":"594","line":7,"column":8,"nodeType":"508","messageId":"509","endLine":7,"endColumn":27},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"529","line":3,"column":26,"nodeType":"508","messageId":"509","endLine":3,"endColumn":40},{"ruleId":"515","severity":1,"message":"531","line":7,"column":23,"nodeType":"508","messageId":"509","endLine":7,"endColumn":31},{"ruleId":"515","severity":1,"message":"595","line":12,"column":10,"nodeType":"508","messageId":"509","endLine":12,"endColumn":24},{"ruleId":"515","severity":1,"message":"596","line":12,"column":26,"nodeType":"508","messageId":"509","endLine":12,"endColumn":43},{"ruleId":"515","severity":1,"message":"597","line":13,"column":10,"nodeType":"508","messageId":"509","endLine":13,"endColumn":25},{"ruleId":"515","severity":1,"message":"598","line":13,"column":27,"nodeType":"508","messageId":"509","endLine":13,"endColumn":45},{"ruleId":"515","severity":1,"message":"599","line":15,"column":10,"nodeType":"508","messageId":"509","endLine":15,"endColumn":19},{"ruleId":"515","severity":1,"message":"600","line":15,"column":21,"nodeType":"508","messageId":"509","endLine":15,"endColumn":33},{"ruleId":"515","severity":1,"message":"601","line":2,"column":38,"nodeType":"508","messageId":"509","endLine":2,"endColumn":44},{"ruleId":"515","severity":1,"message":"529","line":4,"column":26,"nodeType":"508","messageId":"509","endLine":4,"endColumn":40},{"ruleId":"515","severity":1,"message":"531","line":8,"column":23,"nodeType":"508","messageId":"509","endLine":8,"endColumn":31},{"ruleId":"515","severity":1,"message":"538","line":8,"column":33,"nodeType":"508","messageId":"509","endLine":8,"endColumn":45},{"ruleId":"515","severity":1,"message":"602","line":10,"column":10,"nodeType":"508","messageId":"509","endLine":10,"endColumn":14},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"601","line":2,"column":38,"nodeType":"508","messageId":"509","endLine":2,"endColumn":44},{"ruleId":"515","severity":1,"message":"603","line":3,"column":16,"nodeType":"508","messageId":"509","endLine":3,"endColumn":27},{"ruleId":"515","severity":1,"message":"531","line":5,"column":10,"nodeType":"508","messageId":"509","endLine":5,"endColumn":18},{"ruleId":"515","severity":1,"message":"604","line":17,"column":9,"nodeType":"508","messageId":"509","endLine":17,"endColumn":22},{"ruleId":"511","replacedBy":"605"},{"ruleId":"513","replacedBy":"606"},{"ruleId":"515","severity":1,"message":"524","line":2,"column":17,"nodeType":"508","messageId":"509","endLine":2,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"607","line":3,"column":8,"nodeType":"508","messageId":"509","endLine":3,"endColumn":15},{"ruleId":"515","severity":1,"message":"529","line":5,"column":26,"nodeType":"508","messageId":"509","endLine":5,"endColumn":40},{"ruleId":"515","severity":1,"message":"608","line":6,"column":3,"nodeType":"508","messageId":"509","endLine":6,"endColumn":13},{"ruleId":"515","severity":1,"message":"609","line":7,"column":3,"nodeType":"508","messageId":"509","endLine":7,"endColumn":5},{"ruleId":"515","severity":1,"message":"610","line":8,"column":3,"nodeType":"508","messageId":"509","endLine":8,"endColumn":17},{"ruleId":"515","severity":1,"message":"611","line":9,"column":3,"nodeType":"508","messageId":"509","endLine":9,"endColumn":11},{"ruleId":"515","severity":1,"message":"557","line":23,"column":9,"nodeType":"508","messageId":"509","endLine":23,"endColumn":16},{"ruleId":"515","severity":1,"message":"519","line":23,"column":18,"nodeType":"508","messageId":"509","endLine":23,"endColumn":23},{"ruleId":"515","severity":1,"message":"566","line":23,"column":25,"nodeType":"508","messageId":"509","endLine":23,"endColumn":29},{"ruleId":"515","severity":1,"message":"571","line":23,"column":31,"nodeType":"508","messageId":"509","endLine":23,"endColumn":38},{"ruleId":"515","severity":1,"message":"534","line":25,"column":9,"nodeType":"508","messageId":"509","endLine":25,"endColumn":20},{"ruleId":"515","severity":1,"message":"612","line":29,"column":10,"nodeType":"508","messageId":"509","endLine":29,"endColumn":21},{"ruleId":"515","severity":1,"message":"613","line":29,"column":23,"nodeType":"508","messageId":"509","endLine":29,"endColumn":37},{"ruleId":"515","severity":1,"message":"614","line":15,"column":24,"nodeType":"508","messageId":"509","endLine":15,"endColumn":43},{"ruleId":"515","severity":1,"message":"615","line":16,"column":8,"nodeType":"508","messageId":"509","endLine":16,"endColumn":19},{"ruleId":"506","severity":1,"message":"524","line":3,"column":3,"nodeType":"508","messageId":"509","endLine":3,"endColumn":11},{"ruleId":"506","severity":1,"message":"525","line":4,"column":3,"nodeType":"508","messageId":"509","endLine":4,"endColumn":12},{"ruleId":"506","severity":1,"message":"601","line":5,"column":3,"nodeType":"508","messageId":"509","endLine":5,"endColumn":9},{"ruleId":"506","severity":1,"message":"608","line":6,"column":3,"nodeType":"508","messageId":"509","endLine":6,"endColumn":13},{"ruleId":"506","severity":1,"message":"609","line":7,"column":3,"nodeType":"508","messageId":"509","endLine":7,"endColumn":5},{"ruleId":"506","severity":1,"message":"610","line":8,"column":3,"nodeType":"508","messageId":"509","endLine":8,"endColumn":17},{"ruleId":"506","severity":1,"message":"611","line":9,"column":3,"nodeType":"508","messageId":"509","endLine":9,"endColumn":11},{"ruleId":"515","severity":1,"message":"545","line":1,"column":8,"nodeType":"508","messageId":"509","endLine":1,"endColumn":13},{"ruleId":"515","severity":1,"message":"525","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":26},{"ruleId":"515","severity":1,"message":"601","line":1,"column":28,"nodeType":"508","messageId":"509","endLine":1,"endColumn":34},{"ruleId":"515","severity":1,"message":"546","line":1,"column":46,"nodeType":"508","messageId":"509","endLine":1,"endColumn":57},{"ruleId":"515","severity":1,"message":"616","line":14,"column":10,"nodeType":"508","messageId":"509","endLine":14,"endColumn":17},{"ruleId":"515","severity":1,"message":"525","line":2,"column":27,"nodeType":"508","messageId":"509","endLine":2,"endColumn":36},{"ruleId":"515","severity":1,"message":"617","line":2,"column":38,"nodeType":"508","messageId":"509","endLine":2,"endColumn":47},{"ruleId":"515","severity":1,"message":"618","line":3,"column":8,"nodeType":"508","messageId":"509","endLine":3,"endColumn":18},{"ruleId":"515","severity":1,"message":"529","line":5,"column":26,"nodeType":"508","messageId":"509","endLine":5,"endColumn":40},{"ruleId":"515","severity":1,"message":"601","line":2,"column":38,"nodeType":"508","messageId":"509","endLine":2,"endColumn":44},{"ruleId":"515","severity":1,"message":"529","line":4,"column":26,"nodeType":"508","messageId":"509","endLine":4,"endColumn":40},{"ruleId":"515","severity":1,"message":"531","line":6,"column":23,"nodeType":"508","messageId":"509","endLine":6,"endColumn":31},{"ruleId":"515","severity":1,"message":"601","line":2,"column":38,"nodeType":"508","messageId":"509","endLine":2,"endColumn":44},{"ruleId":"515","severity":1,"message":"529","line":4,"column":26,"nodeType":"508","messageId":"509","endLine":4,"endColumn":40},{"ruleId":"515","severity":1,"message":"571","line":17,"column":11,"nodeType":"508","messageId":"509","endLine":17,"endColumn":18},{"ruleId":"515","severity":1,"message":"524","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":25},{"ruleId":"515","severity":1,"message":"525","line":1,"column":27,"nodeType":"508","messageId":"509","endLine":1,"endColumn":36},{"ruleId":"515","severity":1,"message":"603","line":3,"column":33,"nodeType":"508","messageId":"509","endLine":3,"endColumn":44},{"ruleId":"515","severity":1,"message":"619","line":8,"column":8,"nodeType":"508","messageId":"509","endLine":8,"endColumn":15},{"ruleId":"515","severity":1,"message":"620","line":17,"column":8,"nodeType":"508","messageId":"509","endLine":17,"endColumn":19},{"ruleId":"515","severity":1,"message":"621","line":7,"column":10,"nodeType":"508","messageId":"509","endLine":7,"endColumn":22},"@typescript-eslint/no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'thunk' is defined but never used.","no-native-reassign",["622"],"no-negated-in-lhs",["623"],"no-unused-vars","'LoginPage' is defined but never used.","'Link' is defined but never used.","'pathname' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["624"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'history' is defined but never used.","'useAppSelector' is defined but never used.","'useAppDispatch' is defined but never used.","'NavBar' is defined but never used.","'useQuery' is defined but never used.","'setShowEditContainer' is assigned a value but never used.","'current' is defined but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ageText', 'emailText', and 'nameText'. Either include them or remove the dependency array.",["625"],"'useMutation' is defined but never used.","'useLazyQuery' is defined but never used.","'addMessage' is assigned a value but never used.","'setConvoId' is assigned a value but never used.","'finalMessageList' is assigned a value but never used.","'setFinalMessageList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentFriendMessages' and 'selectedFriend'. Either include them or remove the dependency array.",["626"],"'React' is defined but never used.","'useCallback' is defined but never used.","'sha224' is defined but never used.","'useChatRoom' is defined but never used.","'addConversation' is assigned a value but never used.","'networkStatus' is assigned a value but never used.","'called' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCurrentFriendMessages'. Either include it or remove the dependency array.",["627"],"React Hook useEffect has missing dependencies: 'dispatch' and 'messagesError'. Either include them or remove the dependency array.",["628"],"'alteredChatData' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["629"],"React Hook useEffect has a missing dependency: 'friends'. Either include it or remove the dependency array. You can also do a functional update 'setFriends(f => ...)' if you only need 'friends' in the 'setFriends' call.",["630"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'data' is assigned a value but never used.","'room' is assigned a value but never used.","'convoData2' is assigned a value but never used.","'friendId' is assigned a value but never used.","'convoExistsError' is assigned a value but never used.","'refetch' is assigned a value but never used.","React Hook useEffect contains a call to 'setFriends'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [currentUser.friends, onlineUsers] as a second argument to the useEffect Hook.",["631"],"React Hook useEffect has missing dependencies: 'addConversation', 'checkIfConvoExists', 'convoData', 'convoExistsData', 'convoExistsLoading', and 'hash'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setConvoData2' needs the current value of 'convoData'.",["632"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'setSocket' is defined but never used.","'mutation' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'refetch'. Either include them or remove the dependency array.",["633"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["634"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["635"],["636"],"'Comment' is defined but never used.","'onEditClick' is assigned a value but never used.","'onDeleteClick' is assigned a value but never used.","'editUserMutation' is defined but never used.","'editCommentMutation' is defined but never used.","'userCommentIds' is assigned a value but never used.","'setUserCommentIds' is assigned a value but never used.","'editCommentText' is assigned a value but never used.","'setEditCommentText' is assigned a value but never used.","'likeCount' is assigned a value but never used.","'setLikeCount' is assigned a value but never used.","'useRef' is defined but never used.","'gsap' is defined but never used.","'useLocation' is defined but never used.","'onLogoutCLick' is assigned a value but never used.",["622"],["623"],"'profile' is defined but never used.","'useContext' is defined but never used.","'FC' is defined but never used.","'SetStateAction' is defined but never used.","'Dispatch' is defined but never used.","'currentPath' is assigned a value but never used.","'setCurrentPath' is assigned a value but never used.","'LocalStorageWrapper' is defined but never used.","'CurrentUser' is defined but never used.","'fileUrl' is assigned a value but never used.","'FormEvent' is defined but never used.","'profilePic' is defined but never used.","'SideNav' is defined but never used.","'LoadingPage' is defined but never used.","'fixAnimation' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},"Update the dependencies array to be: [data, loading, props.history]",{"range":"663","text":"664"},"Update the dependencies array to be: [loading, data, editActive, nameText, emailText, ageText]",{"range":"665","text":"666"},"Update the dependencies array to be: [currentUser, getCurrentFriendMessages, selectedFriend]",{"range":"667","text":"668"},"Update the dependencies array to be: [getCurrentFriendMessages, messageList]",{"range":"669","text":"670"},"Update the dependencies array to be: [messagesData, messagesLoading, currentUser, messagesError, dispatch]",{"range":"671","text":"672"},"Update the dependencies array to be: [refetch]",{"range":"673","text":"674"},"Update the dependencies array to be: [currentUser, friends]",{"range":"675","text":"676"},"Add dependencies array: [currentUser.friends, onlineUsers]",{"range":"677","text":"678"},"Update the dependencies array to be: [addConversation, checkIfConvoExists, clicked, convoData, convoExistsData, convoExistsLoading, hash]",{"range":"679","text":"680"},"Update the dependencies array to be: [data, dispatch, refetch]",{"range":"681","text":"682"},"Update the dependencies array to be: [currentUser, data, dispatch, navShow]",{"range":"683","text":"684"},"Update the dependencies array to be: [firstName, lastName, name]",{"range":"685","text":"686"},"Update the dependencies array to be: [currentUser, refetch]",{"range":"687","text":"688"},[642,648],"[data, loading, props.history]",[2129,2156],"[loading, data, editActive, nameText, emailText, ageText]",[1498,1511],"[currentUser, getCurrentFriendMessages, selectedFriend]",[1639,1652],"[getCurrentFriendMessages, messageList]",[2471,2515],"[messagesData, messagesLoading, currentUser, messagesError, dispatch]",[880,882],"[refetch]",[1147,1160],"[currentUser, friends]",[1927,1927],", [currentUser.friends, onlineUsers]",[4879,4938],"[addConversation, checkIfConvoExists, clicked, convoData, convoExistsData, convoExistsLoading, hash]",[1494,1500],"[data, dispatch, refetch]",[1985,2013],"[currentUser, data, dispatch, navShow]",[973,994],"[firstName, lastName, name]",[863,876],"[currentUser, refetch]"]