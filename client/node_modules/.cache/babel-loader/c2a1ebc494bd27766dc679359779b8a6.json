{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/PostList/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport Post from \"../Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  // let { loading, error, data } = useQuery(getCurrentUser);\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [friendList, setFriendList] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n  const [posts, setPosts] = useState(\"\");\n  useEffect(() => {\n    if (currentUser.friends) {\n      setFriendList(currentUser.friends);\n      console.log(\"hi\", currentUser.friends);\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    const hi = () => {\n      if (friendList) {\n        friendList.map((friend, index) => {\n          console.log(friend.posts);\n          setPostList(postList.concat(friend.posts));\n          return null;\n        });\n      }\n    };\n\n    hi();\n  }, [friendList]);\n  useEffect(() => {\n    if (postList) {\n      console.log(postList);\n      postList.sort((a, b) => a.time > b.time ? -1 : 1);\n      console.log(\"2\", postList);\n    }\n  }, [postList]); // const renderPosts = () => {\n  //   return posts.map((post, index) => {\n  //     return (\n  //       <div key={index} className={styles.individualPost}>\n  //         <h3>{user.email}</h3> edit post/delete post here <button>Edit</button>{\" \"}\n  //         time/date here\n  //         <h2>{post.post}</h2>\n  //         <button>Like</button>\n  //         <hr />\n  //         comments//// <button>Comment</button>\n  //         <br />\n  //         post.comments here\n  //       </div>\n  //     );\n  //   });\n  // };\n\n  const renderPosts = () => {\n    console.log(postList, \"done\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postListContainer,\n      children: renderPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"NBB078EnJsTlzA1gSo+JUHyWviw=\", false, function () {\n  return [useAppSelector, useMutation];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/PostList/PostList.js"],"names":["styles","useAppSelector","useAppDispatch","React","useState","useEffect","useMutation","useQuery","mutation","getCurrentUser","Post","PostList","currentUser","state","value","editUser","user","setUser","text","setText","friendList","setFriendList","postList","setPostList","posts","setPosts","friends","console","log","hi","map","friend","index","concat","sort","a","b","time","renderPosts","container","postListContainer"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,sBAA/C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAMC,WAAW,GAAGX,cAAc,CAAEY,KAAD,IAAWA,KAAK,CAACD,WAAN,CAAkBE,KAA9B,CAAlC;AACA,QAAM,CAACC,QAAD,IAAaT,WAAW,CAACE,QAAD,CAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,WAAW,CAACc,OAAhB,EAAyB;AACvBL,MAAAA,aAAa,CAACT,WAAW,CAACc,OAAb,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBhB,WAAW,CAACc,OAA9B;AACD;AACF,GALQ,EAKN,CAACd,WAAD,CALM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,EAAE,GAAG,MAAM;AACf,UAAIT,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACU,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChCL,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACP,KAAnB;AACAD,UAAAA,WAAW,CAACD,QAAQ,CAACW,MAAT,CAAgBF,MAAM,CAACP,KAAvB,CAAD,CAAX;AACA,iBAAO,IAAP;AACD,SAJD;AAKD;AACF,KARD;;AASAK,IAAAA,EAAE;AACH,GAXQ,EAWN,CAACT,UAAD,CAXM,CAAT;AAaAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAJ,EAAc;AACZK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAA,MAAAA,QAAQ,CAACY,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAAhD;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBN,QAAjB;AACD;AACF,GANQ,EAMN,CAACA,QAAD,CANM,CAAT,CA9BqB,CAsCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMgB,WAAW,GAAG,MAAM;AACxBX,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAsB,MAAtB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuC,SAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEvC,MAAM,CAACwC,iBAAvB;AAAA,gBAA2CF,WAAW;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/DD;;GAAM3B,Q;UAEgBV,c,EACDK,W;;;KAHfK,Q;AAiEN,eAAeA,QAAf","sourcesContent":["import styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport Post from \"../Post/Post\";\n\nconst PostList = () => {\n  // let { loading, error, data } = useQuery(getCurrentUser);\n  const currentUser = useAppSelector((state) => state.currentUser.value);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [friendList, setFriendList] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n\n  const [posts, setPosts] = useState(\"\");\n\n  useEffect(() => {\n    if (currentUser.friends) {\n      setFriendList(currentUser.friends);\n      console.log(\"hi\", currentUser.friends);\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    const hi = () => {\n      if (friendList) {\n        friendList.map((friend, index) => {\n          console.log(friend.posts);\n          setPostList(postList.concat(friend.posts));\n          return null;\n        });\n      }\n    };\n    hi();\n  }, [friendList]);\n\n  useEffect(() => {\n    if (postList) {\n      console.log(postList);\n      postList.sort((a, b) => (a.time > b.time ? -1 : 1));\n      console.log(\"2\", postList);\n    }\n  }, [postList]);\n\n  // const renderPosts = () => {\n  //   return posts.map((post, index) => {\n  //     return (\n  //       <div key={index} className={styles.individualPost}>\n  //         <h3>{user.email}</h3> edit post/delete post here <button>Edit</button>{\" \"}\n  //         time/date here\n  //         <h2>{post.post}</h2>\n  //         <button>Like</button>\n  //         <hr />\n  //         comments//// <button>Comment</button>\n  //         <br />\n  //         post.comments here\n  //       </div>\n  //     );\n  //   });\n  // };\n  const renderPosts = () => {\n    console.log(postList, \"done\");\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postListContainer}>{renderPosts()}</div>\n    </div>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}