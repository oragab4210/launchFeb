{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = () => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const navShow = !dontShowUp.includes(pathname);\n  let {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector(state => state.currentUser);\n  const dispatch = useAppDispatch();\n  const socketRef = useRef();\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    refetch();\n\n    if (data) {\n      console.log(data.user2, \"NavBar\");\n      dispatch(setCurrentUser(data.user2));\n    }\n  }, [data]);\n  useEffect(() => {\n    if (navShow && currentUser.id) {\n      console.log(\"working\");\n      socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n      socketRef.current.emit(\"login\", {\n        userId: currentUser.id\n      });\n      socketRef.current.on(\"onlineUsers\", data => {\n        const onlineUsers = Object.entries(data);\n        const onlineIds = Array.from(onlineUsers, x => x[1]);\n        console.log(onlineIds);\n        dispatch(setOnlineUsers(onlineIds));\n      });\n    }\n  }, [currentUser, data, navShow]);\n  /* -------------------------------------------------------------------------- */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container0,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileDropdownInitiator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container69,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestDropDown, {\n        socketRef: socketRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"72DVBQF6tRw8HiyszsFw4cjOHgY=\", false, function () {\n  return [useLocation, useQuery, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","useRef","SideNav","useQuery","useMutation","setCurrentUser","setOnlineUsers","currentUserQuery","setSocket","useAppSelector","useAppDispatch","Link","useLocation","mutation","ProfileDropdownInitiator","TestDropDown","socketIOClient","SOCKET_SERVER_URL","NavBar","pathname","dontShowUp","navShow","includes","loading","error","data","refetch","currentUser","state","dispatch","socketRef","console","log","user2","id","current","emit","userId","on","onlineUsers","Object","entries","onlineIds","Array","from","x","container0","container","container69"],"mappings":"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","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = () => {\n  const { pathname } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const navShow = !dontShowUp.includes(pathname);\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const dispatch = useAppDispatch();\n  const socketRef = useRef();\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    refetch();\n    if (data) {\n      console.log(data.user2, \"NavBar\");\n      dispatch(setCurrentUser(data.user2));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (navShow && currentUser.id) {\n      console.log(\"working\");\n      socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n      socketRef.current.emit(\"login\", { userId: currentUser.id });\n      socketRef.current.on(\"onlineUsers\", (data) => {\n        const onlineUsers = Object.entries(data);\n        const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n        console.log(onlineIds);\n        dispatch(setOnlineUsers(onlineIds));\n      });\n    }\n  }, [currentUser, data, navShow]);\n\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container}>\n        <SideNav />\n        <ProfileDropdownInitiator />\n      </div>\n      <div className={styles.container69}>\n        <SideNav />\n        <TestDropDown socketRef={socketRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}