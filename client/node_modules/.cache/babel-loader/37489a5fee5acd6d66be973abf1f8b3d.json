{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport SideNav from \"../SideNav/SideNav\";\nimport logo from \"./logo.png\";\nimport profile from \"./profile.png\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(query);\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  const dispatch = useAppDispatch(false);\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true);\n      } else {\n        setIsUser(false);\n      }\n    };\n\n    fetchAccounts();\n  }, [loading, currentUser, data]);\n  /* -------------------------------------------------------------------------- */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileDropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"qKipRoeicGYZ9MJXYyHNANV64Iw=\", false, function () {\n  return [useQuery, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","Link","useLocation","SideNav","logo","profile","useQuery","useMutation","setCurrentUser","query","useAppSelector","useAppDispatch","ProfileDropdown","NavBar","loading","error","data","isUser","setIsUser","currentUser","state","value","dispatch","fetchAccounts","user2","container"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,sBAA/C;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACG,KAAD,CAAvC;AAEA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,EAApC;AACA,QAAMoB,WAAW,GAAGT,cAAc,CAAEU,KAAD,IAAWA,KAAK,CAACD,WAAN,CAAkBE,KAA9B,CAAlC;AACA,QAAMC,QAAQ,GAAGX,cAAc,CAAC,KAAD,CAA/B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,aAAa,GAAG,YAAY;AAChC,UAAIP,IAAJ,EAAU;AACRM,QAAAA,QAAQ,CAACd,cAAc,CAACQ,IAAI,CAACQ,KAAN,CAAf,CAAR;AACAN,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAHD,MAGO;AACLA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,KAPD;;AAQAK,IAAAA,aAAa;AACd,GAVQ,EAUN,CAACT,OAAD,EAAUK,WAAV,EAAuBH,IAAvB,CAVM,CAAT;AAYA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAAC4B,SAAvB;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;GAAMZ,M;UAC2BP,Q,EAGXI,c,EACHC,c;;;KALbE,M;AA6BN,eAAeA,MAAf","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport SideNav from \"../SideNav/SideNav\";\nimport logo from \"./logo.png\";\nimport profile from \"./profile.png\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\n\nconst NavBar = () => {\n  let { loading, error, data } = useQuery(query);\n\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector((state) => state.currentUser.value);\n  const dispatch = useAppDispatch(false);\n\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true);\n      } else {\n        setIsUser(false);\n      }\n    };\n    fetchAccounts();\n  }, [loading, currentUser, data]);\n\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className={styles.container}>\n      <SideNav />\n      <ProfileDropdown />\n    </div>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}