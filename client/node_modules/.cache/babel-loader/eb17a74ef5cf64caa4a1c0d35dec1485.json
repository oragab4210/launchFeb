{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport deleteCommentMutation from \"../../../../GQL/mutations/deleteComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeletePost = _ref => {\n  _s();\n\n  let {\n    postId,\n    postContent\n  } = _ref;\n  const [editComment] = useMutation(editCommentMutation);\n  const [deleteComment] = useMutation(deleteCommentMutation);\n  const [editPost] = useMutation(editPostMutation); // const { refetch } = useQuery(currentUserQuery);\n\n  const currentUser = useAppSelector(state => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n  useEffect(() => {// console.log(comment);\n  }); // const editCommentOnClick = () => {\n  //   editComment({\n  //     variables: {\n  //       id: comment.id,\n  //       comment: commentText,\n  //     },\n  //     refetchQueries: [{ query: currentUserQuery }],\n  //     awaitRefetchQueries: true,\n  //   })\n  //     .then([setShowModal(false)])\n  //     .catch((err) => {\n  //       const errors = err.graphQLErrors?.map((error) => error.message);\n  //       console.log(errors);\n  //     });\n  // };\n  // const deleteCommentOnClick = (e) => {\n  //   console.log(\"start\");\n  //   /* ----------------------------- delete comment ----------------------------- */\n  //   deleteComment({\n  //     variables: {\n  //       id: comment.id,\n  //     },\n  //     refetchQueries: [{ query: currentUserQuery }],\n  //     awaitRefetchQueries: true,\n  //   })\n  //     /* -----------------------------Delete Comment from Post--------------------------------------------- */\n  //     .then((res) =>\n  //       editPost({\n  //         variables: {\n  //           id: comment.postId,\n  //           deleteComment: comment.id,\n  //         },\n  //         refetchQueries: [{ query: currentUserQuery }],\n  //         awaitRefetchQueries: true,\n  //       })\n  //         .then(setShowModal(false))\n  //         .catch((err) => {\n  //           const errors = err.graphQLErrors?.map((error) => error.message);\n  //           console.log(errors);\n  //         })\n  //     )\n  //     .catch((err) => {\n  //       const errors = err.graphQLErrors?.map((error) => error.message);\n  //       console.log(errors);\n  //     });\n  // };\n\n  if (!showModal) return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setShowModal(true),\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container // ref={modal}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createPostContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.x_svg,\n            src: X_SVG,\n            alt: \"exit\",\n            onClick: () => setShowModal(!showModal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            // onChange={(e) => setPostText(e.target.value)}\n            className: styles.input,\n            value: postText,\n            onChange: e => setPostText(e.target.value),\n            placeholder: `What's on your mind, ${currentUser.name}?` // maxlength=\"1\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postBtnContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.editBtn} ${styles.btn}` // onClick={() => editCommentOnClick()}\n            ,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.deleteBtn} ${styles.btn}` // onClick={(e) => deleteCommentOnClick()}\n            ,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeletePost, \"kbVHsmdW/QwDcEqLnB66QXkjl18=\", false, function () {\n  return [useMutation, useMutation, useMutation, useAppSelector];\n});\n\n_c = EditDeletePost;\nexport default EditDeletePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeletePost\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js"],"names":["styles","React","useState","useEffect","useRef","Modal","useAppSelector","useAppDispatch","useMutation","useQuery","editCommentMutation","deleteCommentMutation","currentUserQuery","editPostMutation","EditDeletePost","postId","postContent","editComment","deleteComment","editPost","currentUser","state","showModal","setShowModal","postText","setPostText","container","createPostContainer","titleContainer","x_svg","X_SVG","contentContainer","inputContainer","input","e","target","value","name","postBtnContainer","editBtn","btn","deleteBtn"],"mappings":"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","sourcesContent":["import styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport deleteCommentMutation from \"../../../../GQL/mutations/deleteComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\n\nconst EditDeletePost = ({ postId, postContent }) => {\n  const [editComment] = useMutation(editCommentMutation);\n  const [deleteComment] = useMutation(deleteCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  // const { refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n  useEffect(() => {\n    // console.log(comment);\n  });\n\n  // const editCommentOnClick = () => {\n  //   editComment({\n  //     variables: {\n  //       id: comment.id,\n  //       comment: commentText,\n  //     },\n  //     refetchQueries: [{ query: currentUserQuery }],\n  //     awaitRefetchQueries: true,\n  //   })\n  //     .then([setShowModal(false)])\n  //     .catch((err) => {\n  //       const errors = err.graphQLErrors?.map((error) => error.message);\n  //       console.log(errors);\n  //     });\n  // };\n  // const deleteCommentOnClick = (e) => {\n  //   console.log(\"start\");\n  //   /* ----------------------------- delete comment ----------------------------- */\n  //   deleteComment({\n  //     variables: {\n  //       id: comment.id,\n  //     },\n  //     refetchQueries: [{ query: currentUserQuery }],\n  //     awaitRefetchQueries: true,\n  //   })\n  //     /* -----------------------------Delete Comment from Post--------------------------------------------- */\n  //     .then((res) =>\n  //       editPost({\n  //         variables: {\n  //           id: comment.postId,\n  //           deleteComment: comment.id,\n  //         },\n  //         refetchQueries: [{ query: currentUserQuery }],\n  //         awaitRefetchQueries: true,\n  //       })\n  //         .then(setShowModal(false))\n  //         .catch((err) => {\n  //           const errors = err.graphQLErrors?.map((error) => error.message);\n  //           console.log(errors);\n  //         })\n  //     )\n  //     .catch((err) => {\n  //       const errors = err.graphQLErrors?.map((error) => error.message);\n  //       console.log(errors);\n  //     });\n  // };\n\n  if (!showModal) return <div onClick={() => setShowModal(true)}>...</div>;\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Edit Comment</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n        </div>\n\n        <div className={styles.contentContainer}>\n          <div className={styles.inputContainer}>\n            <textarea\n              // onChange={(e) => setPostText(e.target.value)}\n              className={styles.input}\n              value={postText}\n              onChange={(e) => setPostText(e.target.value)}\n              placeholder={`What's on your mind, ${currentUser.name}?`}\n              // maxlength=\"1\"\n            ></textarea>\n          </div>\n          <div className={styles.postBtnContainer}>\n            <button\n              className={`${styles.editBtn} ${styles.btn}`}\n              // onClick={() => editCommentOnClick()}\n            >\n              Edit\n            </button>\n            <button\n              className={`${styles.deleteBtn} ${styles.btn}`}\n              // onClick={(e) => deleteCommentOnClick()}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditDeletePost;\n"]},"metadata":{},"sourceType":"module"}