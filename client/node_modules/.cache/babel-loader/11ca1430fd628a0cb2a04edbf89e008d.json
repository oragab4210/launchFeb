{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = _ref => {\n  _s();\n\n  let {} = _ref;\n  const {\n    pathname\n  } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const includedPath = !dontShowUp.includes(pathname);\n  console.log(pathname);\n  let {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector(state => state.currentUser);\n  const dispatch = useAppDispatch(false);\n  const [open, setOpen] = useState(false);\n  const [close, setClose] = useState(false);\n  const [onDropDown, setOnDropDown] = useState(false);\n  const [ableToSetUserOnline, setAbleToSetUserOnline] = useState(false);\n  const [socketIdForLogoutset, setSocketIdForLogout] = useState(null);\n  const [socketActive, setSocketActive] = useState(false);\n  const socketRef = useRef();\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    console.log(socketRef);\n\n    if (data) {\n      console.log(\"DATAAAA\", data.user2);\n    }\n\n    if (data) {\n      if (socketRef !== undefined && !data.user2) {\n        socketRef.current.disconnect();\n        console.log(\"BOOM\");\n        socketRef.current = null;\n        console.log(\"socket ref\", socketRef);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    if (data) {\n      if (data.user2 !== null) {\n        console.log(\"brooo\");\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n        setSocketActive(true);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    refetch();\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL); // socketRef.current.emit(\"refetchOnlineUsers\", {});\n    // socketRef.current.on(\"onlineUsers\", (data) => {\n    //   const onlineUsers = Object.entries(data);\n    //   const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n    //   dispatch(setOnlineUsers(onlineIds));\n    // });\n    // if (data) {\n    //   // socketRef.current.emit(\"login\", { userId: data.user2.id });\n    // } else {\n    //   socketRef.current.disconnect();\n    // }\n\n    if (data) {\n      if (data.user2) {\n        dispatch(setCurrentUser(data.user2));\n      }\n    }\n\n    if (data && data.user2 && socketActive) {\n      // socketRef.current.emit(\"login\", { userId: data.user2.id });\n      // console.log(data.user2.id, \"NavBar\");\n      // dispatch(setCurrentUser(data.user2));\n      setAbleToSetUserOnline(true);\n      setOpen(!open);\n      console.log(\"done\");\n    }\n  }, [data, socketActive]);\n  useEffect(() => {\n    if (ableToSetUserOnline && data.user2) {\n      // socketRef.current.emit(\"refetchOnlineUsers\", {});\n      // dispatch(setSocket(socketRef));\n      // console.log(\"USER ID FRONT END\", data.user2.id);\n      socketRef.current.emit(\"login\", {\n        userId: data.user2.id\n      });\n      socketRef.current.on(\"onlineUsers\", data => {\n        console.log(\"socket if font end\", socketRef.current.id);\n        setSocketIdForLogout(socketRef.current.id);\n        console.log(\"hehehe\", data);\n        const onlineUsers = Object.entries(data);\n        const onlineIds = Array.from(onlineUsers, x => x[1]);\n        console.log(onlineIds);\n        dispatch(setOnlineUsers(onlineIds));\n      });\n      return () => {// socketRef.current.disconnect();\n      };\n    }\n  }, [ableToSetUserOnline && data.user2, pathname]); // useEffect(() => {\n  //   if (currentUser.id !== null) {\n  //     // console.log(data.user2.id);\n  //     socketRef.current.emit(\"login\", { userId: currentUser.id });\n  //     socketRef.current.on(\"onlineUsers\", (data) => {\n  //       console.log(\"hehehe\", data);\n  //     });\n  //   }\n  // }, []);\n\n  /* -------------------------------------------------------------------------- */\n  // if (includedPath) {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container0,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileDropdownInitiator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container69,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestDropDown, {\n        socketRef: socketRef,\n        socketIdFromNav: socketIdForLogoutset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this); // } else {\n  //   return null;\n  // }\n};\n\n_s(NavBar, \"SXQVPqNEMK6F6UHwwrD19CUGJoM=\", false, function () {\n  return [useLocation, useQuery, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","useRef","SideNav","useQuery","useMutation","setCurrentUser","setOnlineUsers","currentUserQuery","setSocket","useAppSelector","useAppDispatch","Link","useLocation","mutation","ProfileDropdownInitiator","TestDropDown","socketIOClient","SOCKET_SERVER_URL","NavBar","pathname","dontShowUp","includedPath","includes","console","log","loading","error","data","refetch","currentUser","state","dispatch","open","setOpen","close","setClose","onDropDown","setOnDropDown","ableToSetUserOnline","setAbleToSetUserOnline","socketIdForLogoutset","setSocketIdForLogout","socketActive","setSocketActive","socketRef","user2","undefined","current","disconnect","emit","userId","id","on","onlineUsers","Object","entries","onlineIds","Array","from","x","container0","container","container69"],"mappings":"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","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = ({}) => {\n  const { pathname } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const includedPath = !dontShowUp.includes(pathname);\n  console.log(pathname);\n\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n\n  const currentUser = useAppSelector((state) => state.currentUser);\n\n  const dispatch = useAppDispatch(false);\n  const [open, setOpen] = useState(false);\n  const [close, setClose] = useState(false);\n  const [onDropDown, setOnDropDown] = useState(false);\n  const [ableToSetUserOnline, setAbleToSetUserOnline] = useState(false);\n  const [socketIdForLogoutset, setSocketIdForLogout] = useState(null);\n  const [socketActive, setSocketActive] = useState(false);\n  const socketRef = useRef();\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    console.log(socketRef);\n    if (data) {\n      console.log(\"DATAAAA\", data.user2);\n    }\n    if (data) {\n      if (socketRef !== undefined && !data.user2) {\n        socketRef.current.disconnect();\n        console.log(\"BOOM\");\n        socketRef.current = null;\n        console.log(\"socket ref\", socketRef);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    if (data) {\n      if (data.user2 !== null) {\n        console.log(\"brooo\");\n\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n        setSocketActive(true);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    refetch();\n\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n    // socketRef.current.emit(\"refetchOnlineUsers\", {});\n    // socketRef.current.on(\"onlineUsers\", (data) => {\n    //   const onlineUsers = Object.entries(data);\n    //   const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n    //   dispatch(setOnlineUsers(onlineIds));\n    // });\n    // if (data) {\n    //   // socketRef.current.emit(\"login\", { userId: data.user2.id });\n    // } else {\n    //   socketRef.current.disconnect();\n    // }\n    if (data) {\n      if (data.user2) {\n        dispatch(setCurrentUser(data.user2));\n      }\n    }\n\n    if (data && data.user2 && socketActive) {\n      // socketRef.current.emit(\"login\", { userId: data.user2.id });\n      // console.log(data.user2.id, \"NavBar\");\n      // dispatch(setCurrentUser(data.user2));\n      setAbleToSetUserOnline(true);\n\n      setOpen(!open);\n      console.log(\"done\");\n    }\n  }, [data, socketActive]);\n\n  useEffect(() => {\n    if (ableToSetUserOnline && data.user2) {\n      // socketRef.current.emit(\"refetchOnlineUsers\", {});\n\n      // dispatch(setSocket(socketRef));\n      // console.log(\"USER ID FRONT END\", data.user2.id);\n      socketRef.current.emit(\"login\", { userId: data.user2.id });\n\n      socketRef.current.on(\"onlineUsers\", (data) => {\n        console.log(\"socket if font end\", socketRef.current.id);\n        setSocketIdForLogout(socketRef.current.id);\n        console.log(\"hehehe\", data);\n        const onlineUsers = Object.entries(data);\n        const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n        console.log(onlineIds);\n        dispatch(setOnlineUsers(onlineIds));\n      });\n      return () => {\n        // socketRef.current.disconnect();\n      };\n    }\n  }, [ableToSetUserOnline && data.user2, pathname]);\n\n  // useEffect(() => {\n  //   if (currentUser.id !== null) {\n  //     // console.log(data.user2.id);\n  //     socketRef.current.emit(\"login\", { userId: currentUser.id });\n\n  //     socketRef.current.on(\"onlineUsers\", (data) => {\n  //       console.log(\"hehehe\", data);\n  //     });\n  //   }\n  // }, []);\n\n  /* -------------------------------------------------------------------------- */\n\n  // if (includedPath) {\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container}>\n        <SideNav />\n        <ProfileDropdownInitiator />\n      </div>\n      <div className={styles.container69}>\n        <SideNav />\n        <TestDropDown\n          socketRef={socketRef}\n          socketIdFromNav={socketIdForLogoutset}\n        />\n      </div>\n    </div>\n  );\n  // } else {\n  //   return null;\n  // }\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}