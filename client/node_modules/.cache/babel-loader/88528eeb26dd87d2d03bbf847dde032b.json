{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = _ref => {\n  _s();\n\n  let {\n    currentFriend\n  } = _ref;\n  const messageRef = useRef();\n  const {\n    messageList,\n    addMessage,\n    setConvoId\n  } = useMessages();\n  const {\n    messages,\n    sendMessage\n  } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector(state => state.currentRoom.value);\n  useEffect(() => messageRef.current.scrollIntoView({\n    behavior: \"smooth\"\n  }));\n\n  const renderMessages = () => {\n    return messages.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`,\n        children: msg.body\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    } // addMessage()\n\n\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.friendNameContainer,\n      children: currentFriend ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Chatting With: \", currentFriend]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageContainer,\n      children: room === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.noRoomMessageContainer,\n        children: [\"Please Select a \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), \" Room To Join\", /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageList,\n          children: [console.log(finalMessageList), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBtnContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Start Chatting\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBox, \"RFOIQN8FVG8jEMVXlvnwEc5s7IY=\", false, function () {\n  return [useMessages, useChatRoom, useAppSelector];\n});\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js"],"names":["styles","React","useState","useEffect","useRef","useMutation","useQuery","useLazyQuery","useChatRoom","useMessages","useAppSelector","useAppDispatch","ChatBox","currentFriend","messageRef","messageList","addMessage","setConvoId","messages","sendMessage","newMessage","setNewMessage","finalMessageList","setFinalMessageList","room","state","currentRoom","value","current","scrollIntoView","behavior","renderMessages","map","msg","index","isOwner","blue","red","body","onSubmit","e","preventDefault","container","friendNameContainer","messageContainer","noRoomMessageContainer","console","log","inputBtnContainer","target"],"mappings":"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","sourcesContent":["import styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst ChatBox = ({ currentFriend }) => {\n  const messageRef = useRef();\n  const { messageList, addMessage, setConvoId } = useMessages();\n  const { messages, sendMessage } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n  const renderMessages = () => {\n    return messages.map((msg, index) => {\n      return (\n        <p\n          key={index}\n          className={`${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`}\n        >\n          {msg.body}\n        </p>\n      );\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    }\n    // addMessage()\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.friendNameContainer}>\n        {currentFriend ? <h1>Chatting With: {currentFriend}</h1> : null}\n      </h2>\n      <div className={styles.messageContainer}>\n        {room === \"\" ? (\n          <div className={styles.noRoomMessageContainer}>\n            Please Select a <br /> Room To Join\n            <div ref={messageRef}>{/* message ref */}</div>\n          </div>\n        ) : (\n          <div>\n            <div className={styles.messageList}>\n              {/* messages here */}\n              {console.log(finalMessageList)}\n              {renderMessages()}\n              <div ref={messageRef}>{/* message ref */}</div>\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------------------------- */}\n      </div>\n      <div className={styles.inputBtnContainer}>\n        <form action=\"\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            placeholder=\"Start Chatting\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}