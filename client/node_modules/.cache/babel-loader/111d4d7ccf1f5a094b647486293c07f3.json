{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport deletePostMutation from \"../../../../GQL/mutations/deletePost\";\nimport editUserMutation from \"../../../../GQL/mutations/editUser\";\nimport LoadingSpinner from \"../../../LoadingSpinner/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeletePost = _ref => {\n  _s();\n\n  let {\n    postId,\n    postContent\n  } = _ref;\n  const [editPost] = useMutation(editPostMutation);\n  const [deletePost] = useMutation(deletePostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const {\n    refetch\n  } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector(state => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setPostText(postContent);\n  }, [postContent]);\n\n  const editPostOnClick = () => {\n    setLoading(true);\n    editPost({\n      variables: {\n        id: postId,\n        post: postText\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(refetch()).then([setLoading(false)]).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    });\n  };\n\n  const deletePostOnClick = e => {\n    setLoading(true);\n    console.log(\"start\");\n    /* ----------------------------- delete Post ----------------------------- */\n\n    deletePost({\n      variables: {\n        id: postId\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    })\n    /* -----------------------------Delete post from User--------------------------------------------- */\n    .then(res => editUser({\n      variables: {\n        id: currentUser.id,\n        deletePost: postId\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then([setShowModal(false), setLoading(false)]).catch(err => {\n      var _err$graphQLErrors2;\n\n      const errors = (_err$graphQLErrors2 = err.graphQLErrors) === null || _err$graphQLErrors2 === void 0 ? void 0 : _err$graphQLErrors2.map(error => error.message);\n      console.log(errors);\n    })).catch(err => {\n      var _err$graphQLErrors3;\n\n      const errors = (_err$graphQLErrors3 = err.graphQLErrors) === null || _err$graphQLErrors3 === void 0 ? void 0 : _err$graphQLErrors3.map(error => error.message);\n      console.log(errors);\n    });\n  };\n\n  if (!showModal) return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setShowModal(true),\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container // ref={modal}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createPostContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.x_svg,\n            src: X_SVG,\n            alt: \"exit\",\n            onClick: () => setShowModal(!showModal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentContainer,\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.LoadingSpinner,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles.input,\n            value: postText,\n            onChange: e => setPostText(e.target.value),\n            placeholder: `What's on your mind, ${currentUser.name}?` // maxlength=\"1\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postBtnContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.editBtn} ${styles.btn}`,\n            onClick: () => editPostOnClick(),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.deleteBtn} ${styles.btn}`,\n            onClick: e => deletePostOnClick(),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeletePost, \"pzFgezJmdl6Qj1nN/IdlvJfvI74=\", false, function () {\n  return [useMutation, useMutation, useMutation, useQuery, useAppSelector];\n});\n\n_c = EditDeletePost;\nexport default EditDeletePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeletePost\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js"],"names":["styles","React","useState","useEffect","useRef","Modal","useAppSelector","useAppDispatch","useMutation","useQuery","currentUserQuery","editPostMutation","deletePostMutation","editUserMutation","LoadingSpinner","EditDeletePost","postId","postContent","editPost","deletePost","editUser","refetch","currentUser","state","showModal","setShowModal","postText","setPostText","loading","setLoading","editPostOnClick","variables","id","post","refetchQueries","query","awaitRefetchQueries","then","catch","err","errors","graphQLErrors","map","error","message","console","log","deletePostOnClick","e","res","container","createPostContainer","titleContainer","x_svg","X_SVG","contentContainer","inputContainer","input","target","value","name","postBtnContainer","editBtn","btn","deleteBtn"],"mappings":"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","sourcesContent":["import styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport deletePostMutation from \"../../../../GQL/mutations/deletePost\";\nimport editUserMutation from \"../../../../GQL/mutations/editUser\";\nimport LoadingSpinner from \"../../../LoadingSpinner/LoadingSpinner\";\n\nconst EditDeletePost = ({ postId, postContent }) => {\n  const [editPost] = useMutation(editPostMutation);\n  const [deletePost] = useMutation(deletePostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const { refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setPostText(postContent);\n  }, [postContent]);\n\n  const editPostOnClick = () => {\n    setLoading(true);\n    editPost({\n      variables: {\n        id: postId,\n        post: postText,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then(refetch())\n      .then([setLoading(false)])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n  const deletePostOnClick = (e) => {\n    setLoading(true);\n    console.log(\"start\");\n    /* ----------------------------- delete Post ----------------------------- */\n    deletePost({\n      variables: {\n        id: postId,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      /* -----------------------------Delete post from User--------------------------------------------- */\n      .then((res) =>\n        editUser({\n          variables: {\n            id: currentUser.id,\n            deletePost: postId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then([setShowModal(false), setLoading(false)])\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      )\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n\n  if (!showModal) return <div onClick={() => setShowModal(true)}>...</div>;\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Edit Post</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n        </div>\n\n        <div className={styles.contentContainer}>\n          {loading ? (\n            <div className={styles.LoadingSpinner}>\n              <LoadingSpinner />\n            </div>\n          ) : null}\n          <div className={styles.inputContainer}>\n            <textarea\n              className={styles.input}\n              value={postText}\n              onChange={(e) => setPostText(e.target.value)}\n              placeholder={`What's on your mind, ${currentUser.name}?`}\n              // maxlength=\"1\"\n            ></textarea>\n          </div>\n          <div className={styles.postBtnContainer}>\n            <button\n              className={`${styles.editBtn} ${styles.btn}`}\n              onClick={() => editPostOnClick()}\n            >\n              Edit\n            </button>\n            <button\n              className={`${styles.deleteBtn} ${styles.btn}`}\n              onClick={(e) => deletePostOnClick()}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditDeletePost;\n"]},"metadata":{},"sourceType":"module"}