{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(currentUserQuery);\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector(state => state.currentUser);\n  const dispatch = useAppDispatch(false);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    const fetchAccounts = () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true); // console.log(currentUser);\n      } else {\n        console.log(\"bro\");\n        setIsUser(false); //?????\n      }\n    };\n\n    fetchAccounts();\n  }, [data, currentUser]);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {// console.log(currentUser);\n  }, [setIsUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileDropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"RWHOpr8DBvXnRM4hdtGxQ+jZvas=\", false, function () {\n  return [useQuery, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","SideNav","useQuery","useMutation","setCurrentUser","currentUserQuery","useAppSelector","useAppDispatch","ProfileDropdown","NavBar","loading","error","data","isUser","setIsUser","currentUser","state","dispatch","fetchAccounts","user2","console","log","container"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,sBAA/C;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACG,gBAAD,CAAvC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBf,QAAQ,EAApC;AACA,QAAMgB,WAAW,GAAGT,cAAc,CAAEU,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAAlC;AACA,QAAME,QAAQ,GAAGV,cAAc,CAAC,KAAD,CAA/B;AAEA;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,aAAa,GAAG,MAAM;AAC1B,UAAIN,IAAJ,EAAU;AACRK,QAAAA,QAAQ,CAACb,cAAc,CAACQ,IAAI,CAACO,KAAN,CAAf,CAAR;AACAL,QAAAA,SAAS,CAAC,IAAD,CAAT,CAFQ,CAGR;AACD,OAJD,MAIO;AACLM,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAP,QAAAA,SAAS,CAAC,KAAD,CAAT,CAFK,CAEa;AACnB;AACF,KATD;;AAUAI,IAAAA,aAAa;AACd,GAZQ,EAYN,CAACN,IAAD,EAAOG,WAAP,CAZM,CAAT;AAcA;;AACAf,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,CAACc,SAAD,CAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAEjB,MAAM,CAACyB,SAAvB;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA/BD;;GAAMb,M;UAC2BP,Q,EAEXI,c,EACHC,c;;;KAJbE,M;AAiCN,eAAeA,MAAf","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\n \nconst NavBar = () => {\n  let { loading, error, data } = useQuery(currentUserQuery);\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const dispatch = useAppDispatch(false);\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    const fetchAccounts = () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true);\n        // console.log(currentUser);\n      } else {\n        console.log(\"bro\");\n        setIsUser(false); //?????\n      }\n    };\n    fetchAccounts();\n  }, [data, currentUser]);\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    // console.log(currentUser);\n  }, [setIsUser]);\n  return (\n    <div className={styles.container}>\n      <SideNav />\n      <ProfileDropdown />\n    </div>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}