{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = _ref => {\n  _s();\n\n  let {\n    currentFriend,\n    chooseRoomPage,\n    setChooseRoomPage\n  } = _ref;\n  const messageRef = useRef();\n  const {\n    messageList,\n    addMessage,\n    setConvoId\n  } = useMessages();\n  const {\n    messages,\n    sendMessage\n  } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector(state => state.currentRoom.value);\n  const [firsTimeInChat, setFirstTimeInChat] = useState(false);\n  const onlineUsers = useAppSelector(state => state.onlineUsers.value);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    if (chooseRoomPage === true) setFirstTimeInChat(false);\n    console.log(\"room\", chooseRoomPage);\n  }, [chooseRoomPage]);\n  useEffect(() => {\n    const scroll = async () => {\n      const delay = ms => new Promise(res => setTimeout(res, ms));\n\n      if (chooseRoomPage === false && firsTimeInChat === false) {\n        var _messageRef$current;\n\n        await delay(400);\n        (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.scrollIntoView({\n          behavior: \"auto\"\n        });\n        setFirstTimeInChat(true);\n      } else {\n        if (chooseRoomPage === false) {\n          var _messageRef$current2;\n\n          (_messageRef$current2 = messageRef.current) === null || _messageRef$current2 === void 0 ? void 0 : _messageRef$current2.scrollIntoView({\n            behavior: \"instant\"\n          });\n        }\n      }\n    };\n\n    scroll();\n  });\n  /* -------------------------------------------------------------------------- */\n\n  const renderMessages = () => {\n    // ref={messageRef}\n    const listLength = messages.length;\n    return messages.map((msg, index) => {\n      if (index === listLength - 1) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: messageRef,\n          className: `${msg.isOwner ? styles.blue : styles.red}\n              ${styles.msg}`,\n          children: msg.body\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`,\n        children: msg.body\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    } // addMessage()\n\n\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.friendNameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.backContainer,\n        onClick: () => setChooseRoomPage(!chooseRoomPage),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.backArrow,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Rooms \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u21A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), currentFriend !== null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Chatting With: \", currentFriend.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : null, onlineUsers.includes(currentFriend.id) && currentFriend ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.online\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.offline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageContainer,\n      children: room === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.noRoomMessageContainer,\n        children: [\"Please Select a \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), \" Room To Join\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageList,\n          children: renderMessages()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBtnContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Start Chatting\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBox, \"OlZxI4VfJ6REywBaw6rnVgo/eOg=\", false, function () {\n  return [useMessages, useChatRoom, useAppSelector, useAppSelector];\n});\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js"],"names":["styles","React","useState","useEffect","useRef","useMutation","useQuery","useLazyQuery","useChatRoom","useMessages","useAppSelector","useAppDispatch","ChatBox","currentFriend","chooseRoomPage","setChooseRoomPage","messageRef","messageList","addMessage","setConvoId","messages","sendMessage","newMessage","setNewMessage","finalMessageList","setFinalMessageList","room","state","currentRoom","value","firsTimeInChat","setFirstTimeInChat","onlineUsers","console","log","scroll","delay","ms","Promise","res","setTimeout","current","scrollIntoView","behavior","renderMessages","listLength","length","map","msg","index","isOwner","blue","red","body","onSubmit","e","preventDefault","container","friendNameContainer","backContainer","backArrow","email","includes","id","online","offline","messageContainer","noRoomMessageContainer","inputBtnContainer","target"],"mappings":"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","sourcesContent":["import styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst ChatBox = ({ currentFriend, chooseRoomPage, setChooseRoomPage }) => {\n  const messageRef = useRef();\n  const { messageList, addMessage, setConvoId } = useMessages();\n  const { messages, sendMessage } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector((state) => state.currentRoom.value);\n  const [firsTimeInChat, setFirstTimeInChat] = useState(false);\n  const onlineUsers = useAppSelector((state) => state.onlineUsers.value);\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (chooseRoomPage === true) setFirstTimeInChat(false);\n    console.log(\"room\", chooseRoomPage);\n  }, [chooseRoomPage]);\n\n  useEffect(() => {\n    const scroll = async () => {\n      const delay = (ms) => new Promise((res) => setTimeout(res, ms));\n      if (chooseRoomPage === false && firsTimeInChat === false) {\n        await delay(400);\n        messageRef.current?.scrollIntoView({ behavior: \"auto\" });\n        setFirstTimeInChat(true);\n      } else {\n        if (chooseRoomPage === false) {\n          messageRef.current?.scrollIntoView({ behavior: \"instant\" });\n        }\n      }\n    };\n    scroll();\n  });\n  /* -------------------------------------------------------------------------- */\n  const renderMessages = () => {\n    // ref={messageRef}\n    const listLength = messages.length;\n    return messages.map((msg, index) => {\n      if (index === listLength - 1) {\n        return (\n          <p\n            key={index}\n            ref={messageRef}\n            className={`${msg.isOwner ? styles.blue : styles.red}\n              ${styles.msg}`}\n          >\n            {msg.body}\n          </p>\n        );\n      }\n      return (\n        <p\n          key={index}\n          className={`${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`}\n        >\n          {msg.body}\n        </p>\n      );\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    }\n    // addMessage()\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <div className={styles.friendNameContainer}>\n        <div\n          className={styles.backContainer}\n          onClick={() => setChooseRoomPage(!chooseRoomPage)}\n        >\n          <span className={styles.backArrow}>\n            <p> Rooms </p> <span>&#x21A9;</span>\n          </span>\n        </div>\n\n        {currentFriend !== null ? (\n          <h1>Chatting With: {currentFriend.email}</h1>\n        ) : null}\n\n        {onlineUsers.includes(currentFriend.id) && currentFriend ? (\n          <div className={styles.online}></div>\n        ) : (\n          <div className={styles.offline}></div>\n        )}\n      </div>\n      <div className={styles.messageContainer}>\n        {room === \"\" ? (\n          <div className={styles.noRoomMessageContainer}>\n            Please Select a <br /> Room To Join\n          </div>\n        ) : (\n          <div>\n            <div className={styles.messageList}>\n              {/* messages here */}\n              {renderMessages()}\n              {/* <div ref={messageRef}>{}</div> */}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------------------------- */}\n      </div>\n      <div className={styles.inputBtnContainer}>\n        <form action=\"\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            placeholder=\"Start Chatting\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}