{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakeComment/MakeComment.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./MakeComment.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editUserMutation from \"../../../../GQL/mutations/EditUser\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport addCommentMutation from \"../../../../GQL/mutations/addComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakeComment = _ref => {\n  _s();\n\n  let {\n    commentOpen,\n    setCommentOpen,\n    postId\n  } = _ref;\n  const [commentText, setCommentText] = useState(\"\"); // const [editUser] = useMutation(editUserMutation);\n\n  const [addComment] = useMutation(addCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  const currentUser = useAppSelector(state => state.currentUser);\n  useEffect(() => {\n    if (currentUser.friends) {// console.log(postId);\n      // console.log(\"current User\", currentUser.friends);\n    }\n  }, [currentUser]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    commentText.length > 0 ? addComment({\n      variables: {\n        postId: postId,\n        userId: currentUser.id,\n        comment: commentText\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(res => editPost({\n      variables: {\n        id: postId,\n        addComment: res.data.addComment.id\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    }).then([setCommentOpen(!commentOpen), setCommentText(\"\")])).catch(err => {\n      var _err$graphQLErrors2;\n\n      const errors = (_err$graphQLErrors2 = err.graphQLErrors) === null || _err$graphQLErrors2 === void 0 ? void 0 : _err$graphQLErrors2.map(error => error.message);\n      console.log(errors);\n    }) : console.log(\"need to have post greater than zero length\");\n  };\n\n  if (commentOpen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: styles.formContainer,\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.profilePicContainer,\n          children: currentUser.profilePic ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentUser.profilePic,\n            alt: \"\",\n            className: styles.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\",\n            alt: \"\",\n            className: styles.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => setCommentText(e.target.value),\n          className: styles.input,\n          placeholder: \"What's on your mind, Omar?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btn,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(MakeComment, \"7quMrc8hbt4BfFjVIm7ovvC3cjY=\", false, function () {\n  return [useMutation, useMutation, useAppSelector];\n});\n\n_c = MakeComment;\nexport default MakeComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeComment\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakeComment/MakeComment.js"],"names":["styles","React","useState","useEffect","useAppSelector","useAppDispatch","useMutation","useQuery","editUserMutation","editCommentMutation","editPostMutation","addCommentMutation","currentUserQuery","MakeComment","commentOpen","setCommentOpen","postId","commentText","setCommentText","addComment","editPost","currentUser","state","friends","onSubmit","e","preventDefault","length","variables","userId","id","comment","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","console","log","container","formContainer","profilePicContainer","profilePic","target","value","input","btn"],"mappings":"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","sourcesContent":["import styles from \"./MakeComment.module.css\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editUserMutation from \"../../../../GQL/mutations/EditUser\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport addCommentMutation from \"../../../../GQL/mutations/addComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\n\nconst MakeComment = ({ commentOpen, setCommentOpen, postId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  // const [editUser] = useMutation(editUserMutation);\n  const [addComment] = useMutation(addCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    if (currentUser.friends) {\n      // console.log(postId);\n      // console.log(\"current User\", currentUser.friends);\n    }\n  }, [currentUser]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    commentText.length > 0\n      ? addComment({\n          variables: {\n            postId: postId,\n            userId: currentUser.id,\n            comment: commentText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editPost({\n              variables: {\n                id: postId,\n                addComment: res.data.addComment.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n              .then([setCommentOpen(!commentOpen), setCommentText(\"\")])\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  if (commentOpen) {\n    return (\n      <div className={styles.container}>\n        <form action=\"\" className={styles.formContainer} onSubmit={onSubmit}>\n          <div className={styles.profilePicContainer}>\n            {currentUser.profilePic ? (\n              <img\n                src={currentUser.profilePic}\n                alt=\"\"\n                className={styles.profilePic}\n              />\n            ) : (\n              <img\n                src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                alt=\"\"\n                className={styles.profilePic}\n              />\n            )}\n          </div>\n          <textarea\n            onChange={(e) => setCommentText(e.target.value)}\n            className={styles.input}\n            placeholder=\"What's on your mind, Omar?\"\n          ></textarea>\n          <button className={styles.btn}>Submit</button>\n        </form>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default MakeComment;\n"]},"metadata":{},"sourceType":"module"}