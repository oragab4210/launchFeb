{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/PostList/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Post from \"../Post/Post\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport FadeIn from \"react-fade-in\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector(state => state.currentUser);\n  const [friendList, setFriendList] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n  const [postListDone, setPostListDone] = useState([]);\n  const [listPagination, setListPagination] = useState(10);\n  useEffect(() => {\n    refetch();\n\n    if (currentUser.friends) {\n      setFriendList(currentUser.friends);\n    }\n  }, [currentUser]);\n  /* ------------------------- creating list of posts ------------------------- */\n\n  useEffect(() => {\n    if (friendList) {\n      console.log(\"UMMMMM\", currentUser.posts);\n      const newList = friendList.map((friend, index) => {\n        return friend.posts;\n      });\n      const finishedFriendList = newList.flat();\n      const completeListOfMyPostsAndFriendPosts = currentUser.posts.concat(finishedFriendList);\n      console.log(completeListOfMyPostsAndFriendPosts, \"FINALLY??\");\n      setPostList(completeListOfMyPostsAndFriendPosts);\n    }\n  }, [friendList, currentUser]);\n  /* -------------------------- sorting list of posts ------------------------- */\n\n  useEffect(() => {\n    if (postList.length > 0) {\n      console.log(postList, \"FINALLY22222\");\n      setPostListDone(postList.sort((a, b) => a.time > b.time ? -1 : 1));\n    } else {\n      console.log(postList, \"FINALLY3333\");\n      setPostListDone([]);\n    }\n  }, [postList]);\n\n  const renderPosts = () => {\n    if (postListDone.length <= 0) return null;\n    const paginatedPostList = postListDone.slice(0, listPagination);\n    console.log(\"FUCK\", paginatedPostList);\n    return paginatedPostList.map((post, index) => {\n      // console.log(\"post\", post);\n      const unformattedDate = new Date(parseInt(post.time));\n      const date = unformattedDate.toString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          name: post.userId.name,\n          profilePic: post.userId.profilePic,\n          date: date,\n          postId: post.id,\n          postContent: post.post,\n          likeCount: post.likedBy.length,\n          likeList: post.likedBy,\n          commentCount: post.comments.length,\n          commentList: post.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postListContainer,\n      children: /*#__PURE__*/_jsxDEV(FadeIn, {\n        children: renderPosts()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), postListDone.length > listPagination ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadMoreContainer,\n      onClick: () => setListPagination(listPagination + 5),\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"UccUl2lgCl1YxHdgIoG2sxyQV4A=\", false, function () {\n  return [useQuery, useAppSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/PostList/PostList.js"],"names":["styles","useAppSelector","useAppDispatch","React","useState","useEffect","useMutation","useQuery","Post","currentUserQuery","FadeIn","PostList","loading","error","data","refetch","currentUser","state","friendList","setFriendList","postList","setPostList","postListDone","setPostListDone","listPagination","setListPagination","friends","console","log","posts","newList","map","friend","index","finishedFriendList","flat","completeListOfMyPostsAndFriendPosts","concat","length","sort","a","b","time","renderPosts","paginatedPostList","slice","post","unformattedDate","Date","parseInt","date","toString","userId","name","profilePic","id","likedBy","comments","container","postListContainer","loadMoreContainer"],"mappings":"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","sourcesContent":["import styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Post from \"../Post/Post\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport FadeIn from \"react-fade-in\";\n\nconst PostList = () => {\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [friendList, setFriendList] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n  const [postListDone, setPostListDone] = useState([]);\n  const [listPagination, setListPagination] = useState(10);\n\n  useEffect(() => {\n    refetch();\n    if (currentUser.friends) {\n      setFriendList(currentUser.friends);\n    }\n  }, [currentUser]);\n\n  /* ------------------------- creating list of posts ------------------------- */\n  useEffect(() => {\n    if (friendList) {\n      console.log(\"UMMMMM\", currentUser.posts);\n      const newList = friendList.map((friend, index) => {\n        return friend.posts;\n      });\n      const finishedFriendList = newList.flat();\n      const completeListOfMyPostsAndFriendPosts =\n        currentUser.posts.concat(finishedFriendList);\n      console.log(completeListOfMyPostsAndFriendPosts, \"FINALLY??\");\n      setPostList(completeListOfMyPostsAndFriendPosts);\n    }\n  }, [friendList, currentUser]);\n\n  /* -------------------------- sorting list of posts ------------------------- */\n  useEffect(() => {\n    if (postList.length > 0) {\n      console.log(postList, \"FINALLY22222\");\n      setPostListDone(postList.sort((a, b) => (a.time > b.time ? -1 : 1)));\n    } else {\n      console.log(postList, \"FINALLY3333\");\n      setPostListDone([]);\n    }\n  }, [postList]);\n\n  const renderPosts = () => {\n    if (postListDone.length <= 0) return null;\n    const paginatedPostList = postListDone.slice(0, listPagination);\n    console.log(\"FUCK\", paginatedPostList);\n    return paginatedPostList.map((post, index) => {\n      // console.log(\"post\", post);\n      const unformattedDate = new Date(parseInt(post.time));\n      const date = unformattedDate.toString();\n      return (\n        <div key={index}>\n          <Post\n            name={post.userId.name}\n            profilePic={post.userId.profilePic}\n            date={date}\n            postId={post.id}\n            postContent={post.post}\n            likeCount={post.likedBy.length}\n            likeList={post.likedBy}\n            commentCount={post.comments.length}\n            commentList={post.comments}\n          />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postListContainer}>\n        <FadeIn>{renderPosts()}</FadeIn>\n      </div>\n      {postListDone.length > listPagination ? (\n        <div\n          className={styles.loadMoreContainer}\n          onClick={() => setListPagination(listPagination + 5)}\n        >\n          Load More\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}