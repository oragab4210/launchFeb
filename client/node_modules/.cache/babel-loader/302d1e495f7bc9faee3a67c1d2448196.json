{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport deletePostMutation from \"../../../../GQL/mutations/deletePost\";\nimport editUserMutation from \"../../../../GQL/mutations/EditUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeletePost = _ref => {\n  _s();\n\n  let {\n    postId,\n    postContent\n  } = _ref;\n  const [editPost] = useMutation(editPostMutation);\n  const [deletePost] = useMutation(deletePostMutation); // const { refetch } = useQuery(currentUserQuery);\n\n  const currentUser = useAppSelector(state => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n\n  const editPostOnClick = () => {\n    editPost({\n      variables: {\n        id: postId,\n        post: postText\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then([setShowModal(false)]).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    });\n  };\n\n  const deleteCommentOnClick = e => {\n    console.log(\"start\");\n    /* ----------------------------- delete comment ----------------------------- */\n\n    deletePost({\n      variables: {\n        id: postId\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    })\n    /* -----------------------------Delete Comment from Post--------------------------------------------- */\n    .then(res => editUser({\n      variables: {\n        id: comment.postId,\n        deleteComment: comment.id\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(setShowModal(false)).catch(err => {\n      var _err$graphQLErrors2;\n\n      const errors = (_err$graphQLErrors2 = err.graphQLErrors) === null || _err$graphQLErrors2 === void 0 ? void 0 : _err$graphQLErrors2.map(error => error.message);\n      console.log(errors);\n    })).catch(err => {\n      var _err$graphQLErrors3;\n\n      const errors = (_err$graphQLErrors3 = err.graphQLErrors) === null || _err$graphQLErrors3 === void 0 ? void 0 : _err$graphQLErrors3.map(error => error.message);\n      console.log(errors);\n    });\n  };\n\n  if (!showModal) return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setShowModal(true),\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container // ref={modal}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createPostContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.x_svg,\n            src: X_SVG,\n            alt: \"exit\",\n            onClick: () => setShowModal(!showModal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles.input,\n            value: postText,\n            onChange: e => setPostText(e.target.value),\n            placeholder: `What's on your mind, ${currentUser.name}?` // maxlength=\"1\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postBtnContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.editBtn} ${styles.btn}`,\n            onClick: () => editPostOnClick(),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.deleteBtn} ${styles.btn}` // onClick={(e) => deleteCommentOnClick()}\n            ,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeletePost, \"ckGYuecKaivqOvkHYyP33mvS8PI=\", false, function () {\n  return [useMutation, useMutation, useAppSelector];\n});\n\n_c = EditDeletePost;\nexport default EditDeletePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeletePost\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/EditDeletePost/EditDeletePost.js"],"names":["styles","React","useState","useEffect","useRef","Modal","useAppSelector","useAppDispatch","useMutation","useQuery","currentUserQuery","editPostMutation","deletePostMutation","editUserMutation","EditDeletePost","postId","postContent","editPost","deletePost","currentUser","state","showModal","setShowModal","postText","setPostText","editPostOnClick","variables","id","post","refetchQueries","query","awaitRefetchQueries","then","catch","err","errors","graphQLErrors","map","error","message","console","log","deleteCommentOnClick","e","res","editUser","comment","deleteComment","container","createPostContainer","titleContainer","x_svg","X_SVG","contentContainer","inputContainer","input","target","value","name","postBtnContainer","editBtn","btn","deleteBtn"],"mappings":"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","sourcesContent":["import styles from \"./EditDeletePost.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport deletePostMutation from \"../../../../GQL/mutations/deletePost\";\nimport editUserMutation from \"../../../../GQL/mutations/EditUser\";\n\nconst EditDeletePost = ({ postId, postContent }) => {\n  const [editPost] = useMutation(editPostMutation);\n  const [deletePost] = useMutation(deletePostMutation);\n  // const { refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [showModal, setShowModal] = useState(false);\n  const [postText, setPostText] = useState(postContent);\n\n  const editPostOnClick = () => {\n    editPost({\n      variables: {\n        id: postId,\n        post: postText,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then([setShowModal(false)])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n  const deleteCommentOnClick = (e) => {\n    console.log(\"start\");\n    /* ----------------------------- delete comment ----------------------------- */\n    deletePost({\n      variables: {\n        id: postId,\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      /* -----------------------------Delete Comment from Post--------------------------------------------- */\n      .then((res) =>\n        editUser({\n          variables: {\n            id: comment.postId,\n            deleteComment: comment.id,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then(setShowModal(false))\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      )\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n  };\n\n  if (!showModal) return <div onClick={() => setShowModal(true)}>...</div>;\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Edit Comment</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n        </div>\n\n        <div className={styles.contentContainer}>\n          <div className={styles.inputContainer}>\n            <textarea\n              className={styles.input}\n              value={postText}\n              onChange={(e) => setPostText(e.target.value)}\n              placeholder={`What's on your mind, ${currentUser.name}?`}\n              // maxlength=\"1\"\n            ></textarea>\n          </div>\n          <div className={styles.postBtnContainer}>\n            <button\n              className={`${styles.editBtn} ${styles.btn}`}\n              onClick={() => editPostOnClick()}\n            >\n              Edit\n            </button>\n            <button\n              className={`${styles.deleteBtn} ${styles.btn}`}\n              // onClick={(e) => deleteCommentOnClick()}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditDeletePost;\n"]},"metadata":{},"sourceType":"module"}