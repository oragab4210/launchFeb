{"ast":null,"code":"import _slicedToArray from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import styles from\"./PostList.module.css\";import{useAppSelector,useAppDispatch}from\"../../../../redux/hooks\";import React,{useState,useEffect}from\"react\";import{useMutation,useQuery}from\"@apollo/client\";import Post from\"../Post/Post\";import currentUserQuery from\"../../../../GQL/queries/CurrentUser\";import FadeIn from\"react-fade-in\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostList=function PostList(){var _useQuery=useQuery(currentUserQuery),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;var currentUser=useAppSelector(function(state){return state.currentUser;});var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),friendList=_useState2[0],setFriendList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),postList=_useState4[0],setPostList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),postListDone=_useState6[0],setPostListDone=_useState6[1];var _useState7=useState(10),_useState8=_slicedToArray(_useState7,2),listPagination=_useState8[0],setListPagination=_useState8[1];useEffect(function(){refetch();if(currentUser.friends){setFriendList(currentUser.friends);}},[currentUser]);/* ------------------------- creating list of posts ------------------------- */useEffect(function(){if(friendList){console.log(\"UMMMMM\",currentUser.posts);var newList=friendList.map(function(friend,index){return friend.posts;});var finishedFriendList=newList.flat();var completeListOfMyPostsAndFriendPosts=currentUser.posts.concat(finishedFriendList);console.log(completeListOfMyPostsAndFriendPosts,\"FINALLY??\");setPostList(completeListOfMyPostsAndFriendPosts);}},[friendList,currentUser]);/* -------------------------- sorting list of posts ------------------------- */useEffect(function(){if(postList.length>0){console.log(postList,\"FINALLY22222\");setPostListDone(postList.sort(function(a,b){return a.time>b.time?-1:1;}));}else{console.log(postList,\"FINALLY3333\");setPostListDone([]);}},[postList]);var renderPosts=function renderPosts(){if(postListDone.length<=0)return null;var paginatedPostList=postListDone.slice(0,listPagination);console.log(\"FUCK\",paginatedPostList);return paginatedPostList.map(function(post,index){// console.log(\"post\", post);\nvar unformattedDate=new Date(parseInt(post.time));var date=unformattedDate.toString();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Post,{name:post.userId.name,profilePic:post.userId.profilePic,date:date,postId:post.id,postContent:post.post,likeCount:post.likedBy.length,likeList:post.likedBy,commentCount:post.comments.length,commentList:post.comments})},index);});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.postListContainer,children:/*#__PURE__*/_jsx(FadeIn,{children:renderPosts()})}),postListDone.length>listPagination?/*#__PURE__*/_jsx(\"div\",{className:styles.loadMoreContainer,onClick:function onClick(){return setListPagination(listPagination+5);},children:\"Load More\"}):null]});};export default PostList;","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/PostList/PostList.js"],"names":["styles","useAppSelector","useAppDispatch","React","useState","useEffect","useMutation","useQuery","Post","currentUserQuery","FadeIn","PostList","loading","error","data","refetch","currentUser","state","friendList","setFriendList","postList","setPostList","postListDone","setPostListDone","listPagination","setListPagination","friends","console","log","posts","newList","map","friend","index","finishedFriendList","flat","completeListOfMyPostsAndFriendPosts","concat","length","sort","a","b","time","renderPosts","paginatedPostList","slice","post","unformattedDate","Date","parseInt","date","toString","userId","name","profilePic","id","likedBy","comments","container","postListContainer","loadMoreContainer"],"mappings":"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","sourcesContent":["import styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Post from \"../Post/Post\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\nimport FadeIn from \"react-fade-in\";\n\nconst PostList = () => {\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [friendList, setFriendList] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n  const [postListDone, setPostListDone] = useState([]);\n  const [listPagination, setListPagination] = useState(10);\n\n  useEffect(() => {\n    refetch();\n    if (currentUser.friends) {\n      setFriendList(currentUser.friends);\n    }\n  }, [currentUser]);\n\n  /* ------------------------- creating list of posts ------------------------- */\n  useEffect(() => {\n    if (friendList) {\n      console.log(\"UMMMMM\", currentUser.posts);\n      const newList = friendList.map((friend, index) => {\n        return friend.posts;\n      });\n      const finishedFriendList = newList.flat();\n      const completeListOfMyPostsAndFriendPosts =\n        currentUser.posts.concat(finishedFriendList);\n      console.log(completeListOfMyPostsAndFriendPosts, \"FINALLY??\");\n      setPostList(completeListOfMyPostsAndFriendPosts);\n    }\n  }, [friendList, currentUser]);\n\n  /* -------------------------- sorting list of posts ------------------------- */\n  useEffect(() => {\n    if (postList.length > 0) {\n      console.log(postList, \"FINALLY22222\");\n      setPostListDone(postList.sort((a, b) => (a.time > b.time ? -1 : 1)));\n    } else {\n      console.log(postList, \"FINALLY3333\");\n      setPostListDone([]);\n    }\n  }, [postList]);\n\n  const renderPosts = () => {\n    if (postListDone.length <= 0) return null;\n    const paginatedPostList = postListDone.slice(0, listPagination);\n    console.log(\"FUCK\", paginatedPostList);\n    return paginatedPostList.map((post, index) => {\n      // console.log(\"post\", post);\n      const unformattedDate = new Date(parseInt(post.time));\n      const date = unformattedDate.toString();\n      return (\n        <div key={index}>\n          <Post\n            name={post.userId.name}\n            profilePic={post.userId.profilePic}\n            date={date}\n            postId={post.id}\n            postContent={post.post}\n            likeCount={post.likedBy.length}\n            likeList={post.likedBy}\n            commentCount={post.comments.length}\n            commentList={post.comments}\n          />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.postListContainer}>\n        <FadeIn>{renderPosts()}</FadeIn>\n      </div>\n      {postListDone.length > listPagination ? (\n        <div\n          className={styles.loadMoreContainer}\n          onClick={() => setListPagination(listPagination + 5)}\n        >\n          Load More\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}