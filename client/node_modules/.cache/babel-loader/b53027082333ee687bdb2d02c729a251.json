{"ast":null,"code":"import _regeneratorRuntime from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import styles from\"./ProfilePic.module.css\";import useIPFS from\"../../../utils/useIPFS\";import{useMutation,useQuery}from\"@apollo/client\";import{useAppSelector,useAppDispatch}from\"../../../redux/hooks\";import editUserMutation from\"../../../GQL/mutations/editUser\";import currentUserQuery from\"../../../GQL/queries/CurrentUser\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfilePic=function ProfilePic(){var _useMutation=useMutation(editUserMutation),_useMutation2=_slicedToArray(_useMutation,1),editUser=_useMutation2[0];var _useIPFS=useIPFS(),captureFileAndUploadToIPFS=_useIPFS.captureFileAndUploadToIPFS;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showEditContainer=_useState2[0],setShowEditContainer=_useState2[1];var currentUser=useAppSelector(function(state){return state.currentUser;});var uploadIPFS_editUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return captureFileAndUploadToIPFS(e);case 2:url=_context.sent;editUser({variables:{id:currentUser.id,profilePic:url},refetchQueries:[{query:currentUserQuery}],awaitRefetchQueries:true}).catch(function(err){var _err$graphQLErrors;var errors=(_err$graphQLErrors=err.graphQLErrors)===null||_err$graphQLErrors===void 0?void 0:_err$graphQLErrors.map(function(error){return error.message;});console.log(errors);});case 4:case\"end\":return _context.stop();}}},_callee);}));return function uploadIPFS_editUser(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[currentUser.profilePic?/*#__PURE__*/_jsx(\"img\",{className:styles.pic,src:currentUser.profilePic,alt:\"\"}):/*#__PURE__*/_jsx(\"img\",{className:styles.pic,src:\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\",alt:\"\"}),showEditContainer?/*#__PURE__*/_jsx(\"div\",{className:styles.onHoverContainer,children:/*#__PURE__*/_jsxs(\"label\",{className:styles.fileButtonLabel,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:styles.fileButton,onChange:function onChange(e){return uploadIPFS_editUser(e);}}),\"Edit\"]})}):null]});};export default ProfilePic;","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/ProfilePic/ProfilePic.js"],"names":["React","useEffect","useState","styles","useIPFS","useMutation","useQuery","useAppSelector","useAppDispatch","editUserMutation","currentUserQuery","ProfilePic","editUser","captureFileAndUploadToIPFS","showEditContainer","setShowEditContainer","currentUser","state","uploadIPFS_editUser","e","url","variables","id","profilePic","refetchQueries","query","awaitRefetchQueries","catch","err","errors","graphQLErrors","map","error","message","console","log","container","pic","onHoverContainer","fileButtonLabel","fileButton"],"mappings":"8fAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,gBAAtC,CACA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,sBAA/C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,iBAAmBN,WAAW,CAACI,gBAAD,CAA9B,8CAAOG,QAAP,kBACA,aAAuCR,OAAO,EAA9C,CAAQS,0BAAR,UAAQA,0BAAR,CACA,cAAkDX,QAAQ,CAAC,IAAD,CAA1D,wCAAOY,iBAAP,eAA0BC,oBAA1B,eACA,GAAMC,CAAAA,WAAW,CAAGT,cAAc,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAAlC,CAEA,GAAME,CAAAA,mBAAmB,0FAAG,iBAAOC,CAAP,gJACRN,CAAAA,0BAA0B,CAACM,CAAD,CADlB,QACpBC,GADoB,eAG1BR,QAAQ,CAAC,CACPS,SAAS,CAAE,CAAEC,EAAE,CAAEN,WAAW,CAACM,EAAlB,CAAsBC,UAAU,CAAEH,GAAlC,CADJ,CAEPI,cAAc,CAAE,CAAC,CAAEC,KAAK,CAAEf,gBAAT,CAAD,CAFT,CAGPgB,mBAAmB,CAAE,IAHd,CAAD,CAAR,CAIGC,KAJH,CAIS,SAACC,GAAD,CAAS,wBAChB,GAAMC,CAAAA,MAAM,qBAAGD,GAAG,CAACE,aAAP,6CAAG,mBAAmBC,GAAnB,CAAuB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAjB,EAAvB,CAAf,CAEAC,OAAO,CAACC,GAAR,CAAYN,MAAZ,EACD,CARD,EAH0B,sDAAH,kBAAnBX,CAAAA,mBAAmB,4CAAzB,CAcA,mBACE,aAAK,SAAS,CAAEf,MAAM,CAACiC,SAAvB,WACGpB,WAAW,CAACO,UAAZ,cACC,YAAK,SAAS,CAAEpB,MAAM,CAACkC,GAAvB,CAA4B,GAAG,CAAErB,WAAW,CAACO,UAA7C,CAAyD,GAAG,CAAC,EAA7D,EADD,cAGC,YACE,SAAS,CAAEpB,MAAM,CAACkC,GADpB,CAEE,GAAG,CAAC,qJAFN,CAGE,GAAG,CAAC,EAHN,EAJJ,CAWGvB,iBAAiB,cAChB,YAAK,SAAS,CAAEX,MAAM,CAACmC,gBAAvB,uBACE,eAAO,SAAS,CAAEnC,MAAM,CAACoC,eAAzB,wBACE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAEpC,MAAM,CAACqC,UAFpB,CAGE,QAAQ,CAAE,kBAACrB,CAAD,QAAOD,CAAAA,mBAAmB,CAACC,CAAD,CAA1B,EAHZ,EADF,UADF,EADgB,CAWd,IAtBN,GADF,CA0BD,CA9CD,CAgDA,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./ProfilePic.module.css\";\nimport useIPFS from \"../../../utils/useIPFS\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport editUserMutation from \"../../../GQL/mutations/editUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\n\nconst ProfilePic = () => {\n  const [editUser] = useMutation(editUserMutation);\n  const { captureFileAndUploadToIPFS } = useIPFS();\n  const [showEditContainer, setShowEditContainer] = useState(true);\n  const currentUser = useAppSelector((state) => state.currentUser);\n\n  const uploadIPFS_editUser = async (e) => {\n    const url = await captureFileAndUploadToIPFS(e);\n\n    editUser({\n      variables: { id: currentUser.id, profilePic: url },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    }).catch((err) => {\n      const errors = err.graphQLErrors?.map((error) => error.message);\n\n      console.log(errors);\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      {currentUser.profilePic ? (\n        <img className={styles.pic} src={currentUser.profilePic} alt=\"\" />\n      ) : (\n        <img\n          className={styles.pic}\n          src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n          alt=\"\"\n        />\n      )}\n\n      {showEditContainer ? (\n        <div className={styles.onHoverContainer}>\n          <label className={styles.fileButtonLabel}>\n            <input\n              type=\"file\"\n              className={styles.fileButton}\n              onChange={(e) => uploadIPFS_editUser(e)}\n            />\n            Edit\n          </label>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ProfilePic;\n"]},"metadata":{},"sourceType":"module"}