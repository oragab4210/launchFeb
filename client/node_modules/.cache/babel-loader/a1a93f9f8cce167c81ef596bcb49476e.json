{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/RoomsList/RoomsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./RoomList.module.css\";\nimport useChatRoom from \"../useChatRoom\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { setRoom } from \"../../../redux/features/roomSlice\";\nimport useMessages from \"../useMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoomsList = _ref => {\n  _s();\n\n  let {\n    setFriendListOpen,\n    friendListOpen,\n    currentFriend,\n    setCurrentFriend,\n    chooseRoomPage,\n    setChooseRoomPage\n  } = _ref;\n  const currentUser = useAppSelector(state => state.currentUser);\n  const [activeConversations, setActiveConversations] = useState([]);\n  const [roomChange, setRoomChange] = useState(false);\n  const {\n    getCurrentFriendMessages,\n    selectedFriend,\n    setSelectedFriend\n  } = useMessages();\n  /* -------------------------------------------------------------------------- */\n\n  const room = useAppSelector(state => state.currentRoom.value);\n  /* -------------------------------------------------------------------------- */\n\n  const dispatch = useAppDispatch();\n  const {\n    combineAddresses,\n    setConversationId\n  } = useChatRoom(room);\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    if (currentUser) {\n      setActiveConversations(currentUser.conversations);\n    }\n\n    if (selectedFriend) {\n      getCurrentFriendMessages();\n    }\n  }, [currentUser]);\n  /* -------------------------------------------------------------------------- */\n\n  const setRoom_setConvoId_getMessages = (personId, index) => {\n    const hash = combineAddresses(currentUser.id, personId);\n    console.log(hash);\n    return [dispatch(setRoom(hash)), console.log(hash), setSelectedFriend(index), setConversationId(hash), getCurrentFriendMessages()];\n  };\n\n  const renderRooms = () => {\n    return activeConversations.map((person, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.room} ${selectedFriend === index ? styles.selectedRoom : null}`,\n        onClick: () => [setChooseRoomPage(false), setRoom_setConvoId_getMessages(person.id, index),\n        /* ----------------------------- change to name ----------------------------- */\n        setCurrentFriend(person.email),\n        /* -------------------------------------------------------------------------- */\n        setRoomChange(!roomChange)],\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: person.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"0px\",\n          marginTop: \"0px\"\n        },\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.roomListContainer,\n      children: activeConversations.length > 0 ? renderRooms() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomsList, \"69dJqd7E2D9iwCqQyzY8n6K3QWE=\", false, function () {\n  return [useAppSelector, useMessages, useAppSelector, useAppDispatch, useChatRoom];\n});\n\n_c = RoomsList;\nexport default RoomsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomsList\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/RoomsList/RoomsList.js"],"names":["React","useState","useEffect","styles","useChatRoom","useAppSelector","useAppDispatch","setRoom","useMessages","RoomsList","setFriendListOpen","friendListOpen","currentFriend","setCurrentFriend","chooseRoomPage","setChooseRoomPage","currentUser","state","activeConversations","setActiveConversations","roomChange","setRoomChange","getCurrentFriendMessages","selectedFriend","setSelectedFriend","room","currentRoom","value","dispatch","combineAddresses","setConversationId","conversations","setRoom_setConvoId_getMessages","personId","index","hash","id","console","log","renderRooms","map","person","selectedRoom","email","container","title","marginBottom","marginTop","roomListContainer","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./RoomList.module.css\";\nimport useChatRoom from \"../useChatRoom\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { setRoom } from \"../../../redux/features/roomSlice\";\nimport useMessages from \"../useMessages\";\n\nconst RoomsList = ({\n  setFriendListOpen,\n  friendListOpen,\n  currentFriend,\n  setCurrentFriend,\n  chooseRoomPage,\n  setChooseRoomPage,\n}) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [activeConversations, setActiveConversations] = useState([]);\n  const [roomChange, setRoomChange] = useState(false);\n  const { getCurrentFriendMessages, selectedFriend, setSelectedFriend } =\n    useMessages();\n  /* -------------------------------------------------------------------------- */\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useAppDispatch();\n  const { combineAddresses, setConversationId } = useChatRoom(room);\n  /* -------------------------------------------------------------------------- */\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    if (currentUser) {\n      setActiveConversations(currentUser.conversations);\n    }\n    if (selectedFriend) {\n      getCurrentFriendMessages();\n    }\n  }, [currentUser]);\n\n  /* -------------------------------------------------------------------------- */\n  const setRoom_setConvoId_getMessages = (personId, index) => {\n    const hash = combineAddresses(currentUser.id, personId);\n    console.log(hash);\n    return [\n      dispatch(setRoom(hash)),\n      console.log(hash),\n      setSelectedFriend(index),\n      setConversationId(hash),\n      getCurrentFriendMessages(),\n    ];\n  };\n\n  const renderRooms = () => {\n    return activeConversations.map((person, index) => {\n      return (\n        <div\n          className={`${styles.room} ${\n            selectedFriend === index ? styles.selectedRoom : null\n          }`}\n          onClick={() => [\n            setChooseRoomPage(false),\n            setRoom_setConvoId_getMessages(person.id, index),\n            /* ----------------------------- change to name ----------------------------- */\n            setCurrentFriend(person.email),\n            /* -------------------------------------------------------------------------- */\n            setRoomChange(!roomChange),\n          ]}\n          key={index}\n        >\n          <h1>{person.email}</h1>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        <h2 style={{ marginBottom: \"0px\", marginTop: \"0px\" }}>Join Room</h2>\n      </div>\n\n      <div className={styles.roomListContainer}>\n        {/* ------------------------ add message if not chats ------------------------ */}\n        {activeConversations.length > 0 ? renderRooms() : null}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomsList;\n"]},"metadata":{},"sourceType":"module"}