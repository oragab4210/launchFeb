{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/editUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { gsap } from \"gsap\";\nimport LoadingSpinner from \"../../LoadingSpinner/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  _s();\n\n  let {\n    showModal,\n    setShowModal\n  } = _ref;\n  const [postText, setPostText] = useState(\"\");\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector(state => state.currentUser);\n  const [loading, setLoading] = useState(false); // let modal = useRef();\n  // useEffect(() => {\n  //   gsap.from(modal.current, { y: 180, opacity: 0, duration: 0.5 });\n  //   // gsap.from(textContainer.current, { x: -140, opacity: 0, duration: 0.7 });\n  //   // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n  // }, [showModal]);\n\n  useEffect(() => {\n    if (currentUser.friends) {}\n  }, [currentUser]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    postText.length > 0 ? addPost({\n      variables: {\n        userId: currentUser.id,\n        post: postText\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(res => editUser({\n      variables: {\n        id: currentUser.id,\n        addPost: res.data.addPost.id\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(res => setLoading(false)).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    }).then(setShowModal(!showModal))).catch(err => {\n      var _err$graphQLErrors2;\n\n      const errors = (_err$graphQLErrors2 = err.graphQLErrors) === null || _err$graphQLErrors2 === void 0 ? void 0 : _err$graphQLErrors2.map(error => error.message);\n      console.log(errors);\n    }) : console.log(\"need to have post greater than zero length\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container // ref={modal}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createPostContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.x_svg,\n            src: X_SVG,\n            alt: \"exit\",\n            onClick: () => setShowModal(!showModal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name_and_pic_Container\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: e => onSubmit(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.contentContainer,\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.LoadingSpinner,\n            children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputContainer,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: e => setPostText(e.target.value),\n              className: styles.input,\n              placeholder: `What's on your mind, ${currentUser.name}?` // maxlength=\"1\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postBtnContainer,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.postBtn,\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"siISTiIdP2WLu9YfnVKvBPoMmeA=\", false, function () {\n  return [useMutation, useMutation, useAppSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js"],"names":["styles","React","useState","useEffect","useRef","Modal","useAppSelector","useAppDispatch","addPostMutation","editUserMutation","useMutation","useQuery","useLazyQuery","currentUserQuery","gsap","LoadingSpinner","PostForm","showModal","setShowModal","postText","setPostText","addPost","editUser","currentUser","state","loading","setLoading","friends","onSubmit","e","preventDefault","length","variables","userId","id","post","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","console","log","container","createPostContainer","titleContainer","x_svg","X_SVG","name_and_pic_Container","contentContainer","inputContainer","target","value","input","name","postBtnContainer","postBtn"],"mappings":"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","sourcesContent":["import styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/editUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { gsap } from \"gsap\";\nimport LoadingSpinner from \"../../LoadingSpinner/LoadingSpinner\";\n\nconst PostForm = ({ showModal, setShowModal }) => {\n  const [postText, setPostText] = useState(\"\");\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [loading, setLoading] = useState(false);\n  // let modal = useRef();\n\n  // useEffect(() => {\n  //   gsap.from(modal.current, { y: 180, opacity: 0, duration: 0.5 });\n  //   // gsap.from(textContainer.current, { x: -140, opacity: 0, duration: 0.7 });\n  //   // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n  // }, [showModal]);\n  useEffect(() => {\n    if (currentUser.friends) {\n    }\n  }, [currentUser]);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    postText.length > 0\n      ? addPost({\n          variables: {\n            userId: currentUser.id,\n            post: postText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editUser({\n              variables: {\n                id: currentUser.id,\n                addPost: res.data.addPost.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .then((res) => setLoading(false))\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n              .then(setShowModal(!showModal))\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Create Post</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n          <div className={styles.name_and_pic_Container}>\n            {/* <p> pic and name here and maybe drop down of friends</p> */}\n          </div>\n        </div>\n\n        <form action=\"\" onSubmit={(e) => onSubmit(e)}>\n          <div className={styles.contentContainer}>\n            {loading ? (\n              <div className={styles.LoadingSpinner}>\n                <LoadingSpinner />\n              </div>\n            ) : null}\n            <div className={styles.inputContainer}>\n              <textarea\n                onChange={(e) => setPostText(e.target.value)}\n                className={styles.input}\n                placeholder={`What's on your mind, ${currentUser.name}?`}\n                // maxlength=\"1\"\n              ></textarea>\n            </div>\n            <div className={styles.postBtnContainer}>\n              <button className={styles.postBtn}>Post</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}