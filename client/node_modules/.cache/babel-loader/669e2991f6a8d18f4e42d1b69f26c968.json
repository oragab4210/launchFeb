{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport SideNav from \"../SideNav/SideNav\";\nimport logo from \"./logo.png\"; // import profile from \"./profile.png\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(query);\n  const {\n    pathname\n  } = useLocation();\n  const routesToNOTShowUpIn = [\"/\"];\n  const shouldShowUp = !routesToNOTShowUpIn.includes(pathname);\n  const [open, setOpen] = useState(false);\n  const [activeBtn, setActiveBtn] = useState(0);\n  const [user, setUser] = useState(\"\");\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  const dispatch = useAppDispatch(false);\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true);\n      } else {\n        setIsUser(false);\n      }\n    };\n\n    fetchAccounts();\n  }, [loading, currentUser, data]);\n\n  const signinContent = /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => setActiveBtn(1),\n    className: `${styles.option} ${activeBtn === 1 ? styles.active : null}`,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      className: styles.option,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  const registerContent = /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => setActiveBtn(2),\n    className: `${styles.option} ${activeBtn === 2 ? styles.active : null}`,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      className: styles.option,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  /* -------------------------------------------------------------------------- */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileDropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"8XTi7SGwtci7iPEpbU6U67QEc3U=\", false, function () {\n  return [useQuery, useLocation, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","Link","useLocation","SideNav","logo","useQuery","useMutation","setCurrentUser","query","useAppSelector","useAppDispatch","ProfileDropdown","NavBar","loading","error","data","pathname","routesToNOTShowUpIn","shouldShowUp","includes","open","setOpen","activeBtn","setActiveBtn","user","setUser","isUser","setIsUser","currentUser","state","value","dispatch","fetchAccounts","user2","signinContent","option","active","registerContent","container"],"mappings":"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","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport SideNav from \"../SideNav/SideNav\";\nimport logo from \"./logo.png\";\n// import profile from \"./profile.png\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\n\nconst NavBar = () => {\n  let { loading, error, data } = useQuery(query);\n  const { pathname } = useLocation();\n  const routesToNOTShowUpIn = [\"/\"];\n  const shouldShowUp = !routesToNOTShowUpIn.includes(pathname);\n  const [open, setOpen] = useState(false);\n  const [activeBtn, setActiveBtn] = useState(0);\n  const [user, setUser] = useState(\"\");\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector((state) => state.currentUser.value);\n  const dispatch = useAppDispatch(false);\n\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true);\n      } else {\n        setIsUser(false);\n      }\n    };\n    fetchAccounts();\n  }, [loading, currentUser, data]);\n\n  const signinContent = (\n    <li\n      onClick={() => setActiveBtn(1)}\n      className={`${styles.option} ${activeBtn === 1 ? styles.active : null}`}\n    >\n      <Link to=\"/login\" className={styles.option}>\n        Log In\n      </Link>\n    </li>\n  );\n  const registerContent = (\n    <li\n      onClick={() => setActiveBtn(2)}\n      className={`${styles.option} ${activeBtn === 2 ? styles.active : null}`}\n    >\n      <Link to=\"/register\" className={styles.option}>\n        Register\n      </Link>\n    </li>\n  );\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className={styles.container}>\n      <SideNav />\n      <ProfileDropdown />\n    </div>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}