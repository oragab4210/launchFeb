{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/MakeComment/MakeComment.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./MakeComment.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport profilePic from \"../../NavBar/profile.png\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editUserMutation from \"../../../GQL/mutations/EditUser\";\nimport editCommentMutation from \"../../../GQL/mutations/editComment\";\nimport editPostMutation from \"../../../GQL/mutations/editPost\";\nimport addCommentMutation from \"../../../GQL/mutations/addComment\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakeComment = _ref => {\n  _s();\n\n  let {\n    commentOpen,\n    setCommentOpen,\n    postId\n  } = _ref;\n  const [commentText, setCommentText] = useState(\"\"); // const [editUser] = useMutation(editUserMutation);\n\n  const [addComment] = useMutation(addCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  useEffect(() => {\n    if (currentUser.friends) {\n      console.log(postId); // console.log(\"current User\", currentUser.friends);\n    }\n  }, [currentUser]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    commentText.length > 0 ? addComment({\n      variables: {\n        postId: postId,\n        comment: commentText\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(res => console.log(res.data) // editPost({\n    //   variables: {\n    //     id: postId,\n    //     addComment: res.data.addComment.id,\n    //   },\n    //   refetchQueries: [{ query: currentUserQuery }],\n    //   awaitRefetchQueries: true,\n    // }).catch((err) => {\n    //   const errors = err.graphQLErrors?.map((error) => error.message);\n    //   console.log(errors);\n    // })\n    // .then(setShowModal(!showModal))\n    ).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    }) : console.log(\"need to have post greater than zero length\");\n  };\n\n  if (commentOpen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: styles.formContainer,\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.profilePicContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePic,\n            alt: \"\",\n            className: styles.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => setCommentText(e.target.value),\n          className: styles.input,\n          placeholder: \"What's on your mind, Omar?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(MakeComment, \"7quMrc8hbt4BfFjVIm7ovvC3cjY=\", false, function () {\n  return [useMutation, useMutation, useAppSelector];\n});\n\n_c = MakeComment;\nexport default MakeComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeComment\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/MakeComment/MakeComment.js"],"names":["styles","React","useState","useEffect","profilePic","useAppSelector","useAppDispatch","useMutation","useQuery","editUserMutation","editCommentMutation","editPostMutation","addCommentMutation","currentUserQuery","MakeComment","commentOpen","setCommentOpen","postId","commentText","setCommentText","addComment","editPost","currentUser","state","value","friends","console","log","onSubmit","e","preventDefault","length","variables","comment","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","container","formContainer","profilePicContainer","target","input"],"mappings":"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","sourcesContent":["import styles from \"./MakeComment.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport profilePic from \"../../NavBar/profile.png\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editUserMutation from \"../../../GQL/mutations/EditUser\";\nimport editCommentMutation from \"../../../GQL/mutations/editComment\";\nimport editPostMutation from \"../../../GQL/mutations/editPost\";\nimport addCommentMutation from \"../../../GQL/mutations/addComment\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\n\nconst MakeComment = ({ commentOpen, setCommentOpen, postId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  // const [editUser] = useMutation(editUserMutation);\n  const [addComment] = useMutation(addCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  const currentUser = useAppSelector((state) => state.currentUser.value);\n\n  useEffect(() => {\n    if (currentUser.friends) {\n      console.log(postId);\n      // console.log(\"current User\", currentUser.friends);\n    }\n  }, [currentUser]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    commentText.length > 0\n      ? addComment({\n          variables: {\n            postId: postId,\n            comment: commentText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then(\n            (res) => console.log(res.data)\n            // editPost({\n            //   variables: {\n            //     id: postId,\n            //     addComment: res.data.addComment.id,\n            //   },\n            //   refetchQueries: [{ query: currentUserQuery }],\n            //   awaitRefetchQueries: true,\n            // }).catch((err) => {\n            //   const errors = err.graphQLErrors?.map((error) => error.message);\n\n            //   console.log(errors);\n            // })\n            // .then(setShowModal(!showModal))\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  if (commentOpen) {\n    return (\n      <div className={styles.container}>\n        <form action=\"\" className={styles.formContainer} onSubmit={onSubmit}>\n          <div className={styles.profilePicContainer}>\n            <img src={profilePic} alt=\"\" className={styles.profilePic} />\n          </div>\n          <textarea\n            onChange={(e) => setCommentText(e.target.value)}\n            className={styles.input}\n            placeholder=\"What's on your mind, Omar?\"\n          ></textarea>\n          <button> submit</button>\n        </form>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default MakeComment;\n"]},"metadata":{},"sourceType":"module"}