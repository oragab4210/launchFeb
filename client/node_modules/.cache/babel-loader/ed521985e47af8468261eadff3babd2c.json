{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakePost/MakePost.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from \"./MakePost.module.css\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport mutation from \"../../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../../GQL/queries/CurrentUser\";\nimport profilePic from \"./profile.png\";\nimport PostForm from \"../../PostForm/PostForm\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakePost = () => {\n  _s();\n\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  const [editUser] = useMutation(mutation);\n  const [text, setText] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  /* -------------------------------------------------------------------------- */\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text.length > 0) {\n      editUser({\n        variables: {\n          id: currentUser.id,\n          addPost: {\n            post: text\n          }\n        },\n        refetchQueries: [{\n          query: getCurrentUser\n        }],\n        awaitRefetchQueries: true\n      }).then(res => null).catch(err => {\n        var _err$graphQLErrors;\n\n        const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n        console.log(errors);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: e => onSubmit,\n      className: styles.picInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.picInputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profilePic,\n          alt: \"\",\n          className: styles.profilePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          onClick: () => setShowModal(!showModal),\n          children: \"What's on your mind,name here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      showModal: showModal,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MakePost, \"TfXmS+WoOhNB3hiLIjzp1Mrt3G0=\", false, function () {\n  return [useAppSelector, useMutation];\n});\n\n_c = MakePost;\nexport default MakePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakePost\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakePost/MakePost.tsx"],"names":["styles","React","useState","useMutation","mutation","getCurrentUser","profilePic","PostForm","useAppSelector","MakePost","currentUser","state","value","editUser","text","setText","showModal","setShowModal","onSubmit","e","preventDefault","length","variables","id","addPost","post","refetchQueries","query","awaitRefetchQueries","then","res","catch","err","errors","graphQLErrors","map","error","message","console","log","container","picInputContainer","input"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAsD,OAAtD;AACA,SAASC,WAAT,QAAsC,gBAAtC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,cAAT,QAA+C,yBAA/C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,WAAgB,GAAGF,cAAc,CAAEG,KAAD,IAAWA,KAAK,CAACD,WAAN,CAAkBE,KAA9B,CAAvC;AACA,QAAM,CAACC,QAAD,IAAaV,WAAW,CAACC,QAAD,CAA9B;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEA;;AACA,QAAMgB,QAAQ,GAAIC,CAAD,IAAkB;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB;AACnBR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEb,WAAW,CAACa,EAAlB;AAAsBC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,IAAI,EAAEX;AAAR;AAA/B,SADJ;AAEPY,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEtB;AAAT,SAAD,CAFT;AAGPuB,QAAAA,mBAAmB,EAAE;AAHd,OAAD,CAAR,CAKGC,IALH,CAKSC,GAAD,IAAS,IALjB,EAMGC,KANH,CAMUC,GAAD,IAAS;AAAA;;AACd,cAAMC,MAAM,yBAAGD,GAAG,CAACE,aAAP,uDAAG,mBAAmBC,GAAnB,CAAwBC,KAAD,IAAWA,KAAK,CAACC,OAAxC,CAAf;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACD,OAVH;AAWD;AACF,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACwC,SAAvB;AAAA,4BACE;AACE,MAAA,MAAM,EAAC,EADT;AAEE,MAAA,QAAQ,EAAGrB,CAAD,IAAOD,QAFnB;AAGE,MAAA,SAAS,EAAElB,MAAM,CAACyC,iBAHpB;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAEzC,MAAM,CAACyC,iBAAvB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEnC,UAAV;AAAsB,UAAA,GAAG,EAAC,EAA1B;AAA6B,UAAA,SAAS,EAAEN,MAAM,CAACM;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAEN,MAAM,CAAC0C,KADpB;AAEE,UAAA,OAAO,EAAE,MAAMzB,YAAY,CAAC,CAACD,SAAF,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEA,SAArB;AAAgC,MAAA,YAAY,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7CD;;GAAMR,Q;UACqBD,c,EACNL,W;;;KAFfM,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import styles from \"./MakePost.module.css\";\nimport React, { useState, useEffect, FormEvent } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../../GQL/queries/CurrentUser\";\nimport profilePic from \"./profile.png\";\nimport PostForm from \"../../PostForm/PostForm\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\n\nconst MakePost = () => {\n  const currentUser: any = useAppSelector((state) => state.currentUser.value);\n  const [editUser] = useMutation(mutation);\n\n  const [text, setText] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (text.length > 0) {\n      editUser({\n        variables: { id: currentUser.id, addPost: { post: text } },\n        refetchQueries: [{ query: getCurrentUser }],\n        awaitRefetchQueries: true,\n      })\n        .then((res) => null)\n        .catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        });\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <form\n        action=\"\"\n        onSubmit={(e) => onSubmit}\n        className={styles.picInputContainer}\n      >\n        <div className={styles.picInputContainer}>\n          <img src={profilePic} alt=\"\" className={styles.profilePic} />\n          <div\n            className={styles.input}\n            onClick={() => setShowModal(!showModal)}\n          >\n            What's on your mind,name here\n          </div>\n        </div>\n      </form>\n      <PostForm showModal={showModal} setShowModal={setShowModal} />\n    </div>\n  );\n};\n\nexport default MakePost;\n"]},"metadata":{},"sourceType":"module"}