{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/PostList/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport Post from \"../Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  // let { loading, error, data } = useQuery(getCurrentUser);\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [posts, setPosts] = useState(\"\");\n  useEffect(() => {\n    console.log(currentUser.friends);\n  }); // useEffect(() => {\n  //   if (data) {\n  //     const user = data.user2;\n  //     setUser(user);\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   if (user) {\n  //     console.log(user.posts);\n  //     setPosts(user.posts);\n  //   }\n  // }, [user]);\n\n  const renderPosts = () => {\n    return posts.map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.individualPost,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \" edit post/delete post here \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 60\n        }, this), \" \", \"time/date here\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \"comments//// \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \"post.comments here\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postListContainer,\n      children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"w/hFrkOrfkXbl2c/OtpmpeInLbA=\", false, function () {\n  return [useAppSelector, useMutation];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/PostList/PostList.js"],"names":["styles","useAppSelector","useAppDispatch","React","useState","useEffect","useMutation","useQuery","mutation","getCurrentUser","Post","PostList","currentUser","state","value","editUser","user","setUser","text","setText","posts","setPosts","console","log","friends","renderPosts","map","post","index","individualPost","email","container","postListContainer"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,sBAA/C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAMC,WAAW,GAAGX,cAAc,CAAEY,KAAD,IAAWA,KAAK,CAACD,WAAN,CAAkBE,KAA9B,CAAlC;AACA,QAAM,CAACC,QAAD,IAAaT,WAAW,CAACE,QAAD,CAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAW,CAACY,OAAxB;AACD,GAFQ,CAAT,CARqB,CAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,WAAOL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,0BACE;AAAiB,QAAA,SAAS,EAAE5B,MAAM,CAAC6B,cAAnC;AAAA,gCACE;AAAA,oBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,+CACmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADnD,EACyE,GADzE,iCAGE;AAAA,oBAAKH,IAAI,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF,gCAMe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANf,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbM,CAAP;AAcD,GAfD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAAC+B,SAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACgC,iBAAvB;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhDD;;GAAMrB,Q;UAEgBV,c,EACDK,W;;;KAHfK,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import styles from \"./PostList.module.css\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport Post from \"../Post/Post\";\n\nconst PostList = () => {\n  // let { loading, error, data } = useQuery(getCurrentUser);\n  const currentUser = useAppSelector((state) => state.currentUser.value);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [posts, setPosts] = useState(\"\");\n\n  useEffect(() => {\n    console.log(currentUser.friends);\n  });\n\n  // useEffect(() => {\n  //   if (data) {\n  //     const user = data.user2;\n  //     setUser(user);\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   if (user) {\n  //     console.log(user.posts);\n  //     setPosts(user.posts);\n  //   }\n  // }, [user]);\n\n  const renderPosts = () => {\n    return posts.map((post, index) => {\n      return (\n        <div key={index} className={styles.individualPost}>\n          <h3>{user.email}</h3> edit post/delete post here <button>Edit</button>{\" \"}\n          time/date here\n          <h2>{post.post}</h2>\n          <button>Like</button>\n          <hr />\n          comments//// <button>Comment</button>\n          <br />\n          post.comments here\n        </div>\n      );\n    });\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.postListContainer}>\n        <Post />\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}