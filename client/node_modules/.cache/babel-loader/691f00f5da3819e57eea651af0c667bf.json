{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/EditUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { gsap } from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  _s();\n\n  let {\n    showModal,\n    setShowModal\n  } = _ref;\n  const [postText, setPostText] = useState(\"\");\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector(state => state.currentUser);\n  let textContainer = useRef();\n  useEffect(() => {\n    gsap.from(textContainer.current, {\n      x: -140,\n      opacity: 0,\n      duration: 0.7\n    }); // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n  });\n  useEffect(() => {\n    if (currentUser.friends) {}\n  }, [currentUser]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    postText.length > 0 ? addPost({\n      variables: {\n        userId: currentUser.id,\n        post: postText\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(res => editUser({\n      variables: {\n        id: currentUser.id,\n        addPost: res.data.addPost.id\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    }).then(setShowModal(!showModal))).catch(err => {\n      var _err$graphQLErrors2;\n\n      const errors = (_err$graphQLErrors2 = err.graphQLErrors) === null || _err$graphQLErrors2 === void 0 ? void 0 : _err$graphQLErrors2.map(error => error.message);\n      console.log(errors);\n    }) : console.log(\"need to have post greater than zero length\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createPostContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.x_svg,\n            src: X_SVG,\n            alt: \"exit\",\n            onClick: () => setShowModal(!showModal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name_and_pic_Container,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" pic and name here and maybe drop down of friends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: e => onSubmit(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.contentContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputContainer,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: e => setPostText(e.target.value),\n              className: styles.input,\n              placeholder: `What's on your mind, ${currentUser.name}?` // maxlength=\"1\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postBtnContainer,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.postBtn,\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"nMbGiaAypTe8SDfC11r2kQ0ejrI=\", false, function () {\n  return [useMutation, useMutation, useAppSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js"],"names":["styles","React","useState","useEffect","useRef","Modal","useAppSelector","useAppDispatch","addPostMutation","editUserMutation","useMutation","useQuery","useLazyQuery","currentUserQuery","gsap","PostForm","showModal","setShowModal","postText","setPostText","addPost","editUser","currentUser","state","textContainer","from","current","x","opacity","duration","friends","onSubmit","e","preventDefault","length","variables","userId","id","post","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","console","log","container","createPostContainer","titleContainer","x_svg","X_SVG","name_and_pic_Container","contentContainer","inputContainer","target","value","input","name","postBtnContainer","postBtn"],"mappings":"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","sourcesContent":["import styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/EditUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { gsap } from \"gsap\";\n\nconst PostForm = ({ showModal, setShowModal }) => {\n  const [postText, setPostText] = useState(\"\");\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let textContainer = useRef();\n\n  useEffect(() => {\n    gsap.from(textContainer.current, { x: -140, opacity: 0, duration: 0.7 });\n    // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n  });\n  useEffect(() => {\n    if (currentUser.friends) {\n    }\n  }, [currentUser]);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    postText.length > 0\n      ? addPost({\n          variables: {\n            userId: currentUser.id,\n            post: postText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editUser({\n              variables: {\n                id: currentUser.id,\n                addPost: res.data.addPost.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n              .then(setShowModal(!showModal))\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div className={styles.container}>\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Create Post</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n          <div className={styles.name_and_pic_Container}>\n            <p> pic and name here and maybe drop down of friends</p>\n          </div>\n        </div>\n\n        <form action=\"\" onSubmit={(e) => onSubmit(e)}>\n          <div className={styles.contentContainer}>\n            <div className={styles.inputContainer}>\n              <textarea\n                onChange={(e) => setPostText(e.target.value)}\n                className={styles.input}\n                placeholder={`What's on your mind, ${currentUser.name}?`}\n                // maxlength=\"1\"\n              ></textarea>\n            </div>\n            <div className={styles.postBtnContainer}>\n              <button className={styles.postBtn}>Post</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}