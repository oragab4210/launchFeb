{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/PostForm/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/EditUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  _s();\n\n  let {\n    showModal,\n    setShowModal\n  } = _ref;\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector(state => state.currentUser.value);\n  useEffect(() => {\n    if (currentUser.friends) {\n      console.log(\"kkk\", currentUser);\n    }\n  }, [currentUser]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(typeof currentUser.id);\n    addPost({\n      variables: {\n        userId: currentUser.id,\n        post: \"test 1 from react\"\n      },\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).then(res => console.log(res.data)).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    }); // editUser({\n    //   variables: {\n    //     id: currentUser.id,\n    //     addPost: friendId,\n    //   },\n    //   refetchQueries: [{ query: currentUserQuery }],\n    //   awaitRefetchQueries: true,\n    // }).catch((err) => {\n    //   const errors = err.graphQLErrors?.map((error) => error.message);\n    //   console.log(errors);\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createPostContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.createPost,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.x_svg,\n            src: X_SVG,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: styles.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name_and_pic_Container,\n          children: \"pic and name here and maybe drop down of friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: e => onSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.contentContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputContainer,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: styles.input,\n              placeholder: \"What's on your mind, Omar?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postBtnContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.postBtn,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"5jqO15DNjGdTGFcC0aN9AdZTK1A=\", false, function () {\n  return [useMutation, useMutation, useAppSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/PostForm/PostForm.js"],"names":["styles","React","useState","useEffect","Modal","useAppSelector","useAppDispatch","addPostMutation","editUserMutation","useMutation","useQuery","useLazyQuery","currentUserQuery","PostForm","showModal","setShowModal","addPost","editUser","currentUser","state","value","friends","console","log","onSubmit","e","preventDefault","id","variables","userId","post","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","container","createPostContainer","createPost","x_svg","X_SVG","hr","name_and_pic_Container","contentContainer","inputContainer","input","postBtnContainer","postBtn"],"mappings":"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","sourcesContent":["import styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/EditUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\n\nconst PostForm = ({ showModal, setShowModal }) => {\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector((state) => state.currentUser.value);\n  useEffect(() => {\n    if (currentUser.friends) {\n      console.log(\"kkk\", currentUser);\n    }\n  }, [currentUser]);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(typeof currentUser.id);\n    addPost({\n      variables: {\n        userId: currentUser.id,\n        post: \"test 1 from react\",\n      },\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) => console.log(res.data))\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n        console.log(errors);\n      });\n    // editUser({\n    //   variables: {\n    //     id: currentUser.id,\n    //     addPost: friendId,\n    //   },\n    //   refetchQueries: [{ query: currentUserQuery }],\n    //   awaitRefetchQueries: true,\n    // }).catch((err) => {\n    //   const errors = err.graphQLErrors?.map((error) => error.message);\n\n    //   console.log(errors);\n    // });\n  };\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div className={styles.container}>\n        <div className={styles.createPostContainer}>\n          <div className={styles.createPost}>\n            <h2>Create Post</h2>\n            <img className={styles.x_svg} src={X_SVG} alt=\"\" />\n            <hr className={styles.hr} />\n          </div>\n          <div className={styles.name_and_pic_Container}>\n            pic and name here and maybe drop down of friends\n          </div>\n        </div>\n        <form action=\"\" onSubmit={(e) => onSubmit(e)}>\n          <div className={styles.contentContainer}>\n            <div className={styles.inputContainer}>\n              <textarea\n                className={styles.input}\n                placeholder=\"What's on your mind, Omar?\"\n              ></textarea>\n            </div>\n          </div>\n\n          <div className={styles.postBtnContainer}>\n            <button className={styles.postBtn}>Post</button>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}