{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/Info/Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Info.module.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { current } from \"@reduxjs/toolkit\"; // login({\n//   variables: { email: email, password: password },\n//   refetchQueries: [{ query: query }],\n//   awaitRefetchQueries: true,\n// })\n//   .then((e) => (e ? history.push(\"/home\") : null))\n//   .catch((err) => {\n//     const errors = err.graphQLErrors?.map((error) => error.message);\n//     setErrors(errors);\n//     console.log(errors);\n//   });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileInfo = () => {\n  _s();\n\n  const currentUser = useAppSelector(state => state.currentUser);\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(query);\n  const [nameText, setNameText] = useState(\"\");\n  const [emailText, setEmailText] = useState(\"\"); // const [password, setPassword] = useState(currentUser.password);\n\n  const [ageText, setAgeText] = useState(\"\");\n  const [editActive, setEditActive] = useState(\"\"); // const [change, setChange] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n\n  const [editUser] = useMutation(mutation);\n  useEffect(() => {\n    if (data) {\n      const {\n        user2\n      } = data;\n      user2.name === null ? setName(\"\") : setName(user2.name); // user2.name === null ? setNameText(\"\") : setNameText(user2.name);\n\n      user2.email === null ? setEmail(\"\") : setEmail(user2.email); // setEmail(user2.email);\n      // user2.email === null ? setEmailText(\"\") : setEmailText(user2.email);\n\n      user2.age === null ? setAge(0) : setAge(user2.age); // user2.age === null ? setAgeText(0) : setAgeText(user2.age);\n\n      console.log(nameText);\n      console.log(emailText);\n      console.log(ageText);\n    }\n  }, [loading, data, editActive]);\n  /* -------------------------------------------------------------------------- */\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const variables = () => {\n      if (emailText.length >= 1) {\n        return {\n          id: data.user2.id,\n          email: emailText\n        };\n      } else if (ageText > 1) {\n        return {\n          id: data.user2.id,\n          age: ageText\n        };\n      } else if (nameText.length > 0) {\n        return {\n          id: data.user2.id,\n          name: nameText\n        };\n      }\n    };\n\n    editUser({\n      variables: variables(),\n      refetchQueries: [{\n        query: query\n      }],\n      awaitRefetchQueries: true\n    }).then(res => [console.log(\"INFO\", data), setEditActive(null)]).then(res => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")]).catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    });\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  const renderInfoItems = () => {\n    const infoItems2 = [{\n      Name: \"Name\",\n      name: name,\n      setName: setName,\n      nametext: nameText,\n      setNameText: setNameText\n    }, {\n      Email: \"Email\",\n      email: email,\n      setEmail: setEmail,\n      emailText: emailText,\n      setEmailText: setEmailText\n    }, {\n      Age: \"Age\",\n      age: age,\n      setAge: setAge,\n      agetext: ageText,\n      setAgeText: setAgeText\n    }];\n\n    const onTextChange = (e, item) => {\n      if (typeof Object.values(item)[1] === typeof 1) {\n        Object.values(item)[2](Number(e.target.value));\n        Object.values(item)[4](Number(e.target.value));\n        console.log(nameText);\n        console.log(ageText);\n      } else {\n        Object.values(item)[2](e.target.value);\n        Object.values(item)[4](e.target.value);\n        console.log(nameText);\n        console.log(ageText);\n      }\n    };\n\n    return infoItems2.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.infoTopics,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoEdit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: editActive === index ? /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: onSubmit,\n                className: styles.form,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: [Object.values(item)[0], \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: Object.values(item)[1],\n                  className: styles.input,\n                  value: Object.values(item)[3],\n                  onChange: e => onTextChange(e, item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.inputBtnContainer,\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styles.checkBtn,\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styles.xBtn,\n                    onClick: () => setEditActive(\"\"),\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [Object.values(item)[0], \": \", Object.values(item)[1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.editBtn,\n              onClick: () => setEditActive(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), index !== infoItems2.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), data ? renderInfoItems() : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileInfo, \"rbwo/9tLlBH5HUV8NTkif3z5UVw=\", false, function () {\n  return [useAppSelector, useQuery, useMutation];\n});\n\n_c = ProfileInfo;\nexport default ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Profile/Info/Info.js"],"names":["React","useState","useEffect","styles","useMutation","useQuery","mutation","useAppSelector","useAppDispatch","query","current","ProfileInfo","currentUser","state","loading","error","data","nameText","setNameText","emailText","setEmailText","ageText","setAgeText","editActive","setEditActive","name","setName","email","setEmail","age","setAge","editUser","user2","console","log","onSubmit","e","preventDefault","variables","length","id","refetchQueries","awaitRefetchQueries","then","res","catch","err","errors","graphQLErrors","map","message","renderInfoItems","infoItems2","Name","nametext","Email","Age","agetext","onTextChange","item","Object","values","Number","target","value","index","infoTopics","infoEdit","form","input","inputBtnContainer","checkBtn","xBtn","editBtn","line","container","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,sBAA/C;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,WAAW,GAAGL,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAAlC;AACA,MAAI;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACI,KAAD,CAAvC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C,CAJwB,CAKxB;;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C,CAPwB,CAQxB;;AACA;;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC4B,GAAD,EAAMC,MAAN,IAAgB7B,QAAQ,CAAC,EAAD,CAA9B;AAEA;;AACA,QAAM,CAAC8B,QAAD,IAAa3B,WAAW,CAACE,QAAD,CAA9B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,IAAJ,EAAU;AACR,YAAM;AAAEgB,QAAAA;AAAF,UAAYhB,IAAlB;AAEAgB,MAAAA,KAAK,CAACP,IAAN,KAAe,IAAf,GAAsBC,OAAO,CAAC,EAAD,CAA7B,GAAoCA,OAAO,CAACM,KAAK,CAACP,IAAP,CAA3C,CAHQ,CAIR;;AACAO,MAAAA,KAAK,CAACL,KAAN,KAAgB,IAAhB,GAAuBC,QAAQ,CAAC,EAAD,CAA/B,GAAsCA,QAAQ,CAACI,KAAK,CAACL,KAAP,CAA9C,CALQ,CAMR;AACA;;AACAK,MAAAA,KAAK,CAACH,GAAN,KAAc,IAAd,GAAqBC,MAAM,CAAC,CAAD,CAA3B,GAAiCA,MAAM,CAACE,KAAK,CAACH,GAAP,CAAvC,CARQ,CASR;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACD;AACF,GAfQ,EAeN,CAACP,OAAD,EAAUE,IAAV,EAAgBO,UAAhB,CAfM,CAAT;AAiBA;;AACA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,UAAMC,SAAS,GAAG,MAAM;AACtB,UAAInB,SAAS,CAACoB,MAAV,IAAoB,CAAxB,EAA2B;AACzB,eAAO;AAAEC,UAAAA,EAAE,EAAExB,IAAI,CAACgB,KAAL,CAAWQ,EAAjB;AAAqBb,UAAAA,KAAK,EAAER;AAA5B,SAAP;AACD,OAFD,MAEO,IAAIE,OAAO,GAAG,CAAd,EAAiB;AACtB,eAAO;AAAEmB,UAAAA,EAAE,EAAExB,IAAI,CAACgB,KAAL,CAAWQ,EAAjB;AAAqBX,UAAAA,GAAG,EAAER;AAA1B,SAAP;AACD,OAFM,MAEA,IAAIJ,QAAQ,CAACsB,MAAT,GAAkB,CAAtB,EAAyB;AAC9B,eAAO;AAAEC,UAAAA,EAAE,EAAExB,IAAI,CAACgB,KAAL,CAAWQ,EAAjB;AAAqBf,UAAAA,IAAI,EAAER;AAA3B,SAAP;AACD;AACF,KARD;;AAUAc,IAAAA,QAAQ,CAAC;AACPO,MAAAA,SAAS,EAAEA,SAAS,EADb;AAEPG,MAAAA,cAAc,EAAE,CAAC;AAAEhC,QAAAA,KAAK,EAAEA;AAAT,OAAD,CAFT;AAGPiC,MAAAA,mBAAmB,EAAE;AAHd,KAAD,CAAR,CAKGC,IALH,CAKSC,GAAD,IAAS,CAACX,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBlB,IAApB,CAAD,EAA4BQ,aAAa,CAAC,IAAD,CAAzC,CALjB,EAMGmB,IANH,CAMSC,GAAD,IAAS,CAACtB,UAAU,CAAC,EAAD,CAAX,EAAiBF,YAAY,CAAC,EAAD,CAA7B,EAAmCF,WAAW,CAAC,EAAD,CAA9C,CANjB,EAOG2B,KAPH,CAOUC,GAAD,IAAS;AAAA;;AACd,YAAMC,MAAM,yBAAGD,GAAG,CAACE,aAAP,uDAAG,mBAAmBC,GAAnB,CAAwBlC,KAAD,IAAWA,KAAK,CAACmC,OAAxC,CAAf;AAEAjB,MAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACD,KAXH;AAYD,GAzBD;AA0BA;;;AAEA,QAAMI,eAAe,GAAG,MAAM;AAC5B,UAAMC,UAAU,GAAG,CACjB;AACEC,MAAAA,IAAI,EAAE,MADR;AAEE5B,MAAAA,IAAI,EAAEA,IAFR;AAGEC,MAAAA,OAAO,EAAEA,OAHX;AAIE4B,MAAAA,QAAQ,EAAErC,QAJZ;AAKEC,MAAAA,WAAW,EAAEA;AALf,KADiB,EAQjB;AACEqC,MAAAA,KAAK,EAAE,OADT;AAEE5B,MAAAA,KAAK,EAAEA,KAFT;AAGEC,MAAAA,QAAQ,EAAEA,QAHZ;AAIET,MAAAA,SAAS,EAAEA,SAJb;AAKEC,MAAAA,YAAY,EAAEA;AALhB,KARiB,EAejB;AACEoC,MAAAA,GAAG,EAAE,KADP;AAEE3B,MAAAA,GAAG,EAAEA,GAFP;AAGEC,MAAAA,MAAM,EAAEA,MAHV;AAIE2B,MAAAA,OAAO,EAAEpC,OAJX;AAKEC,MAAAA,UAAU,EAAEA;AALd,KAfiB,CAAnB;;AAuBA,UAAMoC,YAAY,GAAG,CAACtB,CAAD,EAAIuB,IAAJ,KAAa;AAChC,UAAI,OAAOC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CAAP,KAAkC,OAAO,CAA7C,EAAgD;AAC9CC,QAAAA,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,EAAuBG,MAAM,CAAC1B,CAAC,CAAC2B,MAAF,CAASC,KAAV,CAA7B;AACAJ,QAAAA,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,EAAuBG,MAAM,CAAC1B,CAAC,CAAC2B,MAAF,CAASC,KAAV,CAA7B;AACA/B,QAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACD,OALD,MAKO;AACLuC,QAAAA,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,EAAuBvB,CAAC,CAAC2B,MAAF,CAASC,KAAhC;AACAJ,QAAAA,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,EAAuBvB,CAAC,CAAC2B,MAAF,CAASC,KAAhC;AACA/B,QAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACD;AACF,KAZD;;AAcA,WAAO+B,UAAU,CAACH,GAAX,CAAe,CAACU,IAAD,EAAOM,KAAP,KAAiB;AACrC,0BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE9D,MAAM,CAAC+D,UAAvB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAE/D,MAAM,CAACgE,QAAvB;AAAA,oCACE;AAAA,wBACG5C,UAAU,KAAK0C,KAAf,gBACC;AAAM,gBAAA,QAAQ,EAAE9B,QAAhB;AAA0B,gBAAA,SAAS,EAAEhC,MAAM,CAACiE,IAA5C;AAAA,wCACE;AAAA,6BAAKR,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CADf;AAEE,kBAAA,SAAS,EAAExD,MAAM,CAACkE,KAFpB;AAGE,kBAAA,KAAK,EAAET,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CAHT;AAIE,kBAAA,QAAQ,EAAGvB,CAAD,IAAOsB,YAAY,CAACtB,CAAD,EAAIuB,IAAJ;AAJ/B;AAAA;AAAA;AAAA;AAAA,wBAFF,eAQE;AAAK,kBAAA,SAAS,EAAExD,MAAM,CAACmE,iBAAvB;AAAA,0CACE;AAAQ,oBAAA,SAAS,EAAEnE,MAAM,CAACoE,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AACE,oBAAA,SAAS,EAAEpE,MAAM,CAACqE,IADpB;AAEE,oBAAA,OAAO,EAAE,MAAMhD,aAAa,CAAC,EAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,gBAoBC;AAAA,2BACGoC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CADH,QAC6BC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,oBADF,eA2BE;AACE,cAAA,SAAS,EAAExD,MAAM,CAACsE,OADpB;AAEE,cAAA,OAAO,EAAE,MAAMjD,aAAa,CAACyC,KAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAqCGA,KAAK,KAAKb,UAAU,CAACb,MAAX,GAAoB,CAA9B,gBACC;AAAK,UAAA,SAAS,EAAEpC,MAAM,CAACuE;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADD,GAEG,IAvCN;AAAA,SAAUT,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AA2CD,KA5CM,CAAP;AA6CD,GAnFD;AAoFA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAE9D,MAAM,CAACwE,SAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAExE,MAAM,CAACyE,KAAvB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEzE,MAAM,CAACuE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKG1D,IAAI,GAAGmC,eAAe,EAAlB,GAAuB,IAL9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5JD;;GAAMxC,W;UACgBJ,c,EACWF,Q,EAaZD,W;;;KAffO,W;AA8JN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Info.module.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport query from \"../../../GQL/queries/CurrentUser\";\nimport { current } from \"@reduxjs/toolkit\";\n\n// login({\n//   variables: { email: email, password: password },\n//   refetchQueries: [{ query: query }],\n//   awaitRefetchQueries: true,\n// })\n//   .then((e) => (e ? history.push(\"/home\") : null))\n//   .catch((err) => {\n//     const errors = err.graphQLErrors?.map((error) => error.message);\n//     setErrors(errors);\n//     console.log(errors);\n//   });\n\nconst ProfileInfo = () => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let { loading, error, data } = useQuery(query);\n  const [nameText, setNameText] = useState(\"\");\n  const [emailText, setEmailText] = useState(\"\");\n  // const [password, setPassword] = useState(currentUser.password);\n  const [ageText, setAgeText] = useState(\"\");\n  const [editActive, setEditActive] = useState(\"\");\n  // const [change, setChange] = useState(false);\n  /* -------------------------------------------------------------------------- */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  const [editUser] = useMutation(mutation);\n  useEffect(() => {\n    if (data) {\n      const { user2 } = data;\n\n      user2.name === null ? setName(\"\") : setName(user2.name);\n      // user2.name === null ? setNameText(\"\") : setNameText(user2.name);\n      user2.email === null ? setEmail(\"\") : setEmail(user2.email);\n      // setEmail(user2.email);\n      // user2.email === null ? setEmailText(\"\") : setEmailText(user2.email);\n      user2.age === null ? setAge(0) : setAge(user2.age);\n      // user2.age === null ? setAgeText(0) : setAgeText(user2.age);\n      console.log(nameText);\n      console.log(emailText);\n      console.log(ageText);\n    }\n  }, [loading, data, editActive]);\n\n  /* -------------------------------------------------------------------------- */\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const variables = () => {\n      if (emailText.length >= 1) {\n        return { id: data.user2.id, email: emailText };\n      } else if (ageText > 1) {\n        return { id: data.user2.id, age: ageText };\n      } else if (nameText.length > 0) {\n        return { id: data.user2.id, name: nameText };\n      }\n    };\n\n    editUser({\n      variables: variables(),\n      refetchQueries: [{ query: query }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) => [console.log(\"INFO\", data), setEditActive(null)])\n      .then((res) => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n\n        console.log(errors);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n\n  const renderInfoItems = () => {\n    const infoItems2 = [\n      {\n        Name: \"Name\",\n        name: name,\n        setName: setName,\n        nametext: nameText,\n        setNameText: setNameText,\n      },\n      {\n        Email: \"Email\",\n        email: email,\n        setEmail: setEmail,\n        emailText: emailText,\n        setEmailText: setEmailText,\n      },\n      {\n        Age: \"Age\",\n        age: age,\n        setAge: setAge,\n        agetext: ageText,\n        setAgeText: setAgeText,\n      },\n    ];\n    const onTextChange = (e, item) => {\n      if (typeof Object.values(item)[1] === typeof 1) {\n        Object.values(item)[2](Number(e.target.value));\n        Object.values(item)[4](Number(e.target.value));\n        console.log(nameText);\n        console.log(ageText);\n      } else {\n        Object.values(item)[2](e.target.value);\n        Object.values(item)[4](e.target.value);\n        console.log(nameText);\n        console.log(ageText);\n      }\n    };\n\n    return infoItems2.map((item, index) => {\n      return (\n        <div key={index}>\n          <div className={styles.infoTopics}>\n            <div className={styles.infoEdit}>\n              <div>\n                {editActive === index ? (\n                  <form onSubmit={onSubmit} className={styles.form}>\n                    <h1>{Object.values(item)[0]}:</h1>\n                    <input\n                      placeholder={Object.values(item)[1]}\n                      className={styles.input}\n                      value={Object.values(item)[3]}\n                      onChange={(e) => onTextChange(e, item)}\n                    />\n                    <div className={styles.inputBtnContainer}>\n                      <button className={styles.checkBtn}>&#10003;</button>\n                      <button\n                        className={styles.xBtn}\n                        onClick={() => setEditActive(\"\")}\n                      >\n                        X\n                      </button>\n                    </div>\n                  </form>\n                ) : (\n                  <h1>\n                    {Object.values(item)[0]}: {Object.values(item)[1]}\n                  </h1>\n                )}\n              </div>\n              <button\n                className={styles.editBtn}\n                onClick={() => setEditActive(index)}\n              >\n                Edit\n              </button>\n            </div>\n          </div>\n          {index !== infoItems2.length - 1 ? (\n            <div className={styles.line}></div>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        <h1>Info</h1>\n      </div>\n      <div className={styles.line}></div>\n      {data ? renderInfoItems() : null}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n"]},"metadata":{},"sourceType":"module"}