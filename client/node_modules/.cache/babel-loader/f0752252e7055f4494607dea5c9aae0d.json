{"ast":null,"code":"import _slicedToArray from\"/Users/omarragab/Documents/test/launchFeb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import styles from\"./RoomList.module.css\";import useChatRoom from\"../useChatRoom\";import{useAppSelector,useAppDispatch}from\"../../../redux/hooks\";import{setRoom}from\"../../../redux/features/roomSlice\";import useMessages from\"../useMessages\";import FadeIn from\"react-fade-in\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RoomsList=function RoomsList(_ref){var currentFriend=_ref.currentFriend,setCurrentFriend=_ref.setCurrentFriend,chooseRoomPage=_ref.chooseRoomPage,setChooseRoomPage=_ref.setChooseRoomPage;var currentUser=useAppSelector(function(state){return state.currentUser;});var onlineUsers=useAppSelector(function(state){return state.onlineUsers.value;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),activeConversations=_useState2[0],setActiveConversations=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),roomChange=_useState4[0],setRoomChange=_useState4[1];var _useMessages=useMessages(),getCurrentFriendMessages=_useMessages.getCurrentFriendMessages,selectedFriend=_useMessages.selectedFriend,setSelectedFriend=_useMessages.setSelectedFriend;/* -------------------------------------------------------------------------- */var room=useAppSelector(function(state){return state.currentRoom.value;});/* -------------------------------------------------------------------------- */var dispatch=useAppDispatch();var _useChatRoom=useChatRoom(room),combineAddresses=_useChatRoom.combineAddresses,setConversationId=_useChatRoom.setConversationId;/* -------------------------------------------------------------------------- */ /* -------------------------------------------------------------------------- */useEffect(function(){if(currentUser){setActiveConversations(currentUser.conversations);}if(selectedFriend){getCurrentFriendMessages();}},[currentUser]);/* -------------------------------------------------------------------------- */var setRoom_setConvoId_getMessages=function setRoom_setConvoId_getMessages(personId,index){var hash=combineAddresses(currentUser.id,personId);console.log(hash);return[dispatch(setRoom(hash)),console.log(hash),setSelectedFriend(index),setConversationId(hash),getCurrentFriendMessages()];};var renderRooms=function renderRooms(){return activeConversations.map(function(person,index){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.room,\" \").concat(selectedFriend===index?styles.selectedRoom:null),onClick:function onClick(){return[setChooseRoomPage(false),setRoom_setConvoId_getMessages(person.id,index),/* ----------------------------- change to name ----------------------------- */setCurrentFriend(person),/* -------------------------------------------------------------------------- */setRoomChange(!roomChange)];},children:/*#__PURE__*/_jsxs(\"div\",{className:styles.profilePicNameContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.roomProfilePicContainer,children:person.profilePic?/*#__PURE__*/_jsx(\"img\",{className:styles.roomProfilePic,src:person.profilePic,alt:\"\"}):/*#__PURE__*/_jsx(\"img\",{className:styles.roomProfilePic,src:\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\",alt:\"\"})}),onlineUsers.includes(person.id)?/*#__PURE__*/_jsx(\"div\",{className:styles.online}):/*#__PURE__*/_jsx(\"div\",{className:styles.offline}),/*#__PURE__*/_jsx(\"h1\",{children:person.email})]})},index);});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:/*#__PURE__*/_jsx(\"h2\",{style:{marginBottom:\"0px\",marginTop:\"0px\"},children:\"Join Room\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.roomListContainer,children:activeConversations.length>0?/*#__PURE__*/_jsx(FadeIn,{children:renderRooms()}):null})]});};export default RoomsList;","map":{"version":3,"sources":["/Users/omarragab/Documents/test/launchFeb/client/src/components/CHAT/RoomsList/RoomsList.js"],"names":["React","useState","useEffect","styles","useChatRoom","useAppSelector","useAppDispatch","setRoom","useMessages","FadeIn","RoomsList","currentFriend","setCurrentFriend","chooseRoomPage","setChooseRoomPage","currentUser","state","onlineUsers","value","activeConversations","setActiveConversations","roomChange","setRoomChange","getCurrentFriendMessages","selectedFriend","setSelectedFriend","room","currentRoom","dispatch","combineAddresses","setConversationId","conversations","setRoom_setConvoId_getMessages","personId","index","hash","id","console","log","renderRooms","map","person","selectedRoom","profilePicNameContainer","roomProfilePicContainer","profilePic","roomProfilePic","includes","online","offline","email","container","title","marginBottom","marginTop","roomListContainer","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./RoomList.module.css\";\nimport useChatRoom from \"../useChatRoom\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { setRoom } from \"../../../redux/features/roomSlice\";\nimport useMessages from \"../useMessages\";\nimport FadeIn from \"react-fade-in\";\n\nconst RoomsList = ({\n  currentFriend,\n  setCurrentFriend,\n  chooseRoomPage,\n  setChooseRoomPage,\n}) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const onlineUsers = useAppSelector((state) => state.onlineUsers.value);\n  const [activeConversations, setActiveConversations] = useState([]);\n  const [roomChange, setRoomChange] = useState(false);\n  const { getCurrentFriendMessages, selectedFriend, setSelectedFriend } =\n    useMessages();\n  /* -------------------------------------------------------------------------- */\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useAppDispatch();\n  const { combineAddresses, setConversationId } = useChatRoom(room);\n  /* -------------------------------------------------------------------------- */\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    if (currentUser) {\n      setActiveConversations(currentUser.conversations);\n    }\n    if (selectedFriend) {\n      getCurrentFriendMessages();\n    }\n  }, [currentUser]);\n\n  /* -------------------------------------------------------------------------- */\n  const setRoom_setConvoId_getMessages = (personId, index) => {\n    const hash = combineAddresses(currentUser.id, personId);\n    console.log(hash);\n    return [\n      dispatch(setRoom(hash)),\n      console.log(hash),\n      setSelectedFriend(index),\n      setConversationId(hash),\n      getCurrentFriendMessages(),\n    ];\n  };\n\n  const renderRooms = () => {\n    return activeConversations.map((person, index) => {\n      return (\n        <div\n          className={`${styles.room} ${\n            selectedFriend === index ? styles.selectedRoom : null\n          }`}\n          onClick={() => [\n            setChooseRoomPage(false),\n            setRoom_setConvoId_getMessages(person.id, index),\n            /* ----------------------------- change to name ----------------------------- */\n            setCurrentFriend(person),\n            /* -------------------------------------------------------------------------- */\n            setRoomChange(!roomChange),\n          ]}\n          key={index}\n        >\n          <div className={styles.profilePicNameContainer}>\n            <div className={styles.roomProfilePicContainer}>\n              {person.profilePic ? (\n                <img\n                  className={styles.roomProfilePic}\n                  src={person.profilePic}\n                  alt=\"\"\n                />\n              ) : (\n                <img\n                  className={styles.roomProfilePic}\n                  src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                  alt=\"\"\n                />\n              )}\n            </div>\n            {onlineUsers.includes(person.id) ? (\n              <div className={styles.online}></div>\n            ) : (\n              <div className={styles.offline}></div>\n            )}\n            <h1>{person.email}</h1>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        <h2 style={{ marginBottom: \"0px\", marginTop: \"0px\" }}>Join Room</h2>\n      </div>\n\n      <div className={styles.roomListContainer}>\n        {/* ------------------------ add message if not chats ------------------------ */}\n        {activeConversations.length > 0 ? (\n          <FadeIn>{renderRooms()}</FadeIn>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomsList;\n"]},"metadata":{},"sourceType":"module"}