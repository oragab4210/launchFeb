{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/CHAT/ChatBox/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./ChatBox.module.css\";\nimport axios from \"axios\";\nimport useChatRoom from \"../useChatRoom\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport useMessages from \"../useMessages\"; // import bcrypt from \"bcrypt\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  // const room = useAppSelector((state) => state.currentRoom.value);\n\n  /* -------------------------------------------------------------------------- */\n  const {\n    messageList,\n    addMessage\n  } = useMessages();\n  const {\n    messages,\n    sendMessage\n  } = useChatRoom(messageList); // const [messages, setMessages] = useState([]);\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [roomText, setRoomText] = useState(\"\");\n  const messageRef = useRef();\n\n  const renderMessages = () => {\n    return messages.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`,\n        children: msg.body\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    } // addMessage()\n\n\n    console.log(\"hi\"); //   setMessages([...messages, newMessage]);\n\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  // allow scrolling to the bottom of the container when a new message arrived.\n\n\n  useEffect(() => messageRef.current.scrollIntoView({\n    behavior: \"smooth\"\n  }));\n  /* -------------------------------- Set Room -------------------------------- */\n\n  const setRoom1 = (address1, address2) => {\n    const user1 = [];\n    const user2 = [];\n\n    const makeUnique = (address, userArray) => {\n      for (let i in address) {\n        const letter = address[i];\n        console.log(letter, \"index:\" + i);\n        userArray.push(letter);\n      }\n    };\n\n    makeUnique(address1, user1);\n    makeUnique(address2, user2);\n    user1.push(...user2);\n    const combinedAddresses = user1;\n    console.log(user1);\n    const sorted = combinedAddresses.sort();\n    const room = sorted.join(\"\");\n    console.log(room);\n    return room; // const saltRounds = 10;\n    // const password = \"omar\";\n    // let hashValue;\n    // bcrypt.hash(password, saltRounds, function (err, hash) {\n    //   hashValue = hash;\n    //   console.log(hash);\n    // });\n    // bcrypt.compare(\"hi\", hashValue, function (err, result) {\n    //   console.log(result);\n    // });\n    // const sorted = stuff.split(\"\").sort();\n    // console.log(sorted);\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  const hi = e => {\n    e.preventDefault(); // setRoom2(roomText);\n    // setRoomText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.hi,\n        children: [renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatActions,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Start Chatting\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"8wLsEyPhZ15lvTVYiBy+amVaK0I=\", false, function () {\n  return [useMessages, useChatRoom];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/CHAT/ChatBox/Chat.js"],"names":["React","useState","useEffect","useRef","styles","axios","useChatRoom","useAppSelector","useAppDispatch","useMessages","Chat","messageList","addMessage","messages","sendMessage","newMessage","setNewMessage","roomText","setRoomText","messageRef","renderMessages","map","msg","index","isOwner","blue","red","body","onSubmit","e","preventDefault","console","log","current","scrollIntoView","behavior","setRoom1","address1","address2","user1","user2","makeUnique","address","userArray","i","letter","push","combinedAddresses","sorted","sort","room","join","hi","chatContainer","chatActions","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./ChatBox.module.css\";\nimport axios from \"axios\";\nimport useChatRoom from \"../useChatRoom\";\n\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport useMessages from \"../useMessages\";\n// import bcrypt from \"bcrypt\";\n\nconst Chat = () => {\n  // const room = useAppSelector((state) => state.currentRoom.value);\n  /* -------------------------------------------------------------------------- */\n  const { messageList, addMessage } = useMessages();\n  const { messages, sendMessage } = useChatRoom(messageList);\n  // const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [roomText, setRoomText] = useState(\"\");\n\n  const messageRef = useRef();\n\n  const renderMessages = () => {\n    return messages.map((msg, index) => {\n      return (\n        <p\n          key={index}\n          className={`${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`}\n        >\n          {msg.body}\n        </p>\n      );\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    }\n    // addMessage()\n    console.log(\"hi\");\n    //   setMessages([...messages, newMessage]);\n    setNewMessage(\"\");\n  };\n\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  // allow scrolling to the bottom of the container when a new message arrived.\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  /* -------------------------------- Set Room -------------------------------- */\n  const setRoom1 = (address1, address2) => {\n    const user1 = [];\n    const user2 = [];\n    const makeUnique = (address, userArray) => {\n      for (let i in address) {\n        const letter = address[i];\n        console.log(letter, \"index:\" + i);\n        userArray.push(letter);\n      }\n    };\n    makeUnique(address1, user1);\n    makeUnique(address2, user2);\n    user1.push(...user2);\n    const combinedAddresses = user1;\n    console.log(user1);\n    const sorted = combinedAddresses.sort();\n    const room = sorted.join(\"\");\n    console.log(room);\n    return room;\n    // const saltRounds = 10;\n    // const password = \"omar\";\n    // let hashValue;\n    // bcrypt.hash(password, saltRounds, function (err, hash) {\n    //   hashValue = hash;\n    //   console.log(hash);\n    // });\n    // bcrypt.compare(\"hi\", hashValue, function (err, result) {\n    //   console.log(result);\n    // });\n\n    // const sorted = stuff.split(\"\").sort();\n    // console.log(sorted);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  const hi = (e) => {\n    e.preventDefault();\n    // setRoom2(roomText);\n    // setRoomText(\"\");\n  };\n  return (\n    <div>\n      <div className={styles.chatContainer}>\n        <div className={styles.hi}>\n          {renderMessages()}\n          <div ref={messageRef}></div>\n        </div>\n\n        <div className={styles.chatActions}>\n          <form action=\"\" onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Start Chatting\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n            />\n            <button>Send</button>\n          </form>\n        </div>\n      </div>\n\n      {/* <h1>{setRoomExample(setRoom(\"12xyz34\", \"56abc78\"))}</h1> */}\n      {/* {setRoom1(\"yellow\")} */}\n\n      {/* <h1>{setRoom(\"56abc78\", \"12xyz34\")}</h1> */}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}