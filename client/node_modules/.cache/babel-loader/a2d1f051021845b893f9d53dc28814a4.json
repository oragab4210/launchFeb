{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport getUsers from \"../../../GQL/queries/getUsers\";\nimport styles from \"./AddFriends.module.css\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFriends = _ref => {\n  _s();\n\n  let {\n    setFriendListOpen,\n    friendListOpen\n  } = _ref;\n  const currentUser = useAppSelector(state => state.currentUser);\n  let {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(getUsers);\n  const [editUser] = useMutation(mutation);\n  const [friends, setFriends] = useState([]);\n  const [searchBarText, setSearchBarText] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    refetch();\n  }, []);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        setFriends([...friends, friend.id]);\n      }\n\n      return null;\n    });\n  }, [currentUser]);\n\n  const addFriend = async friendId => {\n    const friendIdList = [];\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        friendIdList.push(friend.id);\n      }\n\n      return null;\n    });\n    console.log(currentUser.friends);\n    const friend = friendIdList.includes(friendId);\n    const me = friendIdList.includes(currentUser.id);\n    console.log(\"friend\", friend);\n    console.log(\"me\", me);\n    console.log(currentUser.friends.id);\n\n    if (friends) {\n      if (friend) {\n        console.log(\"HELLLOOOOO\");\n        console.log(\"already a friend\");\n        return false;\n      } else {\n        editUser({\n          variables: {\n            id: currentUser.id,\n            addFriend: friendId\n          },\n          refetchQueries: [{\n            query: currentUserQuery\n          }],\n          awaitRefetchQueries: true\n        }).catch(err => {\n          var _err$graphQLErrors;\n\n          const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n          console.log(errors);\n        });\n      }\n    }\n  };\n\n  const renderAvaliableUsers = () => {\n    console.log(\"USERS\", data.users);\n    const noCurrentUserArray = data.users.filter(user => user.id !== currentUser.id);\n    /* -------------------------------------------------------------------------- */\n    // const noCurrentUserArray1 = noCurrentUserArray.filter(\n    //   (user) => user.id !== currentUser.id\n    // );\n\n    const hi = noCurrentUserArray.find(item => item.id === currentUser.id);\n    console.log(\"ffff\", hi);\n    /* -------------------------------------------------------------------------- */\n    // const filteredUser = finalArray.filter((user) =>\n    //   user.email.startswith(searchBarText)\n    // );\n\n    const avaliableUsers = noCurrentUserArray.map((user, index) => {\n      // if (user.email.startswith(searchBarText)) {\n      if (user.email.startsWith(searchBarText)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.nameEmailContainer,\n              children: [user.profilePic ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.userProfilePic,\n                src: user.profilePic,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.userProfilePic,\n                src: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: styles.name,\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: styles.email,\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.buttonContainer,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.addFriendButton0,\n                children: false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addFriend(user.id),\n                  className: styles.addFriendButton,\n                  children: \"Add Friend\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  // onClick={() => addFriend(user.id)}\n                  className: styles.addFriendButton,\n                  children: \"Added \\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return avaliableUsers;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seachContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.backArrowContainer,\n        onClick: () => setFriendListOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Find Friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.backArrow,\n          children: \" \\u21A9 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchBarText,\n        onChange: e => setSearchBarText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsListContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paddingBottomWorkingPlaceHolder,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cardsListContainerCenter,\n          children: data ? renderAvaliableUsers() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddFriends, \"oAnPTlFcTtCZh4tmUCoT1AsAjHA=\", false, function () {\n  return [useAppSelector, useQuery, useMutation];\n});\n\n_c = AddFriends;\nexport default AddFriends;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFriends\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js"],"names":["React","useEffect","useState","useMutation","useQuery","useLazyQuery","getUsers","styles","mutation","currentUserQuery","useAppSelector","useAppDispatch","AddFriends","setFriendListOpen","friendListOpen","currentUser","state","loading","error","data","refetch","editUser","friends","setFriends","searchBarText","setSearchBarText","map","friend","index","id","addFriend","friendId","friendIdList","push","console","log","includes","me","variables","refetchQueries","query","awaitRefetchQueries","catch","err","errors","graphQLErrors","message","renderAvaliableUsers","users","noCurrentUserArray","filter","user","hi","find","item","avaliableUsers","email","startsWith","userCard","nameEmailContainer","profilePic","userProfilePic","name","buttonContainer","addFriendButton0","addFriendButton","container","seachContainer","backArrowContainer","backArrow","e","target","value","cardsListContainer","paddingBottomWorkingPlaceHolder","cardsListContainerCenter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport getUsers from \"../../../GQL/queries/getUsers\";\nimport styles from \"./AddFriends.module.css\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst AddFriends = ({ setFriendListOpen, friendListOpen }) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let { loading, error, data, refetch } = useQuery(getUsers);\n  const [editUser] = useMutation(mutation);\n  const [friends, setFriends] = useState([]);\n  const [searchBarText, setSearchBarText] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        setFriends([...friends, friend.id]);\n      }\n      return null;\n    });\n  }, [currentUser]);\n\n  const addFriend = async (friendId) => {\n    const friendIdList = [];\n\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        friendIdList.push(friend.id);\n      }\n      return null;\n    });\n\n    console.log(currentUser.friends);\n    const friend = friendIdList.includes(friendId);\n    const me = friendIdList.includes(currentUser.id);\n    console.log(\"friend\", friend);\n    console.log(\"me\", me);\n    console.log(currentUser.friends.id);\n    if (friends) {\n      if (friend) {\n        console.log(\"HELLLOOOOO\");\n        console.log(\"already a friend\");\n        return false;\n      } else {\n        editUser({\n          variables: {\n            id: currentUser.id,\n            addFriend: friendId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        });\n      }\n    }\n  };\n\n  const renderAvaliableUsers = () => {\n    console.log(\"USERS\", data.users);\n    const noCurrentUserArray = data.users.filter(\n      (user) => user.id !== currentUser.id\n    );\n\n    /* -------------------------------------------------------------------------- */\n    // const noCurrentUserArray1 = noCurrentUserArray.filter(\n    //   (user) => user.id !== currentUser.id\n    // );\n    const hi = noCurrentUserArray.find((item) => item.id === currentUser.id);\n    console.log(\"ffff\", hi);\n    /* -------------------------------------------------------------------------- */\n\n    // const filteredUser = finalArray.filter((user) =>\n    //   user.email.startswith(searchBarText)\n    // );\n    const avaliableUsers = noCurrentUserArray.map((user, index) => {\n      // if (user.email.startswith(searchBarText)) {\n      if (user.email.startsWith(searchBarText)) {\n        return (\n          <div>\n            <div key={index} className={styles.userCard}>\n              <div className={styles.nameEmailContainer}>\n                {user.profilePic ? (\n                  <img\n                    className={styles.userProfilePic}\n                    src={user.profilePic}\n                    alt=\"\"\n                  />\n                ) : (\n                  <img\n                    className={styles.userProfilePic}\n                    src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                    alt=\"\"\n                  />\n                )}\n                <h2 className={styles.name}>{user.name}</h2>\n                <h4 className={styles.email}>{user.email}</h4>\n              </div>\n              <div className={styles.buttonContainer}>\n                <div className={styles.addFriendButton0}>\n                  {false ? (\n                    <button\n                      onClick={() => addFriend(user.id)}\n                      className={styles.addFriendButton}\n                    >\n                      Add Friend\n                    </button>\n                  ) : (\n                    <button\n                      // onClick={() => addFriend(user.id)}\n                      className={styles.addFriendButton}\n                    >\n                      Added &#10003;\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    });\n    return avaliableUsers;\n  };\n  return (\n    <div className={styles.container}>\n      {/* -------------------------------------------------------------------------- */}\n      <div className={styles.seachContainer}>\n        <div\n          className={styles.backArrowContainer}\n          onClick={() => setFriendListOpen(true)}\n        >\n          <p>Find Friends</p>\n          <span className={styles.backArrow}> &#x21A9; </span>\n        </div>\n        <h3>Search Users</h3>\n        <input\n          type=\"text\"\n          value={searchBarText}\n          onChange={(e) => setSearchBarText(e.target.value)}\n        />\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n      <div className={styles.cardsListContainer}>\n        <div className={styles.paddingBottomWorkingPlaceHolder}>\n          <div className={styles.cardsListContainerCenter}>\n            {data ? renderAvaliableUsers() : null}\n          </div>\n        </div>\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n    </div>\n  );\n};\n\nexport default AddFriends;\n"]},"metadata":{},"sourceType":"module"}