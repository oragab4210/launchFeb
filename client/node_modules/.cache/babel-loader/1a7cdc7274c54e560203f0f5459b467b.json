{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/MakePost/MakePost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./MakePost.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakePost = () => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(getCurrentUser);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    if (data) {\n      const user = data.user2;\n      setUser(user);\n      console.log(user);\n    }\n  }, [data]);\n  /* -------------------------------------------------------------------------- */\n\n  const onSubmit = e => {\n    e.preventDefault();\n    editUser({\n      variables: {\n        id: user.id,\n        addPost: {\n          post: \"post number 2\"\n        }\n      },\n      refetchQueries: [{\n        query: getCurrentUser\n      }],\n      awaitRefetchQueries: true\n    }).then(res => console.log(\"yayy\")) //   .then((res) => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")])\n    .catch(err => {\n      var _err$graphQLErrors;\n\n      const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n      console.log(errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MakePost, \"2m6rR3aqpdWh2S7EM3ZYspOxJHA=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = MakePost;\nexport default MakePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakePost\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/MakePost/MakePost.js"],"names":["styles","React","useState","useEffect","useMutation","useQuery","mutation","getCurrentUser","MakePost","loading","error","data","editUser","user","setUser","text","setText","user2","console","log","onSubmit","e","preventDefault","variables","id","addPost","post","refetchQueries","query","awaitRefetchQueries","then","res","catch","err","errors","graphQLErrors","map","message","container","target","value"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,cAAD,CAAvC;AACA,QAAM,CAACK,QAAD,IAAaR,WAAW,CAACE,QAAD,CAA9B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACR,YAAME,IAAI,GAAGF,IAAI,CAACM,KAAlB;AACAH,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;AACF,GANQ,EAMN,CAACF,IAAD,CANM,CAAT;AAQA;;AACA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEAV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEX,IAAI,CAACW,EAAX;AAAeC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAAxB,OADJ;AAEPC,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAErB;AAAT,OAAD,CAFT;AAGPsB,MAAAA,mBAAmB,EAAE;AAHd,KAAD,CAAR,CAKGC,IALH,CAKSC,GAAD,IAASb,OAAO,CAACC,GAAR,CAAY,MAAZ,CALjB,EAME;AANF,KAOGa,KAPH,CAOUC,GAAD,IAAS;AAAA;;AACd,YAAMC,MAAM,yBAAGD,GAAG,CAACE,aAAP,uDAAG,mBAAmBC,GAAnB,CAAwB1B,KAAD,IAAWA,KAAK,CAAC2B,OAAxC,CAAf;AAEAnB,MAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACD,KAXH;AAYD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAElC,MAAM,CAACsC,SAAvB;AAAA,2BACE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAElB,QAA1B;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,EAFP;AAGE,QAAA,EAAE,EAAC,EAHL;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACkB,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7CD;;GAAMhC,Q;UAC2BH,Q,EACZD,W;;;KAFfI,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import styles from \"./MakePost.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\n\nconst MakePost = () => {\n  let { loading, error, data } = useQuery(getCurrentUser);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    if (data) {\n      const user = data.user2;\n      setUser(user);\n      console.log(user);\n    }\n  }, [data]);\n\n  /* -------------------------------------------------------------------------- */\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    editUser({\n      variables: { id: user.id, addPost: { post: \"post number 2\" } },\n      refetchQueries: [{ query: getCurrentUser }],\n      awaitRefetchQueries: true,\n    })\n      .then((res) => console.log(\"yayy\"))\n      //   .then((res) => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")])\n      .catch((err) => {\n        const errors = err.graphQLErrors?.map((error) => error.message);\n\n        console.log(errors);\n      });\n  };\n\n  return (\n    <div className={styles.container}>\n      <form action=\"\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button> hi</button>\n      </form>\n    </div>\n  );\n};\n\nexport default MakePost;\n"]},"metadata":{},"sourceType":"module"}