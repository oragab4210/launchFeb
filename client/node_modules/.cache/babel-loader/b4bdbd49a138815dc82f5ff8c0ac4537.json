{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n/* -------------------------------------------------------------------------- */\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n/* -------------------------------------------------------------------------- */\n\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { persistCache, LocalStorageWrapper } from \"apollo3-cache-persist\";\nimport CurrentUser from \"./GQL/queries/CurrentUser\";\nimport setUser from \"./GQL/queries/setUser\";\n/* -------------------------------------------------------------------------- */\n\n/* -------------------------------------------------------------------------- */\n// const cache = new InMemoryCache();\n// const init = async () => {\n//   await persistCache({\n//     cache,\n//     storage: window.localStorage,\n//   });\n// };\n// const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: cache,\n//   connectToDevTools: true,\n// });\n// try {\n//   cache.readQuery({\n//     query: setUser,\n//   });\n// } catch (error) {\n//   cache.writeData({\n//     data: {\n//       user: [],\n//     },\n//   });\n// }\n\n/* -------------------------------------------------------------------------- */\n\n/* -------------------------------------------------------------------------- */\n// const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n\n/* -------------------------------------------------------------------------- */\n\n/* -------------------------------------------------------------------------- */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrender( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // init();","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/index.js"],"names":["React","render","Provider","store","App","ApolloClient","ApolloProvider","InMemoryCache","HttpLink","persistCache","LocalStorageWrapper","CurrentUser","setUser","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,aAAP;AACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA;;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,QAJF,QAKO,gBALP;AAMA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,uBAAlD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;;;AAEAX,MAAM,eACJ,QAAC,KAAD,CAAO,UAAP;AAAA,yBAGE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,QADI,EAQJY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARI,CAAN,C,CAUA","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n/* -------------------------------------------------------------------------- */\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n/* -------------------------------------------------------------------------- */\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n} from \"@apollo/client\";\nimport { persistCache, LocalStorageWrapper } from \"apollo3-cache-persist\";\nimport CurrentUser from \"./GQL/queries/CurrentUser\";\nimport setUser from \"./GQL/queries/setUser\";\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n// const cache = new InMemoryCache();\n// const init = async () => {\n//   await persistCache({\n//     cache,\n//     storage: window.localStorage,\n//   });\n// };\n\n// const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: cache,\n//   connectToDevTools: true,\n// });\n// try {\n//   cache.readQuery({\n//     query: setUser,\n//   });\n// } catch (error) {\n//   cache.writeData({\n//     data: {\n//       user: [],\n//     },\n//   });\n// }\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n// const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n\nrender(\n  <React.StrictMode>\n    {/* <ApolloProvider client={client}> */}\n    {/* <Provider store={store}> */}\n    <App />\n    {/* </Provider> */}\n    {/* </ApolloProvider> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// init();\n"]},"metadata":{},"sourceType":"module"}