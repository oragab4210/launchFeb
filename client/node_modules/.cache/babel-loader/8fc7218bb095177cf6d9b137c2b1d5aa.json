{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport getUsers from \"../../../GQL/queries/getUsers\";\nimport styles from \"./AddFriends.module.css\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFriends = () => {\n  _s();\n\n  const currentUser = useAppSelector(state => state.currentUser);\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(getUsers);\n  let {\n    loading: currentUserLoading,\n    errorcurrentUserError,\n    data: currentUserData\n  } = useQuery(currentUserQuery);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    if (data) {}\n\n    if (currentUserData) {\n      setFriends([]);\n      const currentUser = currentUserData.user2;\n      setUser(currentUser);\n      currentUser.friends.map((friend, index) => {\n        if (friend.id) {\n          setFriends([...friends, friend.id]);\n        }\n\n        return null;\n      });\n    }\n  }, [currentUserData]);\n  useEffect(() => {\n    if (currentUserData) {\n      currentUserData.user2.friends.map(() => {});\n    }\n  });\n\n  const addFriend = async friendId => {\n    const friendIdList = [];\n    user.friends.map((friend, index) => {\n      if (friend.id) {\n        friendIdList.push(friend.id);\n      }\n\n      return null;\n    });\n    console.log(user.friends);\n    const friend = friendIdList.includes(friendId);\n    const me = friendIdList.includes(user.id);\n    console.log(\"friend\", friend);\n    console.log(\"me\", me);\n    console.log(user.friends.id);\n\n    if (friends) {\n      if (friend) {\n        console.log(\"HELLLOOOOO\");\n        console.log(\"already a friend\");\n        return false;\n      } else {\n        editUser({\n          variables: {\n            id: user.id,\n            addFriend: friendId\n          },\n          refetchQueries: [{\n            query: currentUserQuery\n          }],\n          awaitRefetchQueries: true\n        }).catch(err => {\n          var _err$graphQLErrors;\n\n          const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n          console.log(errors);\n        });\n      }\n    }\n  };\n\n  const renderAvaliableUsers = () => {\n    return data.users.map((user, index) => {\n      const accountStart = user.id.slice(0, 6);\n      const accountEnd = user.id.slice(-4);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addFriend(user.id),\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: data ? renderAvaliableUsers() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddFriends, \"ohIjXtKxBmW3e33NABFza8JCT7w=\", true, function () {\n  return [useQuery, useQuery, useMutation];\n});\n\n_c = AddFriends;\nexport default AddFriends;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFriends\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js"],"names":["React","useEffect","useState","useMutation","useQuery","useLazyQuery","getUsers","styles","mutation","currentUserQuery","AddFriends","currentUser","useAppSelector","state","loading","error","data","currentUserLoading","errorcurrentUserError","currentUserData","editUser","user","setUser","friends","setFriends","user2","map","friend","index","id","addFriend","friendId","friendIdList","push","console","log","includes","me","variables","refetchQueries","query","awaitRefetchQueries","catch","err","errors","graphQLErrors","message","renderAvaliableUsers","users","accountStart","slice","accountEnd","userCard","name","email","container","cardsContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport getUsers from \"../../../GQL/queries/getUsers\";\nimport styles from \"./AddFriends.module.css\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\n\nconst AddFriends = () => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let { loading, error, data } = useQuery(getUsers);\n  let {\n    loading: currentUserLoading,\n    errorcurrentUserError,\n    data: currentUserData,\n  } = useQuery(currentUserQuery);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [friends, setFriends] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n    }\n    if (currentUserData) {\n      setFriends([]);\n      const currentUser = currentUserData.user2;\n\n      setUser(currentUser);\n\n      currentUser.friends.map((friend, index) => {\n        if (friend.id) {\n          setFriends([...friends, friend.id]);\n        }\n        return null;\n      });\n    }\n  }, [currentUserData]);\n\n  useEffect(() => {\n    if (currentUserData) {\n      currentUserData.user2.friends.map(() => {});\n    }\n  });\n\n  const addFriend = async (friendId) => {\n    const friendIdList = [];\n\n    user.friends.map((friend, index) => {\n      if (friend.id) {\n        friendIdList.push(friend.id);\n      }\n      return null;\n    });\n\n    console.log(user.friends);\n    const friend = friendIdList.includes(friendId);\n    const me = friendIdList.includes(user.id);\n    console.log(\"friend\", friend);\n    console.log(\"me\", me);\n    console.log(user.friends.id);\n    if (friends) {\n      if (friend) {\n        console.log(\"HELLLOOOOO\");\n        console.log(\"already a friend\");\n        return false;\n      } else {\n        editUser({\n          variables: {\n            id: user.id,\n            addFriend: friendId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        });\n      }\n    }\n  };\n\n  const renderAvaliableUsers = () => {\n    return data.users.map((user, index) => {\n      const accountStart = user.id.slice(0, 6);\n      const accountEnd = user.id.slice(-4);\n      return (\n        <div key={index} className={styles.userCard}>\n          <h1>{user.name}</h1>\n          <h3>{user.email}</h3>\n          <button onClick={() => addFriend(user.id)}>Add Friend</button>\n        </div>\n      );\n    });\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.cardsContainer}>\n        {data ? renderAvaliableUsers() : null}\n      </div>\n    </div>\n  );\n};\n\nexport default AddFriends;\n"]},"metadata":{},"sourceType":"module"}