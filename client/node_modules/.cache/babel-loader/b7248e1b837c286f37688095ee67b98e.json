{"ast":null,"code":"import _slicedToArray from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import styles from\"./MakeComment.module.css\";import React,{useState,useEffect}from\"react\";import{useAppSelector,useAppDispatch}from\"../../../../redux/hooks\";import{useMutation,useQuery}from\"@apollo/client\";import editUserMutation from\"../../../../GQL/mutations/editUser\";import editCommentMutation from\"../../../../GQL/mutations/editComment\";import editPostMutation from\"../../../../GQL/mutations/editPost\";import addCommentMutation from\"../../../../GQL/mutations/addComment\";import currentUserQuery from\"../../../../GQL/queries/CurrentUser\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MakeComment=function MakeComment(_ref){var commentOpen=_ref.commentOpen,setCommentOpen=_ref.setCommentOpen,postId=_ref.postId;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),commentText=_useState2[0],setCommentText=_useState2[1];// const [editUser] = useMutation(editUserMutation);\nvar _useMutation=useMutation(addCommentMutation),_useMutation2=_slicedToArray(_useMutation,1),addComment=_useMutation2[0];var _useMutation3=useMutation(editPostMutation),_useMutation4=_slicedToArray(_useMutation3,1),editPost=_useMutation4[0];var currentUser=useAppSelector(function(state){return state.currentUser;});useEffect(function(){if(currentUser.friends){// console.log(postId);\n// console.log(\"current User\", currentUser.friends);\n}},[currentUser]);var onSubmit=function onSubmit(e){e.preventDefault();commentText.length>0?addComment({variables:{postId:postId,userId:currentUser.id,comment:commentText},refetchQueries:[{query:currentUserQuery}],awaitRefetchQueries:true}).then(function(res){return editPost({variables:{id:postId,addComment:res.data.addComment.id},refetchQueries:[{query:currentUserQuery}],awaitRefetchQueries:true}).catch(function(err){var _err$graphQLErrors;var errors=(_err$graphQLErrors=err.graphQLErrors)===null||_err$graphQLErrors===void 0?void 0:_err$graphQLErrors.map(function(error){return error.message;});console.log(errors);}).then([setCommentOpen(!commentOpen),setCommentText(\"\")]);}).catch(function(err){var _err$graphQLErrors2;var errors=(_err$graphQLErrors2=err.graphQLErrors)===null||_err$graphQLErrors2===void 0?void 0:_err$graphQLErrors2.map(function(error){return error.message;});console.log(errors);}):console.log(\"need to have post greater than zero length\");};if(commentOpen){return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"form\",{action:\"\",className:styles.formContainer,onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.profilePicContainer,children:currentUser.profilePic?/*#__PURE__*/_jsx(\"img\",{src:currentUser.profilePic,alt:\"\",className:styles.profilePic}):/*#__PURE__*/_jsx(\"img\",{src:\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\",alt:\"\",className:styles.profilePic})}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){return setCommentText(e.target.value);},className:styles.input,placeholder:\"What's on your mind, \".concat(currentUser.name,\"?\")}),/*#__PURE__*/_jsx(\"button\",{className:styles.btn,children:\"Submit\"})]})});}else{return null;}};export default MakeComment;","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/EverythingPosts/MakeComment/MakeComment.js"],"names":["styles","React","useState","useEffect","useAppSelector","useAppDispatch","useMutation","useQuery","editUserMutation","editCommentMutation","editPostMutation","addCommentMutation","currentUserQuery","MakeComment","commentOpen","setCommentOpen","postId","commentText","setCommentText","addComment","editPost","currentUser","state","friends","onSubmit","e","preventDefault","length","variables","userId","id","comment","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","console","log","container","formContainer","profilePicContainer","profilePic","target","value","input","name","btn"],"mappings":"2KAAA,MAAOA,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,yBAA/C,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,gBAAtC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uCAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sCAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qCAA7B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA6C,IAA1CC,CAAAA,WAA0C,MAA1CA,WAA0C,CAA7BC,cAA6B,MAA7BA,cAA6B,CAAbC,MAAa,MAAbA,MAAa,CAC/D,cAAsCd,QAAQ,CAAC,EAAD,CAA9C,wCAAOe,WAAP,eAAoBC,cAApB,eACA;AACA,iBAAqBZ,WAAW,CAACK,kBAAD,CAAhC,8CAAOQ,UAAP,kBACA,kBAAmBb,WAAW,CAACI,gBAAD,CAA9B,+CAAOU,QAAP,kBACA,GAAMC,CAAAA,WAAW,CAAGjB,cAAc,CAAC,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAAlC,CAEAlB,SAAS,CAAC,UAAM,CACd,GAAIkB,WAAW,CAACE,OAAhB,CAAyB,CACvB;AACA;AACD,CACF,CALQ,CAKN,CAACF,WAAD,CALM,CAAT,CAOA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACAT,WAAW,CAACU,MAAZ,CAAqB,CAArB,CACIR,UAAU,CAAC,CACTS,SAAS,CAAE,CACTZ,MAAM,CAAEA,MADC,CAETa,MAAM,CAAER,WAAW,CAACS,EAFX,CAGTC,OAAO,CAAEd,WAHA,CADF,CAMTe,cAAc,CAAE,CAAC,CAAEC,KAAK,CAAErB,gBAAT,CAAD,CANP,CAOTsB,mBAAmB,CAAE,IAPZ,CAAD,CAAV,CASGC,IATH,CASQ,SAACC,GAAD,QACJhB,CAAAA,QAAQ,CAAC,CACPQ,SAAS,CAAE,CACTE,EAAE,CAAEd,MADK,CAETG,UAAU,CAAEiB,GAAG,CAACC,IAAJ,CAASlB,UAAT,CAAoBW,EAFvB,CADJ,CAKPE,cAAc,CAAE,CAAC,CAAEC,KAAK,CAAErB,gBAAT,CAAD,CALT,CAMPsB,mBAAmB,CAAE,IANd,CAAD,CAAR,CAQGI,KARH,CAQS,SAACC,GAAD,CAAS,wBACd,GAAMC,CAAAA,MAAM,qBAAGD,GAAG,CAACE,aAAP,6CAAG,mBAAmBC,GAAnB,CAAuB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAjB,EAAvB,CAAf,CAEAC,OAAO,CAACC,GAAR,CAAYN,MAAZ,EACD,CAZH,EAaGL,IAbH,CAaQ,CAACpB,cAAc,CAAC,CAACD,WAAF,CAAf,CAA+BI,cAAc,CAAC,EAAD,CAA7C,CAbR,CADI,EATR,EAyBGoB,KAzBH,CAyBS,SAACC,GAAD,CAAS,yBACd,GAAMC,CAAAA,MAAM,sBAAGD,GAAG,CAACE,aAAP,8CAAG,oBAAmBC,GAAnB,CAAuB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAjB,EAAvB,CAAf,CACAC,OAAO,CAACC,GAAR,CAAYN,MAAZ,EACD,CA5BH,CADJ,CA8BIK,OAAO,CAACC,GAAR,CAAY,4CAAZ,CA9BJ,CA+BD,CAjCD,CAmCA,GAAIhC,WAAJ,CAAiB,CACf,mBACE,YAAK,SAAS,CAAEd,MAAM,CAAC+C,SAAvB,uBACE,cAAM,MAAM,CAAC,EAAb,CAAgB,SAAS,CAAE/C,MAAM,CAACgD,aAAlC,CAAiD,QAAQ,CAAExB,QAA3D,wBACE,YAAK,SAAS,CAAExB,MAAM,CAACiD,mBAAvB,UACG5B,WAAW,CAAC6B,UAAZ,cACC,YACE,GAAG,CAAE7B,WAAW,CAAC6B,UADnB,CAEE,GAAG,CAAC,EAFN,CAGE,SAAS,CAAElD,MAAM,CAACkD,UAHpB,EADD,cAOC,YACE,GAAG,CAAC,qJADN,CAEE,GAAG,CAAC,EAFN,CAGE,SAAS,CAAElD,MAAM,CAACkD,UAHpB,EARJ,EADF,cAgBE,iBACE,QAAQ,CAAE,kBAACzB,CAAD,QAAOP,CAAAA,cAAc,CAACO,CAAC,CAAC0B,MAAF,CAASC,KAAV,CAArB,EADZ,CAEE,SAAS,CAAEpD,MAAM,CAACqD,KAFpB,CAGE,WAAW,gCAA0BhC,WAAW,CAACiC,IAAtC,KAHb,EAhBF,cAqBE,eAAQ,SAAS,CAAEtD,MAAM,CAACuD,GAA1B,oBArBF,GADF,EADF,CA2BD,CA5BD,IA4BO,CACL,MAAO,KAAP,CACD,CACF,CAhFD,CAkFA,cAAe1C,CAAAA,WAAf","sourcesContent":["import styles from \"./MakeComment.module.css\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport editUserMutation from \"../../../../GQL/mutations/editUser\";\nimport editCommentMutation from \"../../../../GQL/mutations/editComment\";\nimport editPostMutation from \"../../../../GQL/mutations/editPost\";\nimport addCommentMutation from \"../../../../GQL/mutations/addComment\";\nimport currentUserQuery from \"../../../../GQL/queries/CurrentUser\";\n\nconst MakeComment = ({ commentOpen, setCommentOpen, postId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  // const [editUser] = useMutation(editUserMutation);\n  const [addComment] = useMutation(addCommentMutation);\n  const [editPost] = useMutation(editPostMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    if (currentUser.friends) {\n      // console.log(postId);\n      // console.log(\"current User\", currentUser.friends);\n    }\n  }, [currentUser]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    commentText.length > 0\n      ? addComment({\n          variables: {\n            postId: postId,\n            userId: currentUser.id,\n            comment: commentText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editPost({\n              variables: {\n                id: postId,\n                addComment: res.data.addComment.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n              .then([setCommentOpen(!commentOpen), setCommentText(\"\")])\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  if (commentOpen) {\n    return (\n      <div className={styles.container}>\n        <form action=\"\" className={styles.formContainer} onSubmit={onSubmit}>\n          <div className={styles.profilePicContainer}>\n            {currentUser.profilePic ? (\n              <img\n                src={currentUser.profilePic}\n                alt=\"\"\n                className={styles.profilePic}\n              />\n            ) : (\n              <img\n                src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                alt=\"\"\n                className={styles.profilePic}\n              />\n            )}\n          </div>\n          <textarea\n            onChange={(e) => setCommentText(e.target.value)}\n            className={styles.input}\n            placeholder={`What's on your mind, ${currentUser.name}?`}\n          ></textarea>\n          <button className={styles.btn}>Submit</button>\n        </form>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default MakeComment;\n"]},"metadata":{},"sourceType":"module"}