{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  const wrapperRef = useRef(null);\n  let [logout] = useMutation(mutation);\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(currentUserQuery);\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector(state => state.currentUser);\n  const dispatch = useAppDispatch(false);\n  const [open, setOpen] = useState(false);\n  const [close, setClose] = useState(false);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    const fetchAccounts = () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true); // console.log(currentUser);\n      } else {\n        console.log(\"bro\");\n        setIsUser(false); //?????\n      }\n    };\n\n    fetchAccounts();\n  }, [data, currentUser]);\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {// console.log(currentUser);\n  }, [setIsUser]);\n\n  const onLogoutCLick = () => {\n    logout({\n      refetchQueries: [{\n        query: currentUserQuery\n      }],\n      awaitRefetchQueries: true\n    }).catch(err => console.log(err));\n  };\n\n  const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container0,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileDropdown, {\n        close: close,\n        setClose: setClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileDropdownInitiator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      open: open,\n      setOpen: setOpen,\n      close: close,\n      setClose: setClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"qhpol7LlHWRDJpqgHawLZ3J4YzY=\", false, function () {\n  return [useMutation, useQuery, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","useRef","SideNav","useQuery","useMutation","setCurrentUser","currentUserQuery","useAppSelector","useAppDispatch","ProfileDropdown","Link","useLocation","mutation","ProfileDropdownInitiator","Dropdown","NavBar","wrapperRef","logout","loading","error","data","isUser","setIsUser","currentUser","state","dispatch","open","setOpen","close","setClose","document","addEventListener","handleClickOutside","removeEventListener","fetchAccounts","user2","console","log","onLogoutCLick","refetchQueries","query","awaitRefetchQueries","catch","err","event","current","contains","target","container0","container"],"mappings":"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","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nconst NavBar = () => {\n  const wrapperRef = useRef(null);\n  let [logout] = useMutation(mutation);\n  let { loading, error, data } = useQuery(currentUserQuery);\n  const [isUser, setIsUser] = useState();\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const dispatch = useAppDispatch(false);\n  const [open, setOpen] = useState(false);\n  const [close, setClose] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    const fetchAccounts = () => {\n      if (data) {\n        dispatch(setCurrentUser(data.user2));\n        setIsUser(true);\n        // console.log(currentUser);\n      } else {\n        console.log(\"bro\");\n        setIsUser(false); //?????\n      }\n    };\n    fetchAccounts();\n  }, [data, currentUser]);\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    // console.log(currentUser);\n  }, [setIsUser]);\n\n  const onLogoutCLick = () => {\n    logout({\n      refetchQueries: [{ query: currentUserQuery }],\n      awaitRefetchQueries: true,\n    }).catch((err) => console.log(err));\n  };\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setOpen(false);\n    }\n  };\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container}>\n        <SideNav />\n        <ProfileDropdown close={close} setClose={setClose} />\n      </div>\n      <ProfileDropdownInitiator />\n      <Dropdown\n        open={open}\n        setOpen={setOpen}\n        close={close}\n        setClose={setClose}\n      />\n    </div>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}