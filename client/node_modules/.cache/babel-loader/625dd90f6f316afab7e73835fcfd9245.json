{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = _ref => {\n  _s();\n\n  let {\n    currentFriend,\n    chooseRoomPage,\n    setChooseRoomPage\n  } = _ref;\n  const messageRef = useRef();\n  const {\n    messageList,\n    addMessage,\n    setConvoId\n  } = useMessages();\n  const {\n    messages,\n    sendMessage\n  } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector(state => state.currentRoom.value);\n  useEffect(() => {\n    const scoll = async () => {\n      const delay = ms => new Promise(res => setTimeout(res, ms));\n\n      if (chooseRoomPage === false) {\n        var _messageRef$current;\n\n        await delay(5000);\n        (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.scrollIntoView({\n          behavior: \"instant\"\n        });\n      }\n    };\n  });\n\n  const renderMessages = () => {\n    // ref={messageRef}\n    const listLength = messages.length;\n    return messages.map((msg, index) => {\n      // if (index === listLength - 1) {\n      //   return (\n      //     <p\n      //       key={index}\n      //       ref={messageRef}\n      //       className={`${msg.isOwner ? styles.blue : styles.red}\n      //         ${styles.msg}`}\n      //     >\n      //       {msg.body}\n      //     </p>\n      //   );\n      // }\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`,\n        children: msg.body\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    } // addMessage()\n\n\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.friendNameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setChooseRoomPage(!chooseRoomPage),\n        children: \"go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), currentFriend ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Chatting With: \", currentFriend]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageContainer,\n      children: room === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.noRoomMessageContainer,\n        children: [\"Please Select a \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), \" Room To Join\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageList,\n          children: [renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBtnContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Start Chatting\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBox, \"RFOIQN8FVG8jEMVXlvnwEc5s7IY=\", false, function () {\n  return [useMessages, useChatRoom, useAppSelector];\n});\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js"],"names":["styles","React","useState","useEffect","useRef","useMutation","useQuery","useLazyQuery","useChatRoom","useMessages","useAppSelector","useAppDispatch","ChatBox","currentFriend","chooseRoomPage","setChooseRoomPage","messageRef","messageList","addMessage","setConvoId","messages","sendMessage","newMessage","setNewMessage","finalMessageList","setFinalMessageList","room","state","currentRoom","value","scoll","delay","ms","Promise","res","setTimeout","current","scrollIntoView","behavior","renderMessages","listLength","length","map","msg","index","isOwner","blue","red","body","onSubmit","e","preventDefault","container","friendNameContainer","messageContainer","noRoomMessageContainer","inputBtnContainer","target"],"mappings":"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","sourcesContent":["import styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst ChatBox = ({ currentFriend, chooseRoomPage, setChooseRoomPage }) => {\n  const messageRef = useRef();\n  const { messageList, addMessage, setConvoId } = useMessages();\n  const { messages, sendMessage } = useChatRoom(messageList);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [finalMessageList, setFinalMessageList] = useState(null);\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  useEffect(() => {\n    const scoll = async () => {\n      const delay = (ms) => new Promise((res) => setTimeout(res, ms));\n      if (chooseRoomPage === false) {\n        await delay(5000);\n        messageRef.current?.scrollIntoView({ behavior: \"instant\" });\n      }\n    };\n  });\n  const renderMessages = () => {\n    // ref={messageRef}\n    const listLength = messages.length;\n    return messages.map((msg, index) => {\n      // if (index === listLength - 1) {\n      //   return (\n      //     <p\n      //       key={index}\n      //       ref={messageRef}\n      //       className={`${msg.isOwner ? styles.blue : styles.red}\n      //         ${styles.msg}`}\n      //     >\n      //       {msg.body}\n      //     </p>\n      //   );\n      // }\n      return (\n        <p\n          key={index}\n          className={`${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`}\n        >\n          {msg.body}\n        </p>\n      );\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    }\n    // addMessage()\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.friendNameContainer}>\n        <div onClick={() => setChooseRoomPage(!chooseRoomPage)}>go back</div>\n        {currentFriend ? <h1>Chatting With: {currentFriend}</h1> : null}\n      </h2>\n      <div className={styles.messageContainer}>\n        {room === \"\" ? (\n          <div className={styles.noRoomMessageContainer}>\n            Please Select a <br /> Room To Join\n          </div>\n        ) : (\n          <div>\n            <div className={styles.messageList}>\n              {/* messages here */}\n              {renderMessages()}\n              <div ref={messageRef}>{}</div>\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------------------------- */}\n      </div>\n      <div className={styles.inputBtnContainer}>\n        <form action=\"\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            placeholder=\"Start Chatting\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}