{"ast":null,"code":"import _regeneratorRuntime from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useMutation,useQuery,useLazyQuery}from\"@apollo/client\";import getUsers from\"../../../GQL/queries/getUsers\";import styles from\"./AddFriends.module.css\";import mutation from\"../../../GQL/mutations/editUser\";import currentUserQuery from\"../../../GQL/queries/CurrentUser\";import{useAppSelector,useAppDispatch}from\"../../../redux/hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddFriends=function AddFriends(_ref){var setFriendListOpen=_ref.setFriendListOpen,friendListOpen=_ref.friendListOpen;var currentUser=useAppSelector(function(state){return state.currentUser;});var _useQuery=useQuery(getUsers),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;var _useMutation=useMutation(mutation),_useMutation2=_slicedToArray(_useMutation,1),editUser=_useMutation2[0];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),friends=_useState2[0],setFriends=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchBarText=_useState4[0],setSearchBarText=_useState4[1];/* -------------------------------------------------------------------------- */useEffect(function(){refetch();},[]);/* -------------------------------------------------------------------------- */useEffect(function(){currentUser.friends.map(function(friend,index){if(friend.id){setFriends([].concat(_toConsumableArray(friends),[friend.id]));}return null;});},[currentUser]);var addFriend=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(friendId){var friendIdList,friend,me;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:friendIdList=[];currentUser.friends.map(function(friend,index){if(friend.id){friendIdList.push(friend.id);}return null;});console.log(currentUser.friends);friend=friendIdList.includes(friendId);me=friendIdList.includes(currentUser.id);console.log(\"friend\",friend);console.log(\"me\",me);console.log(currentUser.friends.id);if(!friends){_context.next=16;break;}if(!friend){_context.next=15;break;}console.log(\"HELLLOOOOO\");console.log(\"already a friend\");return _context.abrupt(\"return\",false);case 15:editUser({variables:{id:currentUser.id,addFriend:friendId},refetchQueries:[{query:currentUserQuery}],awaitRefetchQueries:true}).catch(function(err){var _err$graphQLErrors;var errors=(_err$graphQLErrors=err.graphQLErrors)===null||_err$graphQLErrors===void 0?void 0:_err$graphQLErrors.map(function(error){return error.message;});console.log(errors);});case 16:case\"end\":return _context.stop();}}},_callee);}));return function addFriend(_x){return _ref2.apply(this,arguments);};}();var renderAvaliableUsers=function renderAvaliableUsers(){console.log(\"USERS\",data.users);var noCurrentUserArray=data.users.filter(function(user){return user.id!==currentUser.id;});/* -------------------------------------------------------------------------- */ // const noCurrentUserArray1 = noCurrentUserArray.filter(\n//   (user) => user.id !== currentUser.id\n// );\nvar arrayOfFriendIds=Array.from(currentUser.friends,function(x){return x.id;});// const hi = noCurrentUserArray.find((item) => item.id === currentUser.id);\n// console.log(\"ffff\", hi);\n/* -------------------------------------------------------------------------- */ // const filteredUser = finalArray.filter((user) =>\n//   user.email.startswith(searchBarText)\n// );\nvar avaliableUsers=noCurrentUserArray.map(function(user,index){// if (user.email.startswith(searchBarText)) {\nif(user.email.startsWith(searchBarText)){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:styles.userCard,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.nameEmailContainer,children:[user.profilePic?/*#__PURE__*/_jsx(\"img\",{className:styles.userProfilePic,src:user.profilePic,alt:\"\"}):/*#__PURE__*/_jsx(\"img\",{className:styles.userProfilePic,src:\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\",alt:\"\"}),/*#__PURE__*/_jsx(\"h2\",{className:styles.name,children:user.name}),/*#__PURE__*/_jsx(\"h4\",{className:styles.email,children:user.email})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.buttonContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.addFriendButton0,children:!arrayOfFriendIds.includes(user.id)?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return addFriend(user.id);},className:styles.addFriendButton,children:\"Add Friend\"}):/*#__PURE__*/_jsx(\"button\",{// onClick={() => addFriend(user.id)}\nclassName:styles.addedFriendButton,children:\"Added \\u2713\"})})})]})},index);}});return avaliableUsers;};return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.seachContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.backArrowContainer,onClick:function onClick(){return setFriendListOpen(true);},children:[/*#__PURE__*/_jsx(\"p\",{children:\"Find Friends\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.backArrow,children:\" \\u21A9 \"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Search Users\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchBarText,onChange:function onChange(e){return setSearchBarText(e.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.cardsListContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.paddingBottomWorkingPlaceHolder,children:/*#__PURE__*/_jsx(\"div\",{className:styles.cardsListContainerCenter,children:data?renderAvaliableUsers():null})})})]});};export default AddFriends;","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Friends/AddFriends/AddFriends.js"],"names":["React","useEffect","useState","useMutation","useQuery","useLazyQuery","getUsers","styles","mutation","currentUserQuery","useAppSelector","useAppDispatch","AddFriends","setFriendListOpen","friendListOpen","currentUser","state","loading","error","data","refetch","editUser","friends","setFriends","searchBarText","setSearchBarText","map","friend","index","id","addFriend","friendId","friendIdList","push","console","log","includes","me","variables","refetchQueries","query","awaitRefetchQueries","catch","err","errors","graphQLErrors","message","renderAvaliableUsers","users","noCurrentUserArray","filter","user","arrayOfFriendIds","Array","from","x","avaliableUsers","email","startsWith","userCard","nameEmailContainer","profilePic","userProfilePic","name","buttonContainer","addFriendButton0","addFriendButton","addedFriendButton","container","seachContainer","backArrowContainer","backArrow","e","target","value","cardsListContainer","paddingBottomWorkingPlaceHolder","cardsListContainerCenter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport getUsers from \"../../../GQL/queries/getUsers\";\nimport styles from \"./AddFriends.module.css\";\nimport mutation from \"../../../GQL/mutations/editUser\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst AddFriends = ({ setFriendListOpen, friendListOpen }) => {\n  const currentUser = useAppSelector((state) => state.currentUser);\n  let { loading, error, data, refetch } = useQuery(getUsers);\n  const [editUser] = useMutation(mutation);\n  const [friends, setFriends] = useState([]);\n  const [searchBarText, setSearchBarText] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        setFriends([...friends, friend.id]);\n      }\n      return null;\n    });\n  }, [currentUser]);\n\n  const addFriend = async (friendId) => {\n    const friendIdList = [];\n\n    currentUser.friends.map((friend, index) => {\n      if (friend.id) {\n        friendIdList.push(friend.id);\n      }\n      return null;\n    });\n\n    console.log(currentUser.friends);\n    const friend = friendIdList.includes(friendId);\n    const me = friendIdList.includes(currentUser.id);\n    console.log(\"friend\", friend);\n    console.log(\"me\", me);\n    console.log(currentUser.friends.id);\n    if (friends) {\n      if (friend) {\n        console.log(\"HELLLOOOOO\");\n        console.log(\"already a friend\");\n        return false;\n      } else {\n        editUser({\n          variables: {\n            id: currentUser.id,\n            addFriend: friendId,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        }).catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        });\n      }\n    }\n  };\n\n  const renderAvaliableUsers = () => {\n    console.log(\"USERS\", data.users);\n    const noCurrentUserArray = data.users.filter(\n      (user) => user.id !== currentUser.id\n    );\n\n    /* -------------------------------------------------------------------------- */\n    // const noCurrentUserArray1 = noCurrentUserArray.filter(\n    //   (user) => user.id !== currentUser.id\n    // );\n    const arrayOfFriendIds = Array.from(currentUser.friends, (x) => x.id);\n\n    // const hi = noCurrentUserArray.find((item) => item.id === currentUser.id);\n    // console.log(\"ffff\", hi);\n    /* -------------------------------------------------------------------------- */\n\n    // const filteredUser = finalArray.filter((user) =>\n    //   user.email.startswith(searchBarText)\n    // );\n    const avaliableUsers = noCurrentUserArray.map((user, index) => {\n      // if (user.email.startswith(searchBarText)) {\n      if (user.email.startsWith(searchBarText)) {\n        return (\n          <div key={index}>\n            <div className={styles.userCard}>\n              <div className={styles.nameEmailContainer}>\n                {user.profilePic ? (\n                  <img\n                    className={styles.userProfilePic}\n                    src={user.profilePic}\n                    alt=\"\"\n                  />\n                ) : (\n                  <img\n                    className={styles.userProfilePic}\n                    src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80\"\n                    alt=\"\"\n                  />\n                )}\n                <h2 className={styles.name}>{user.name}</h2>\n                <h4 className={styles.email}>{user.email}</h4>\n              </div>\n              <div className={styles.buttonContainer}>\n                <div className={styles.addFriendButton0}>\n                  {!arrayOfFriendIds.includes(user.id) ? (\n                    <button\n                      onClick={() => addFriend(user.id)}\n                      className={styles.addFriendButton}\n                    >\n                      Add Friend\n                    </button>\n                  ) : (\n                    <button\n                      // onClick={() => addFriend(user.id)}\n                      className={styles.addedFriendButton}\n                    >\n                      Added &#10003;\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    });\n    return avaliableUsers;\n  };\n  return (\n    <div className={styles.container}>\n      {/* -------------------------------------------------------------------------- */}\n      <div className={styles.seachContainer}>\n        <div\n          className={styles.backArrowContainer}\n          onClick={() => setFriendListOpen(true)}\n        >\n          <p>Find Friends</p>\n          <span className={styles.backArrow}> &#x21A9; </span>\n        </div>\n        <h3>Search Users</h3>\n        <input\n          type=\"text\"\n          value={searchBarText}\n          onChange={(e) => setSearchBarText(e.target.value)}\n        />\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n      <div className={styles.cardsListContainer}>\n        <div className={styles.paddingBottomWorkingPlaceHolder}>\n          <div className={styles.cardsListContainerCenter}>\n            {data ? renderAvaliableUsers() : null}\n          </div>\n        </div>\n      </div>\n      {/* -------------------------------------------------------------------------- */}\n    </div>\n  );\n};\n\nexport default AddFriends;\n"]},"metadata":{},"sourceType":"module"}