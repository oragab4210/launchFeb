{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  id: \"\",\n  name: \"\",\n  email: undefined,\n  friends: undefined,\n  conversations: undefined,\n  posts: undefined\n}; // id: undefined,\n// name: undefined,\n// email: undefined,\n// friends: undefined,\n// conversations: undefined,\n// posts: undefined,\n\nexport const currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.value = action.payload;\n      console.log(action.payload, \"action\");\n      console.log(state, \"state\");\n    }\n  }\n});\nexport const {\n  setCurrentUser\n} = currentUserSlice.actions;\nexport default currentUserSlice.reducer;","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/redux/features/currentUserSlice.ts"],"names":["createSlice","initialState","id","name","email","undefined","friends","conversations","posts","currentUserSlice","reducers","setCurrentUser","state","action","value","payload","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAEC,SAHY;AAInBC,EAAAA,OAAO,EAAED,SAJU;AAKnBE,EAAAA,aAAa,EAAEF,SALI;AAMnBG,EAAAA,KAAK,EAAEH;AANY,CAArB,C,CAQA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,gBAAgB,GAAGT,WAAW,CAAC;AAC1CG,EAAAA,IAAI,EAAE,aADoC;AAE1CF,EAAAA,YAF0C;AAG1CS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA6C;AAC3DD,MAAAA,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACE,OAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB,EAA4B,QAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmB,OAAnB;AACD;AALO;AAHgC,CAAD,CAApC;AAYP,OAAO,MAAM;AAAED,EAAAA;AAAF,IAAqBF,gBAAgB,CAACS,OAA5C;AACP,eAAeT,gBAAgB,CAACU,OAAhC","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface UserState {\n  id: any;\n  name?: string;\n  email?: string;\n  friends?: string[] | never[];\n  conversations?: string[] | never[];\n  posts?: string[] | never[];\n}\nconst initialState = {\n  id: \"\"!,\n  name: \"\"!,\n  email: undefined!,\n  friends: undefined!,\n  conversations: undefined!,\n  posts: undefined!,\n};\n// id: undefined,\n// name: undefined,\n// email: undefined,\n// friends: undefined,\n// conversations: undefined,\n// posts: undefined,\n\nexport const currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    setCurrentUser: (state, action: PayloadAction<UserState>) => {\n      state.value = action.payload;\n      console.log(action.payload, \"action\");\n      console.log(state, \"state\");\n    },\n  },\n});\n\nexport const { setCurrentUser } = currentUserSlice.actions;\nexport default currentUserSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}