{"ast":null,"code":"import _slicedToArray from\"/Users/omarragab/Documents/Job/ResumeProject1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import styles from\"./PostForm.module.css\";import React,{useState,useEffect,useRef}from\"react\";import{Modal}from\"./modal/modal\";import{useAppSelector,useAppDispatch}from\"../../../redux/hooks\";import X_SVG from\"./x.svg\";import addPostMutation from\"../../../GQL/mutations/addPost\";import editUserMutation from\"../../../GQL/mutations/editUser\";import{useMutation,useQuery,useLazyQuery}from\"@apollo/client\";import currentUserQuery from\"../../../GQL/queries/CurrentUser\";import{gsap}from\"gsap\";import LoadingSpinner from\"../../LoadingSpinner/LoadingSpinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostForm=function PostForm(_ref){var showModal=_ref.showModal,setShowModal=_ref.setShowModal;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),postText=_useState2[0],setPostText=_useState2[1];var _useMutation=useMutation(addPostMutation),_useMutation2=_slicedToArray(_useMutation,1),addPost=_useMutation2[0];var _useMutation3=useMutation(editUserMutation),_useMutation4=_slicedToArray(_useMutation3,1),editUser=_useMutation4[0];var currentUser=useAppSelector(function(state){return state.currentUser;});var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];// let modal = useRef();\n// useEffect(() => {\n//   gsap.from(modal.current, { y: 180, opacity: 0, duration: 0.5 });\n//   // gsap.from(textContainer.current, { x: -140, opacity: 0, duration: 0.7 });\n//   // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n// }, [showModal]);\nuseEffect(function(){if(currentUser.friends){}},[currentUser]);var _onSubmit=function onSubmit(e){e.preventDefault();setLoading(true);postText.length>0?addPost({variables:{userId:currentUser.id,post:postText},refetchQueries:[{query:currentUserQuery}],awaitRefetchQueries:true}).then(function(res){return editUser({variables:{id:currentUser.id,addPost:res.data.addPost.id},refetchQueries:[{query:currentUserQuery}],awaitRefetchQueries:true}).then(function(res){return[setLoading(false),setShowModal(!showModal)];}).catch(function(err){var _err$graphQLErrors;var errors=(_err$graphQLErrors=err.graphQLErrors)===null||_err$graphQLErrors===void 0?void 0:_err$graphQLErrors.map(function(error){return error.message;});console.log(errors);});}).catch(function(err){var _err$graphQLErrors2;var errors=(_err$graphQLErrors2=err.graphQLErrors)===null||_err$graphQLErrors2===void 0?void 0:_err$graphQLErrors2.map(function(error){return error.message;});console.log(errors);}):console.log(\"need to have post greater than zero length\");};return/*#__PURE__*/_jsx(Modal,{showModal:showModal,setShowModal:setShowModal,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.container// ref={modal}\n,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.createPostContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.titleContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Post\"}),/*#__PURE__*/_jsx(\"img\",{className:styles.x_svg,src:X_SVG,alt:\"exit\",onClick:function onClick(){return setShowModal(!showModal);}})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.name_and_pic_Container})]}),/*#__PURE__*/_jsx(\"form\",{action:\"\",onSubmit:function onSubmit(e){return _onSubmit(e);},children:/*#__PURE__*/_jsxs(\"div\",{className:styles.contentContainer,children:[loading?/*#__PURE__*/_jsx(\"div\",{className:styles.LoadingSpinner,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}):null,/*#__PURE__*/_jsx(\"div\",{className:styles.inputContainer,children:/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){return setPostText(e.target.value);},className:styles.input,placeholder:\"What's on your mind, \".concat(currentUser.name,\"?\")// maxlength=\"1\"\n})}),/*#__PURE__*/_jsx(\"div\",{className:styles.postBtnContainer,children:/*#__PURE__*/_jsx(\"button\",{className:styles.postBtn,children:\"Post\"})})]})})]})});};export default PostForm;","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Home/PostForm/PostForm.js"],"names":["styles","React","useState","useEffect","useRef","Modal","useAppSelector","useAppDispatch","addPostMutation","editUserMutation","useMutation","useQuery","useLazyQuery","currentUserQuery","gsap","LoadingSpinner","PostForm","showModal","setShowModal","postText","setPostText","addPost","editUser","currentUser","state","loading","setLoading","friends","onSubmit","e","preventDefault","length","variables","userId","id","post","refetchQueries","query","awaitRefetchQueries","then","res","data","catch","err","errors","graphQLErrors","map","error","message","console","log","container","createPostContainer","titleContainer","x_svg","X_SVG","name_and_pic_Container","contentContainer","inputContainer","target","value","input","name","postBtnContainer","postBtn"],"mappings":"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","sourcesContent":["import styles from \"./PostForm.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"./modal/modal\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport X_SVG from \"./x.svg\";\nimport addPostMutation from \"../../../GQL/mutations/addPost\";\nimport editUserMutation from \"../../../GQL/mutations/editUser\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { gsap } from \"gsap\";\nimport LoadingSpinner from \"../../LoadingSpinner/LoadingSpinner\";\n\nconst PostForm = ({ showModal, setShowModal }) => {\n  const [postText, setPostText] = useState(\"\");\n  const [addPost] = useMutation(addPostMutation);\n  const [editUser] = useMutation(editUserMutation);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const [loading, setLoading] = useState(false);\n  // let modal = useRef();\n\n  // useEffect(() => {\n  //   gsap.from(modal.current, { y: 180, opacity: 0, duration: 0.5 });\n  //   // gsap.from(textContainer.current, { x: -140, opacity: 0, duration: 0.7 });\n  //   // gsap.from(loginFormContainer.current, { x: 0, opacity: 0, duration: 1.6 });\n  // }, [showModal]);\n  useEffect(() => {\n    if (currentUser.friends) {\n    }\n  }, [currentUser]);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    postText.length > 0\n      ? addPost({\n          variables: {\n            userId: currentUser.id,\n            post: postText,\n          },\n          refetchQueries: [{ query: currentUserQuery }],\n          awaitRefetchQueries: true,\n        })\n          .then((res) =>\n            editUser({\n              variables: {\n                id: currentUser.id,\n                addPost: res.data.addPost.id,\n              },\n              refetchQueries: [{ query: currentUserQuery }],\n              awaitRefetchQueries: true,\n            })\n              .then((res) => [setLoading(false), setShowModal(!showModal)])\n              .catch((err) => {\n                const errors = err.graphQLErrors?.map((error) => error.message);\n\n                console.log(errors);\n              })\n          )\n          .catch((err) => {\n            const errors = err.graphQLErrors?.map((error) => error.message);\n            console.log(errors);\n          })\n      : console.log(\"need to have post greater than zero length\");\n  };\n\n  return (\n    <Modal showModal={showModal} setShowModal={setShowModal}>\n      <div\n        className={styles.container}\n        // ref={modal}\n      >\n        <div className={styles.createPostContainer}>\n          <div className={styles.titleContainer}>\n            <h2>Create Post</h2>\n            <img\n              className={styles.x_svg}\n              src={X_SVG}\n              alt=\"exit\"\n              onClick={() => setShowModal(!showModal)}\n            />\n          </div>\n          <div className={styles.name_and_pic_Container}>\n            {/* <p> pic and name here and maybe drop down of friends</p> */}\n          </div>\n        </div>\n\n        <form action=\"\" onSubmit={(e) => onSubmit(e)}>\n          <div className={styles.contentContainer}>\n            {loading ? (\n              <div className={styles.LoadingSpinner}>\n                <LoadingSpinner />\n              </div>\n            ) : null}\n            <div className={styles.inputContainer}>\n              <textarea\n                onChange={(e) => setPostText(e.target.value)}\n                className={styles.input}\n                placeholder={`What's on your mind, ${currentUser.name}?`}\n                // maxlength=\"1\"\n              ></textarea>\n            </div>\n            <div className={styles.postBtnContainer}>\n              <button className={styles.postBtn}>Post</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}