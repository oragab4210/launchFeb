{"ast":null,"code":"import _regeneratorRuntime from\"/Users/omarragab/Documents/test/launchFeb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omarragab/Documents/test/launchFeb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import{render}from\"react-dom\";import\"./index.css\";/* -------------------------------------------------------------------------- */import{Provider}from\"react-redux\";import{store}from\"./redux/store\";import App from\"./App\";/* -------------------------------------------------------------------------- */import{ApolloClient,ApolloProvider,InMemoryCache,HttpLink}from\"@apollo/client\";import{persistCache,LocalStorageWrapper}from\"apollo3-cache-persist\";import CurrentUser from\"./GQL/queries/CurrentUser\";import setUser from\"./GQL/queries/setUser\";/* -------------------------------------------------------------------------- */ /* -------------------------------------------------------------------------- */import{jsx as _jsx}from\"react/jsx-runtime\";var cache=new InMemoryCache();var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return persistCache({cache:cache,storage:window.localStorage});case 2:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();var client=new ApolloClient({link:new HttpLink({// uri: `${process.env.REACT_APP_CLIENT_URL}/graphql`,\nuri:\"http://localhost:4000/graphql\",credentials:\"include\"}),cache:cache,connectToDevTools:true});try{cache.readQuery({query:setUser});}catch(error){cache.writeData({data:{user:[]}});}/* -------------------------------------------------------------------------- */ /* -------------------------------------------------------------------------- */ // const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n/* -------------------------------------------------------------------------- */ /* -------------------------------------------------------------------------- */render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(App,{})})})}),document.getElementById(\"root\"));init();","map":{"version":3,"sources":["/Users/omarragab/Documents/test/launchFeb/client/src/index.js"],"names":["React","render","Provider","store","App","ApolloClient","ApolloProvider","InMemoryCache","HttpLink","persistCache","LocalStorageWrapper","CurrentUser","setUser","cache","init","storage","window","localStorage","client","link","uri","credentials","connectToDevTools","readQuery","query","error","writeData","data","user","document","getElementById"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,MAAO,aAAP,CACA,gFACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,gFACA,OACEC,YADF,CAEEC,cAFF,CAGEC,aAHF,CAIEC,QAJF,KAKO,gBALP,CAMA,OAASC,YAAT,CAAuBC,mBAAvB,KAAkD,uBAAlD,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,gF,CACA,gF,2CACA,GAAMC,CAAAA,KAAK,CAAG,GAAIN,CAAAA,aAAJ,EAAd,CACA,GAAMO,CAAAA,IAAI,0FAAG,yJACLL,CAAAA,YAAY,CAAC,CACjBI,KAAK,CAALA,KADiB,CAEjBE,OAAO,CAAEC,MAAM,CAACC,YAFC,CAAD,CADP,uDAAH,kBAAJH,CAAAA,IAAI,0CAAV,CAOA,GAAMI,CAAAA,MAAM,CAAG,GAAIb,CAAAA,YAAJ,CAAiB,CAC9Bc,IAAI,CAAE,GAAIX,CAAAA,QAAJ,CAAa,CACjB;AACAY,GAAG,gCAFc,CAGjBC,WAAW,CAAE,SAHI,CAAb,CADwB,CAM9BR,KAAK,CAAEA,KANuB,CAO9BS,iBAAiB,CAAE,IAPW,CAAjB,CAAf,CASA,GAAI,CACFT,KAAK,CAACU,SAAN,CAAgB,CACdC,KAAK,CAAEZ,OADO,CAAhB,EAGD,CAAC,MAAOa,KAAP,CAAc,CACdZ,KAAK,CAACa,SAAN,CAAgB,CACdC,IAAI,CAAE,CACJC,IAAI,CAAE,EADF,CADQ,CAAhB,EAKD,CACD,gF,CACA,gF,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gF,CACA,gFAEA3B,MAAM,cACJ,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,cAAD,EAAgB,MAAM,CAAEiB,MAAxB,uBACE,KAAC,QAAD,EAAU,KAAK,CAAEf,KAAjB,uBACE,KAAC,GAAD,IADF,EADF,EADF,EADI,CAQJ0B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARI,CAAN,CAUAhB,IAAI","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n/* -------------------------------------------------------------------------- */\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n/* -------------------------------------------------------------------------- */\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n} from \"@apollo/client\";\nimport { persistCache, LocalStorageWrapper } from \"apollo3-cache-persist\";\nimport CurrentUser from \"./GQL/queries/CurrentUser\";\nimport setUser from \"./GQL/queries/setUser\";\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\nconst cache = new InMemoryCache();\nconst init = async () => {\n  await persistCache({\n    cache,\n    storage: window.localStorage,\n  });\n};\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    // uri: `${process.env.REACT_APP_CLIENT_URL}/graphql`,\n    uri: `http://localhost:4000/graphql`,\n    credentials: \"include\",\n  }),\n  cache: cache,\n  connectToDevTools: true,\n});\ntry {\n  cache.readQuery({\n    query: setUser,\n  });\n} catch (error) {\n  cache.writeData({\n    data: {\n      user: [],\n    },\n  });\n}\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n// const client = new ApolloClient({\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n//     credentials: \"include\",\n//   }),\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n\nrender(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\ninit();\n"]},"metadata":{},"sourceType":"module"}