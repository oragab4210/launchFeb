{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = () => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const navShow = !dontShowUp.includes(pathname);\n  let {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector(state => state.currentUser);\n  const dispatch = useAppDispatch(false); // const socketRef = useRef();\n\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    refetch();\n\n    if (data) {\n      console.log(data.user2, \"NavBar\");\n      dispatch(setCurrentUser(data.user2));\n    }\n  }, [data]);\n  useEffect(() => {\n    if (navShow) {\n      console.log(\"working\");\n    }\n  }); // useEffect(() => {\n  //   console.log(socketRef);\n  //   if (data) {\n  //     console.log(\"DATAAAA\", data.user2);\n  //   }\n  //   if (data) {\n  //     if (socketRef !== undefined && !data.user2) {\n  //       socketRef.current.disconnect();\n  //       console.log(\"BOOM\");\n  //       socketRef.current = null;\n  //       console.log(\"socket ref\", socketRef);\n  //     }\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   if (data) {\n  //     if (data.user2 !== null) {\n  //       console.log(\"brooo\");\n  //       socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n  //       setSocketActive(true);\n  //     }\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   refetch();\n  //   socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n  //   if (data) {\n  //     if (data.user2) {\n  //       dispatch(setCurrentUser(data.user2));\n  //     }\n  //   }\n  //   if (data && data.user2 && socketActive) {\n  //     // socketRef.current.emit(\"login\", { userId: data.user2.id });\n  //     // console.log(data.user2.id, \"NavBar\");\n  //     // dispatch(setCurrentUser(data.user2));\n  //     setAbleToSetUserOnline(true);\n  //     setOpen(!open);\n  //     console.log(\"done\");\n  //   }\n  // }, [data, socketActive]);\n  // useEffect(() => {\n  //   if (ableToSetUserOnline && data.user2) {\n  //     socketRef.current.emit(\"login\", { userId: data.user2.id });\n  //     socketRef.current.on(\"onlineUsers\", (data) => {\n  //       console.log(\"socket if font end\", socketRef.current.id);\n  //       setSocketIdForLogout(socketRef.current.id);\n  //       console.log(\"hehehe\", data);\n  //       const onlineUsers = Object.entries(data);\n  //       const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n  //       console.log(onlineIds);\n  //       dispatch(setOnlineUsers(onlineIds));\n  //     });\n  //     // return () => {\n  //     // socketRef.current.disconnect();\n  //     // };\n  //   }\n  // }, [ableToSetUserOnline && data.user2]);\n\n  /* -------------------------------------------------------------------------- */\n  // if (includedPath) {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container0,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileDropdownInitiator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container69,\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestDropDown // socketRef={socketRef}\n      // socketIdFromNav={socketIdForLogoutset}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this); // } else {\n  //   return null;\n  // }\n};\n\n_s(NavBar, \"j+lNfxXBFk2qyfH0KUcSKEbfAWE=\", false, function () {\n  return [useLocation, useQuery, useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Job/ResumeProject1/client/src/components/Navigation/NavBar/NavBar.js"],"names":["styles","React","useState","useEffect","useRef","SideNav","useQuery","useMutation","setCurrentUser","setOnlineUsers","currentUserQuery","setSocket","useAppSelector","useAppDispatch","Link","useLocation","mutation","ProfileDropdownInitiator","TestDropDown","socketIOClient","SOCKET_SERVER_URL","NavBar","pathname","dontShowUp","navShow","includes","loading","error","data","refetch","currentUser","state","dispatch","console","log","user2","container0","container","container69"],"mappings":"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","sourcesContent":["import styles from \"./NavBar.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SideNav from \"../SideNav/SideNav\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { setCurrentUser } from \"../../../redux/features/currentUserSlice\";\nimport { setOnlineUsers } from \"../../../redux/features/onlineUsersSlice\";\nimport currentUserQuery from \"../../../GQL/queries/CurrentUser\";\nimport { setSocket } from \"../../../redux/features/socketSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mutation from \"../../../GQL/mutations/Logout\";\nimport ProfileDropdownInitiator from \"../ProfileDropdownInitiator/ProfileDropdownInitiator\";\nimport TestDropDown from \"../TestDropDown/TestDropDown\";\nimport socketIOClient from \"socket.io-client\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst NavBar = () => {\n  const { pathname } = useLocation();\n  const dontShowUp = [\"/\", \"/login\"];\n  const navShow = !dontShowUp.includes(pathname);\n  let { loading, error, data, refetch } = useQuery(currentUserQuery);\n  const currentUser = useAppSelector((state) => state.currentUser);\n  const dispatch = useAppDispatch(false);\n  // const socketRef = useRef();\n\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    refetch();\n    if (data) {\n      console.log(data.user2, \"NavBar\");\n      dispatch(setCurrentUser(data.user2));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (navShow) {\n      console.log(\"working\");\n    }\n  });\n\n  // useEffect(() => {\n  //   console.log(socketRef);\n  //   if (data) {\n  //     console.log(\"DATAAAA\", data.user2);\n  //   }\n  //   if (data) {\n  //     if (socketRef !== undefined && !data.user2) {\n  //       socketRef.current.disconnect();\n  //       console.log(\"BOOM\");\n  //       socketRef.current = null;\n  //       console.log(\"socket ref\", socketRef);\n  //     }\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   if (data) {\n  //     if (data.user2 !== null) {\n  //       console.log(\"brooo\");\n\n  //       socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n  //       setSocketActive(true);\n  //     }\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   refetch();\n\n  //   socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n\n  //   if (data) {\n  //     if (data.user2) {\n  //       dispatch(setCurrentUser(data.user2));\n  //     }\n  //   }\n\n  //   if (data && data.user2 && socketActive) {\n  //     // socketRef.current.emit(\"login\", { userId: data.user2.id });\n  //     // console.log(data.user2.id, \"NavBar\");\n  //     // dispatch(setCurrentUser(data.user2));\n  //     setAbleToSetUserOnline(true);\n\n  //     setOpen(!open);\n  //     console.log(\"done\");\n  //   }\n  // }, [data, socketActive]);\n\n  // useEffect(() => {\n  //   if (ableToSetUserOnline && data.user2) {\n  //     socketRef.current.emit(\"login\", { userId: data.user2.id });\n\n  //     socketRef.current.on(\"onlineUsers\", (data) => {\n  //       console.log(\"socket if font end\", socketRef.current.id);\n  //       setSocketIdForLogout(socketRef.current.id);\n  //       console.log(\"hehehe\", data);\n  //       const onlineUsers = Object.entries(data);\n  //       const onlineIds = Array.from(onlineUsers, (x) => x[1]);\n  //       console.log(onlineIds);\n  //       dispatch(setOnlineUsers(onlineIds));\n  //     });\n  //     // return () => {\n  //     // socketRef.current.disconnect();\n  //     // };\n  //   }\n  // }, [ableToSetUserOnline && data.user2]);\n\n  /* -------------------------------------------------------------------------- */\n\n  // if (includedPath) {\n  return (\n    <div className={styles.container0}>\n      <div className={styles.container}>\n        <SideNav />\n        <ProfileDropdownInitiator />\n      </div>\n      <div className={styles.container69}>\n        <SideNav />\n        <TestDropDown\n        // socketRef={socketRef}\n        // socketIdFromNav={socketIdForLogoutset}\n        />\n      </div>\n    </div>\n  );\n  // } else {\n  //   return null;\n  // }\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}