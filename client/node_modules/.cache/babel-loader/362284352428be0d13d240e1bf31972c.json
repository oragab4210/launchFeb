{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = () => {\n  _s();\n\n  const messageRef = useRef();\n  const {\n    messageList,\n    addMessage\n  } = useMessages();\n  const {\n    messages,\n    sendMessage\n  } = useChatRoom(messageList); // const [messages, setMessages] = useState([]);\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [roomText, setRoomText] = useState(\"\");\n  const room = useAppSelector(state => state.currentRoom.value);\n  useEffect(() => messageRef.current.scrollIntoView({\n    behavior: \"smooth\"\n  }));\n\n  const renderMessages = () => {\n    return messages.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`,\n        children: msg.body\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    } // addMessage()\n\n\n    console.log(\"hi\"); //   setMessages([...messages, newMessage]);\n\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.friendNameContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friend Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageContainer,\n      children: [room === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.noRoomMessage,\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageList,\n        children: [renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputBtn,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"\",\n            id: \"\",\n            placeholder: \"Start Chatting\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBox, \"HtDjY96Ha3vKmosYyp0XjT5/hZg=\", false, function () {\n  return [useMessages, useChatRoom, useAppSelector];\n});\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/CHAT/ChatBox/ChatBox.js"],"names":["styles","React","useState","useEffect","useRef","useChatRoom","useMessages","useAppSelector","useAppDispatch","ChatBox","messageRef","messageList","addMessage","messages","sendMessage","newMessage","setNewMessage","roomText","setRoomText","room","state","currentRoom","value","current","scrollIntoView","behavior","renderMessages","map","msg","index","isOwner","blue","red","body","onSubmit","e","preventDefault","console","log","container","friendNameContainer","messageContainer","noRoomMessage","inputBtn","target"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,sBAA/C;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,UAAU,GAAGN,MAAM,EAAzB;AACA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BN,WAAW,EAA/C;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BT,WAAW,CAACM,WAAD,CAA7C,CAHoB,CAIpB;;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,IAAI,GAAGZ,cAAc,CAAEa,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,KAA9B,CAA3B;AAEAnB,EAAAA,SAAS,CAAC,MAAMO,UAAU,CAACa,OAAX,CAAmBC,cAAnB,CAAkC;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAlC,CAAP,CAAT;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3B,WAAOb,QAAQ,CAACc,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,0BACE;AAEE,QAAA,SAAS,EAAG,GAAED,GAAG,CAACE,OAAJ,GAAc9B,MAAM,CAAC+B,IAArB,GAA4B/B,MAAM,CAACgC,GAAI;AAC/D,YAAYhC,MAAM,CAAC4B,GAAI,EAHf;AAAA,kBAKGA,GAAG,CAACK;AALP,SACOJ,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVM,CAAP;AAWD,GAZD;;AAaA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIrB,UAAU,KAAK,EAAnB,EAAuB;AACrBD,MAAAA,WAAW,CAACC,UAAD,CAAX;AACD,KAJqB,CAKtB;;;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EANsB,CAOtB;;AACAtB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GATD;AAUA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACuC,SAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEvC,MAAM,CAACwC,mBAAvB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACyC,gBAAvB;AAAA,iBACGtB,IAAI,KAAK,EAAT,gBACC;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAAC0C,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAK,QAAA,SAAS,EAAE1C,MAAM,CAACW,WAAvB;AAAA,mBAEGe,cAAc,EAFjB,eAGE;AAAK,UAAA,GAAG,EAAEhB;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAYE;AAAK,QAAA,SAAS,EAAEV,MAAM,CAAC2C,QAAvB;AAAA,+BACE;AAAM,UAAA,MAAM,EAAC,EAAb;AAAgB,UAAA,QAAQ,EAAET,QAA1B;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,EAFP;AAGE,YAAA,EAAE,EAAC,EAHL;AAIE,YAAA,WAAW,EAAC,gBAJd;AAKE,YAAA,KAAK,EAAEnB,UALT;AAME,YAAA,QAAQ,EAAGoB,CAAD,IAAOnB,aAAa,CAACmB,CAAC,CAACS,MAAF,CAAStB,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAnED;;GAAMb,O;UAEgCH,W,EACFD,W,EAIrBE,c;;;KAPTE,O;AAqEN,eAAeA,OAAf","sourcesContent":["import styles from \"./ChatBox.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useChatRoom from \"../useChatRoom\";\nimport useMessages from \"../useMessages\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\n\nconst ChatBox = () => {\n  const messageRef = useRef();\n  const { messageList, addMessage } = useMessages();\n  const { messages, sendMessage } = useChatRoom(messageList);\n  // const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [roomText, setRoomText] = useState(\"\");\n  const room = useAppSelector((state) => state.currentRoom.value);\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n  const renderMessages = () => {\n    return messages.map((msg, index) => {\n      return (\n        <p\n          key={index}\n          className={`${msg.isOwner ? styles.blue : styles.red} \n          ${styles.msg}`}\n        >\n          {msg.body}\n        </p>\n      );\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage);\n    }\n    // addMessage()\n    console.log(\"hi\");\n    //   setMessages([...messages, newMessage]);\n    setNewMessage(\"\");\n  };\n  /* -------------------------------------------------------------------------- */\n  return (\n    <div className={styles.container}>\n      <div className={styles.friendNameContainer}>\n        <h1>Friend Name</h1>\n      </div>\n      <div className={styles.messageContainer}>\n        {room === \"\" ? (\n          <div className={styles.noRoomMessage}>hi</div>\n        ) : (\n          <div className={styles.messageList}>\n            {/* messages here */}\n            {renderMessages()}\n            <div ref={messageRef}>{/* message ref */}</div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------------------------- */}\n        <div className={styles.inputBtn}>\n          <form action=\"\" onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Start Chatting\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n            />\n            <button>Send</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}