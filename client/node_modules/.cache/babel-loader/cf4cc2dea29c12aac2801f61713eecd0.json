{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/omarragab/Documents/test/launchFeb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nfunction fromSplit(split) {\n  var _split = _slicedToArray(split, 5),\n      protectedHeader = _split[0],\n      encrypted_key = _split[1],\n      iv = _split[2],\n      ciphertext = _split[3],\n      tag = _split[4];\n\n  var jwe = {\n    ciphertext: ciphertext,\n    iv: iv,\n    protected: protectedHeader,\n    tag: tag\n  };\n  if (encrypted_key) jwe.recipients = [{\n    encrypted_key: encrypted_key\n  }];\n  return jwe;\n}\n\nfunction encodeRecipient(recipient) {\n  var encRec = {};\n  if (recipient.encrypted_key) encRec.encrypted_key = utils_1.fromBase64url(recipient.encrypted_key);\n  if (recipient.header) encRec.header = recipient.header;\n  return encRec;\n}\n\nfunction encode(jwe) {\n  var encJwe = {\n    ciphertext: utils_1.fromBase64url(jwe.ciphertext),\n    protected: utils_1.fromBase64url(jwe.protected),\n    iv: utils_1.fromBase64url(jwe.iv),\n    tag: utils_1.fromBase64url(jwe.tag)\n  };\n  if (jwe.aad) encJwe.aad = utils_1.fromBase64url(jwe.aad);\n  if (jwe.recipients) encJwe.recipients = jwe.recipients.map(encodeRecipient);\n  if (jwe.unprotected) encJwe.unprotected = jwe.unprotected;\n  return encJwe;\n}\n\nfunction decodeRecipient(encoded) {\n  var recipient = {};\n  if (encoded.encrypted_key) recipient.encrypted_key = utils_1.toBase64url(encoded.encrypted_key);\n  if (encoded.header) recipient.header = encoded.header;\n  return recipient;\n}\n\nfunction decode(encoded) {\n  var jwe = {\n    ciphertext: utils_1.toBase64url(encoded.ciphertext),\n    protected: utils_1.toBase64url(encoded.protected),\n    iv: utils_1.toBase64url(encoded.iv),\n    tag: utils_1.toBase64url(encoded.tag)\n  };\n  if (encoded.aad) jwe.aad = utils_1.toBase64url(encoded.aad);\n  if (encoded.recipients) jwe.recipients = encoded.recipients.map(decodeRecipient);\n  if (encoded.unprotected) jwe.unprotected = encoded.unprotected;\n  return jwe;\n}\n\nexports.default = {\n  fromSplit: fromSplit,\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"sources":["../src/encryption.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\nfunction fromSplit(split) {\n    const [protectedHeader, encrypted_key, iv, ciphertext, tag] = split;\n    const jwe = {\n        ciphertext,\n        iv,\n        protected: protectedHeader,\n        tag,\n    };\n    if (encrypted_key)\n        jwe.recipients = [{ encrypted_key }];\n    return jwe;\n}\nfunction encodeRecipient(recipient) {\n    const encRec = {};\n    if (recipient.encrypted_key)\n        encRec.encrypted_key = utils_1.fromBase64url(recipient.encrypted_key);\n    if (recipient.header)\n        encRec.header = recipient.header;\n    return encRec;\n}\nfunction encode(jwe) {\n    const encJwe = {\n        ciphertext: utils_1.fromBase64url(jwe.ciphertext),\n        protected: utils_1.fromBase64url(jwe.protected),\n        iv: utils_1.fromBase64url(jwe.iv),\n        tag: utils_1.fromBase64url(jwe.tag),\n    };\n    if (jwe.aad)\n        encJwe.aad = utils_1.fromBase64url(jwe.aad);\n    if (jwe.recipients)\n        encJwe.recipients = jwe.recipients.map(encodeRecipient);\n    if (jwe.unprotected)\n        encJwe.unprotected = jwe.unprotected;\n    return encJwe;\n}\nfunction decodeRecipient(encoded) {\n    const recipient = {};\n    if (encoded.encrypted_key)\n        recipient.encrypted_key = utils_1.toBase64url(encoded.encrypted_key);\n    if (encoded.header)\n        recipient.header = encoded.header;\n    return recipient;\n}\nfunction decode(encoded) {\n    const jwe = {\n        ciphertext: utils_1.toBase64url(encoded.ciphertext),\n        protected: utils_1.toBase64url(encoded.protected),\n        iv: utils_1.toBase64url(encoded.iv),\n        tag: utils_1.toBase64url(encoded.tag),\n    };\n    if (encoded.aad)\n        jwe.aad = utils_1.toBase64url(encoded.aad);\n    if (encoded.recipients)\n        jwe.recipients = encoded.recipients.map(decodeRecipient);\n    if (encoded.unprotected)\n        jwe.unprotected = encoded.unprotected;\n    return jwe;\n}\nexports.default = {\n    fromSplit,\n    decode,\n    encode,\n};\n//# sourceMappingURL=encryption.js.map"]},"metadata":{},"sourceType":"script"}