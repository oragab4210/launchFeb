{"ast":null,"code":"var _jsxFileName = \"/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/MakePost/MakePost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./MakePost.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport profilePic from \"./profile.png\";\nimport { Modal } from \"../../LogInForm/modal/modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakePost = () => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(getCurrentUser);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    if (data) {\n      const user = data.user2;\n      setUser(user);\n      console.log(user);\n    }\n  }, [data]);\n  /* -------------------------------------------------------------------------- */\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text.length > 0) {\n      editUser({\n        variables: {\n          id: user.id,\n          addPost: {\n            post: text\n          }\n        },\n        refetchQueries: [{\n          query: getCurrentUser\n        }],\n        awaitRefetchQueries: true\n      }).then(res => console.log(\"yayy\")) //   .then((res) => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")])\n      .catch(err => {\n        var _err$graphQLErrors;\n\n        const errors = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(error => error.message);\n        console.log(errors);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.picInputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profilePic,\n          alt: \"\",\n          className: styles.profilePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          placeholder: \"What's on your mind,name here\",\n          type: \"text\",\n          name: \"\",\n          id: \"\" // onChange={(e) => setText(e.target.value)}\n          // onClick\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MakePost, \"2m6rR3aqpdWh2S7EM3ZYspOxJHA=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = MakePost;\nexport default MakePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakePost\");","map":{"version":3,"sources":["/Users/omarragab/Documents/Programming/ResumeProject1/client/src/components/EverythingPosts/MakePost/MakePost.js"],"names":["styles","React","useState","useEffect","useMutation","useQuery","mutation","getCurrentUser","profilePic","Modal","MakePost","loading","error","data","editUser","user","setUser","text","setText","user2","console","log","onSubmit","e","preventDefault","length","variables","id","addPost","post","refetchQueries","query","awaitRefetchQueries","then","res","catch","err","errors","graphQLErrors","map","message","container","picInputContainer","input"],"mappings":"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","sourcesContent":["import styles from \"./MakePost.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport mutation from \"../../../GQL/mutations/EditUser\";\nimport getCurrentUser from \"../../../GQL/queries/CurrentUser\";\nimport profilePic from \"./profile.png\";\nimport { Modal } from \"../../LogInForm/modal/modal\";\n\nconst MakePost = () => {\n  let { loading, error, data } = useQuery(getCurrentUser);\n  const [editUser] = useMutation(mutation);\n  const [user, setUser] = useState(null);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    if (data) {\n      const user = data.user2;\n      setUser(user);\n      console.log(user);\n    }\n  }, [data]);\n\n  /* -------------------------------------------------------------------------- */\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (text.length > 0) {\n      editUser({\n        variables: { id: user.id, addPost: { post: text } },\n        refetchQueries: [{ query: getCurrentUser }],\n        awaitRefetchQueries: true,\n      })\n        .then((res) => console.log(\"yayy\"))\n        //   .then((res) => [setAgeText(\"\"), setEmailText(\"\"), setNameText(\"\")])\n        .catch((err) => {\n          const errors = err.graphQLErrors?.map((error) => error.message);\n\n          console.log(errors);\n        });\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <form action=\"\" onSubmit={onSubmit}>\n        <div className={styles.picInputContainer}>\n          <img src={profilePic} alt=\"\" className={styles.profilePic} />\n          <input\n            className={styles.input}\n            placeholder=\"What's on your mind,name here\"\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            // onChange={(e) => setText(e.target.value)}\n            // onClick\n          />\n        </div>\n        {/* <button> hi</button> */}\n      </form>\n      <Modal />\n    </div>\n  );\n};\n\nexport default MakePost;\n"]},"metadata":{},"sourceType":"module"}